<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | Don&#39;t Blame the Data</title>
    <link>/categories/r/</link>
      <atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>©2023</copyright><lastBuildDate>Thu, 03 Mar 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/logo.jpg</url>
      <title>R</title>
      <link>/categories/r/</link>
    </image>
    
    <item>
      <title>Efficiently get Fotmob match IDs with worldfootballR</title>
      <link>/blog/extract-fotmob-data-with-worldfootballr/</link>
      <pubDate>Thu, 03 Mar 2022 00:00:00 +0000</pubDate>
      <guid>/blog/extract-fotmob-data-with-worldfootballr/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;&lt;img src=&#34;/img/r_worldfootballR_post_hero.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;With &lt;code&gt;worldfootballR&lt;/code&gt; recently including a wrapper for extracting Fotmob data, I thought it might be a good time to write a small post on how to get historical match IDs fairly efficiently.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tonyelhabr&#34;&gt;Tony ElHabr&lt;/a&gt; was able to write the code and contribute to &lt;code&gt;worldfootballR&lt;/code&gt;, and in doing so also wrote the very helpful and &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/articles/extract-fotmob-data.html&#34;&gt;informative guide&lt;/a&gt; for using the fotmob functions.&lt;/p&gt;
&lt;p&gt;Most of the fotmob functions need a match ID (or a series of IDs), so getting those is absolutely vital, but can include a few steps.&lt;/p&gt;
&lt;p&gt;This guide will show a few of those methods.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(worldfootballR)&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;div id=&#34;first-the-current-season&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;First, the current season&lt;/h2&gt;
&lt;p&gt;If it’s just the current season we want match IDs for, then the below code (adapted from Tony’s code in the package vignette) will make that easy.&lt;/p&gt;
&lt;p&gt;First, using &lt;code&gt;fotmob_get_league_matches()&lt;/code&gt;, passing the &lt;code&gt;country&lt;/code&gt; and &lt;code&gt;league_name&lt;/code&gt; and unnesting the nested data frame,leavues us with a table of all EPL matches for the current season.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;league_matches &amp;lt;- fotmob_get_league_matches(
  country =     c(&amp;quot;ENG&amp;quot;),
  league_name = c(&amp;quot;Premier League&amp;quot;)
) %&amp;gt;%
  dplyr::select(match_id = id, home, away) %&amp;gt;%
  tidyr::unnest_wider(c(home, away), names_sep = &amp;quot;_&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From here, we could simply get all the match IDs for the current season contained in the &lt;code&gt;league_matches&lt;/code&gt; data frame, however this will include matches not yet played (postponed matches, matches not yet scheduled, etc). These unplayed match IDs could cause headaches when used in the match data functions, so we want to remove those:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;league_match_ids &amp;lt;- league_matches %&amp;gt;%
  
  # filter for records where the home_score isn&amp;#39;t missing
  dplyr::filter(!is.na(home_score)) %&amp;gt;% 
  
  # then pull out the match IDs:
  dplyr::pull(match_id)

head(league_match_ids)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;3609929&amp;quot; &amp;quot;3609934&amp;quot; &amp;quot;3609930&amp;quot; &amp;quot;3609931&amp;quot; &amp;quot;3609932&amp;quot; &amp;quot;3609933&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From here, the world is your oyster (for the current season only) and you can now use the match IDs vector &lt;code&gt;league_match_ids&lt;/code&gt; with the match-level functions outlined in the vignette &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/articles/extract-fotmob-data.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;ok-but-im-here-for-historical-match-ids&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Ok, but I’m here for historical Match IDs&lt;/h2&gt;
&lt;p&gt;So the above section was easy to get current season match IDs for a league, but what about if we wanted to retrieve the match IDs for a previous season? Well that’s a bit trickier…&lt;/p&gt;
&lt;p&gt;One option would be to pass in all dates in a calendar year to &lt;code&gt;fotmob_get_matches_by_date()&lt;/code&gt;, then filter for the league you want and get all match IDs that way, &lt;strong&gt;but this will be inefficient as you will be getting matches for ALL leagues played on every date&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Instead, we can fairly quickly get match dates from FBref using &lt;code&gt;get_match_results()&lt;/code&gt; and then use these dates to get fotmob match data.&lt;/p&gt;
&lt;p&gt;Below, we’re going to get match dates played in the Australian A-League Men’s competition for the 2020-21 season.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get dates A-League games are played - this is easiest done using worldfootballR
aleague &amp;lt;- get_match_results(country = &amp;quot;AUS&amp;quot;, gender = &amp;quot;M&amp;quot;, season_end_year = 2021)
aleague_dates &amp;lt;- aleague %&amp;gt;% 
  dplyr::filter(!is.na(HomeGoals)) %&amp;gt;% 
  dplyr::pull(Date) %&amp;gt;% 
  unique()

head(aleague_dates)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2020-12-28&amp;quot; &amp;quot;2020-12-29&amp;quot; &amp;quot;2020-12-30&amp;quot; &amp;quot;2020-12-31&amp;quot; &amp;quot;2021-01-02&amp;quot;
## [6] &amp;quot;2021-01-03&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok now that we have some dates, we can go ahead and get the data we need.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: this will take a few minutes (and more depending on how many dates atches are played on) - effectively you’re reading in every date summary page from fotmob&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The result of the below will be a data set with all leagues metadata with matches played on the dates used.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get match IDs from fotmob
match_id_df &amp;lt;- fotmob_get_matches_by_date(aleague_dates) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From there, we go and filter for the league we want and again, we filter out any matches that haven’t been played.&lt;/p&gt;
&lt;p&gt;The league ID (&lt;code&gt;primary_id&lt;/code&gt;) can be found in the League URL on the fotmob site, so replace &lt;code&gt;113&lt;/code&gt; with the relevant league id you’re after.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;required_match_id &amp;lt;- match_id_df %&amp;gt;%
  
  # select the league you need
  dplyr::filter(primary_id == 113) %&amp;gt;%
  
  # select the columns/nested df we want
  dplyr::select(primary_id, ccode, league_name = name, matches) %&amp;gt;%
  
  # Unnest the nested df of matches
  tidyr::unnest_longer(matches) %&amp;gt;%
  
  # only keep the matches actually played
  dplyr::filter(matches$status$started)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we get a vector of unique match IDs and now the world really is your oyster. These can then be used for the match-level data functions outlined in the &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/articles/extract-fotmob-data.html&#34;&gt;vignette&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get a unique vector of all match IDs on fotmob
match_ids &amp;lt;- required_match_id$matches$id %&amp;gt;% unique()

head(match_ids)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3488733 3488760 3488856 3488741 3488749 3488738&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ANALYSE FOOTBALL (SOCCER) DATA IN R WITH ZERO R EXPERIENCE</title>
      <link>/blog/extract-data-using-worldfootballr/</link>
      <pubDate>Sat, 05 Jun 2021 00:00:00 +0000</pubDate>
      <guid>/blog/extract-data-using-worldfootballr/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;&lt;img src=&#34;/img/r_worldfootballR_post_hero.png&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Do you find your love of football and curious mind converging to the point where you want to dig a little into the data to confirm if what your eyes are seeing is in fact what’s happening, but you just don’t know how to get started, or where to get data from? Or maybe you have already started doing some analysis in visualisation software, including PowerBI, Tableau, Excel, etc, or know enough about statistics to want to perform some statistical modelling, but you just need to know how to get access to more data, quicker and easier? Then this post will be for you.&lt;/p&gt;
&lt;p&gt;This post will hopefully teach you how to use worldfootballR - an R package built to aid in the extraction of world football data from a number of popular websites (with their consent).&lt;/p&gt;
&lt;p&gt;The post will demonstrate how to use the package to extract your data programmatically and save it in a suitable file format that your report ingests, saving you the manual steps of extracting data from popular websites listed below.&lt;/p&gt;
&lt;p&gt;Additionally, I will also aim to demonstrate the visualisation tools available in R, if you so choose to invest the time into learning R.&lt;/p&gt;
&lt;p&gt;A final aim of the post is to highlight what’s possible in R for those new to R programming in the hope that it stokes enough interest to get you started on your R learning journey.&lt;/p&gt;
&lt;p&gt;What this post won’t be is an in depth how-to-code-in-R post - there are plenty of online resources, including MOOCs, posts, screencasts, etc to do that. This post will focus on getting you up and running with data in your hands… or on your screens.&lt;/p&gt;
&lt;div id=&#34;what-data-can-i-get&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What data can I get?&lt;/h2&gt;
&lt;p&gt;The package as at version 0.3.2 provides access to data from the following data sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FBref.com (a whole host of data to analyse, including results, match stats, season long stats, player and team stats, etc);&lt;/li&gt;
&lt;li&gt;Transfermarkt.com (player market values, team transfer history, player transfer history); and,&lt;/li&gt;
&lt;li&gt;Understat.com (shot locations data for matches played in the major leagues)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These three sites are regularly used by analysts the world over, however the package is constantly evolving and may include data from additional sites in the future.&lt;/p&gt;
&lt;p&gt;To my knowledge, only FBref provide the ability to export data to a file - the other two don’t, so you’d need to find some other way to get your data (painfully slow copy and paste), and that’s where &lt;code&gt;worldfootballR&lt;/code&gt; come in.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;prerequisites&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;The only prerequisites to this post are that you have a computer, internet connection and the desire to analyse world football data. This post is designed to take any aspiring analyst with absolutely no R coding experience to being able to extract data programmatically using the &lt;code&gt;worldfootballR&lt;/code&gt; R library.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;what-is-r-why-would-i-use-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What is R / Why would I use R?&lt;/h2&gt;
&lt;p&gt;From R’s official site (&lt;a href=&#34;https://www.r-project.org/about.html&#34; class=&#34;uri&#34;&gt;https://www.r-project.org/about.html&lt;/a&gt;);&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;R is a language and environment for statistical computing and graphics.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can find out a lot more about R as you get more experienced with the language on the home page, but all you need to know for now is that R will be another tool in your toolkit to perform the analyses you want to do. R is an amazing programming framework that allows you to do a number of things, including data cleaning, performing statistical analysis and modeling and building fully customisable visualisations using the R programming language.&lt;/p&gt;
&lt;p&gt;Importantly, anything programmed means it’s repeatable. Set up your code upfront, then simply rerun it to get consistent results.&lt;/p&gt;
&lt;p&gt;The world is your oyster if you have the drive to learn.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;installing-r-and-rstudio&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Installing R and RStudio&lt;/h1&gt;
&lt;p&gt;This first section will detail the steps required to install R and RStudio, before you can get started with pulling data using &lt;code&gt;worldfootballR&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;getting-started&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting started&lt;/h2&gt;
&lt;p&gt;Ok so a few things before we dive right in… this is in layman’s terms (because I myself am a layman). R is the engine, the coding language driving everything you want to do, and RStudio is the pretty graphical user interface (GUI pronounced “gooey”) that gives you additional functionality when writing code in it. I am going to propose installing both R and RStudio in this post, but if you don’t want RStudio (I advise you to go with RStudio), you could still run the code to get the data you need (I will assume here everything is done in RStudio).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;install-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Install R&lt;/h2&gt;
&lt;p&gt;You remember how I said I’m a layman? It’ll extend itself here. We’re going to install R and we’re going to use all of the default options (just keep clicking “&lt;em&gt;accept&lt;/em&gt;” or “&lt;em&gt;agree&lt;/em&gt;”, or “&lt;em&gt;continue&lt;/em&gt;”, and nothing else until R has been successfully installed. You can customise the installation when you’re better versed in R, but for now, just show me the data!&lt;/p&gt;
&lt;p&gt;So how to find R to install R you ask? Well, you have to type into Google some really sophisticated stuff… “&lt;em&gt;download r windows&lt;/em&gt;” or on Mac OS… yep, you guessed it, “&lt;em&gt;download r mac&lt;/em&gt;”.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/download_r.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you can’t be bothered doing that, here are the links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For Windows OS: &lt;a href=&#34;https://cran.r-project.org/bin/windows/base/&#34; class=&#34;uri&#34;&gt;https://cran.r-project.org/bin/windows/base/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Select “Download R X.X.X for Windows”, with “X.X.X” being for whatever is the most recent version of R:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/download_r_win.jpg&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For Mac OS: &lt;a href=&#34;https://cran.r-project.org/bin/macosx/&#34; class=&#34;uri&#34;&gt;https://cran.r-project.org/bin/macosx/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Depending on what version of Mac OS you’re running will determine which version to install, but generally speaking it’ll only be one of the highlighted options below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/download_r_mac.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Once you have selected either of the Windows or Mac OS versions, install as you would any software, remembering my one special rule at the start of this section… default options all the way.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;now-for-rstudio&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Now for RStudio&lt;/h2&gt;
&lt;p&gt;Once R has been installed, we can now go ahead and install RStudio, remember, the GUI that will allow you to code in and provide additional functionality.&lt;/p&gt;
&lt;p&gt;Back to our intricate Google search query… “&lt;em&gt;download rstudio&lt;/em&gt;”, and select the first result:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/download_r_studio.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Or for the URL: &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34; class=&#34;uri&#34;&gt;https://www.rstudio.com/products/rstudio/download/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once we’ve opened the page, we’re presented with a few pricing options, but if you’re like almost all amateur analysts (let’s be honest, even professional analysts), you’re probably only going to need the free version:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/rstudio_options.jpg&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;were-almost-ready-to-start-coding&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;We’re (almost) ready to start coding!&lt;/h2&gt;
&lt;p&gt;Well, we’re almost ready to start coding, but first we’ll do a bit of a tour of RStudio (again, for those that have forgotten, RStudio is the software where we type and execute our R code).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/rstudio_display.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The console pane is where we will be able to see our code running (or run our code in here if we’re not using the scripts), whether there are any “errors” or “warnings” and printed outputs.&lt;/p&gt;
&lt;p&gt;The environment is the sections where we will see the objects that we’ve imported, or created, including data frames (think of something similar to an Excel table).&lt;/p&gt;
&lt;p&gt;In the viewers pane, there are a few tabs, including being able to navigate through the file system (‘Files’ tab), any visualisations we’ve created (‘Plots’ tab), the libraries/packages we have loaded on our machines and have available to us “locally” (‘Packages’ tab), a help section, where we can get additional details on what we need to provide the functions to work and a ‘Viewer’ tab to see HTML outputs.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;now-were-ready-to-start-coding&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Now we’re ready to start coding&lt;/h2&gt;
&lt;p&gt;Open up an R script (there are a number of different options to code in, but a .R script is the best place to start.&lt;/p&gt;
&lt;p&gt;To open up a script, you can either press &lt;code&gt;control+shift+n&lt;/code&gt; on a Windows machine, or &lt;code&gt;command+shift+n&lt;/code&gt; on a Mac, or you can select a new script with the drop down in the top-left corner:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/open_r_script.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Changing the layout as such:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/rstudio_full_layout.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We will start writing code in the top-left quadrant.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;worldfootballr&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;worldfootballR&lt;/h1&gt;
&lt;p&gt;So now we’re here, ready to start coding right? Well we’ve just got one more thing to cover off. What is &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/&#34;&gt;&lt;code&gt;worldfootballR&lt;/code&gt;&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;worldfootballR&lt;/code&gt; is a package made up of functions that aid in the extraction of data from popular football sites.&lt;/p&gt;
&lt;p&gt;I know what you’re thinking - what are functions??&lt;/p&gt;
&lt;p&gt;From &lt;a href=&#34;https://www.datacamp.com/community/tutorials/functions-in-r-a-tutorial&#34;&gt;DataCamp&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In programming, you use functions to incorporate sets of instructions that you want to use repeatedly or that, because of their complexity, are better self-contained in a sub program and called when needed. A function is a piece of code written to carry out a specified task; it can or can not accept arguments or parameters and it can or can not return one or more values.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Crystal clear right? Well all you need to know is that worldfootballR has taken lines and lines of code to extract data and essentially condensed it down to a line (and more importantly for you, no web scraping knowledge by you).&lt;/p&gt;
&lt;p&gt;Say for instance, you wanted to get match summary information for a particular match(es) from FBref.com… rather than learning about R programming and web scraping to be able to write this code:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/function_code.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;All you needed to do was run this line of code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;get_match_summary(match_url)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, so now I think we’re ready to start you writing code to extract and save data in a form you need.&lt;/p&gt;
&lt;div id=&#34;writing-code&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Writing code&lt;/h2&gt;
&lt;p&gt;Before I fully get in to the nuts and bolts of the code, I just want to point you to some resources.&lt;/p&gt;
&lt;p&gt;A website has been created for the worldfootballR package that will give you a full run down of all the functions available and the arguments you need to pass to those functions to get the data you want. The website can be found &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now we can really start writing code.&lt;/p&gt;
&lt;p&gt;As we’ve already established, packages contain functions (code to do something). To use these packages they need to be installed (downloaded onto our laptops) first.&lt;/p&gt;
&lt;p&gt;Packages will typically (but not limited to) either be housed on CRAN (a central repository for all packages) or on GitHub. &lt;code&gt;worldfootballR&lt;/code&gt; is housed on GitHub, so the instructions for installing this package are slightly different to the packages housed on CRAN. Before we can install &lt;code&gt;worldfootballR&lt;/code&gt;, we need to install the &lt;code&gt;devtools&lt;/code&gt; package to enable the installation of &lt;code&gt;worldfootballR&lt;/code&gt;. We will also install another package, &lt;code&gt;xlsx&lt;/code&gt; that will enable us to save files in ‘.xlsx’ format.&lt;/p&gt;
&lt;p&gt;We type (just copy and paste) these lines of code into our R script the first time we use R &lt;strong&gt;OR&lt;/strong&gt; when we update our version of R &lt;strong&gt;OR&lt;/strong&gt; the package updates its functionality:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# to allow us to install packages from github:
install.packages(&amp;quot;devtools&amp;quot;)

# a meta package that contains packages for data cleaning, analysis and visualisation
install.packages(&amp;quot;tidyverse&amp;quot;)

# to save xlsx files
install.packages(&amp;quot;xlsx&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You’ll know that they have successfully installed if there are no error messages and you can see the you see the “&amp;gt;” symbol and a blinking cursor in the console section.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/install_devtools.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Then we will install &lt;code&gt;worldfootballR&lt;/code&gt; (it’s what we’re all here for) and importantly load the library - it’s not enough to just install the package, we need to load it to make the functions easily available in our current session.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We only need to install the package the first time we install R &lt;strong&gt;OR&lt;/strong&gt; if we update our version of R, &lt;strong&gt;OR&lt;/strong&gt; if there is a update to a newer version of the package.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;devtools::install_github(&amp;quot;JaseZiv/worldfootballR&amp;quot;, ref = &amp;quot;main&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note 2:&lt;/strong&gt; While we only need to install it very infrequently, we need to load the package &lt;strong&gt;every time&lt;/strong&gt; we want to use the package.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(worldfootballR)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-world-is-your-oyster&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The world is your oyster&lt;/h2&gt;
&lt;p&gt;There are a number of functions in &lt;code&gt;worldfootballR&lt;/code&gt; to enable you to get all the data you need.&lt;/p&gt;
&lt;p&gt;To find these functions, you can visit the reference page on the package website &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/reference/index.html&#34;&gt;here&lt;/a&gt;. The reference page will give you a brief summary of what the function does - for more detailed info, click on the function and it’ll take you to the function page.&lt;/p&gt;
&lt;p&gt;Additionally, there are instructions and example code on the website for each of the sites data is collected from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/articles/extract-fbref-data.html&#34;&gt;here&lt;/a&gt; for &lt;strong&gt;FBref&lt;/strong&gt; data&lt;/li&gt;
&lt;li&gt;Click &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/articles/extract-transfermarkt-data.html&#34;&gt;here&lt;/a&gt; for &lt;strong&gt;Transfermarkt&lt;/strong&gt; data&lt;/li&gt;
&lt;li&gt;Click &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/articles/extract-understat-data.html&#34;&gt;here&lt;/a&gt; for &lt;strong&gt;Understat&lt;/strong&gt; data&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;lets-get-some-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Let’s get some data&lt;/h2&gt;
&lt;p&gt;Now the fun part - getting data!&lt;/p&gt;
&lt;p&gt;Before we get started, in the code below, when we see a “#” at the beginning of text, that is a comment, not executable code, and it’s how R programmers write notes to themselves, or others who use the code to give an overview of what is being done.&lt;/p&gt;
&lt;p&gt;At the start of every script, it is best practise to include all the packages you’re going to be using/needing in your analysis. Installing packages only needs to be done the first time you start using R, when installing new versions or R, or when newer versions of the package become available and you want the updates that have been created.&lt;/p&gt;
&lt;p&gt;The code we would run is below. A few things to remember:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;To ‘run’ code we’ve typed out, there are two main ways;&lt;/li&gt;
&lt;/ol&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;Highlight the code you want to run and press &lt;code&gt;control+enter&lt;/code&gt; or &lt;code&gt;command+enter&lt;/code&gt; on MacOS&lt;/li&gt;
&lt;li&gt;Have the cursor on the line you want to run and press &lt;code&gt;control+enter&lt;/code&gt; or &lt;code&gt;command+enter&lt;/code&gt; on MacOS&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;A “#” in a script signifies comments, and I will use them in the code to tell you what we’re doing&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# remember, we need to ensure we&amp;#39;ve installed the packages we need, but we need to do this very infrequently ( to run the &amp;#39;install&amp;#39; lines below, simply delete the &amp;#39;#&amp;#39; before the code:
# install.packages(&amp;quot;devtools&amp;quot;)
# install.packages(&amp;quot;xlsx&amp;quot;)
# install.packages(&amp;quot;tidyverse&amp;quot;)
# devtools::install_github(&amp;quot;JaseZiv/worldfootballR&amp;quot;, ref = &amp;quot;main&amp;quot;)


# once it&amp;#39;s been installed, then we need to load the functions (code to let you get the data you want) in the library (this needs to be done every time you want to run your script)
library(worldfootballR)
library(tidyverse)
library(xlsx)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;i-want-shooting-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;I want shooting data!&lt;/h3&gt;
&lt;p&gt;Let’s say we want to get the shooting data from FBref for teams in the 2020-2021 EPL season, to be able to analyse how many goals a team scored, or how they performed against expectation (xG), or from what average distance they shot from:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/fbref_shooting.jpg&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Source: FBref &lt;a href=&#34;https://fbref.com/en/comps/9/Premier-League-Stats&#34; class=&#34;uri&#34;&gt;https://fbref.com/en/comps/9/Premier-League-Stats&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Then we run the specific code to extract shooting data from FBref.com:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# now let&amp;#39;s get our season team shooting data from FBref:
prem_2021_shooting &amp;lt;- get_season_team_stats(country = &amp;quot;ENG&amp;quot;, gender = &amp;quot;M&amp;quot;, season_end_year = &amp;quot;2021&amp;quot;, tier = &amp;quot;1st&amp;quot;, stat_type = &amp;quot;shooting&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Scraping season shooting stats&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And this is what the data looks like in R now:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/shooting_output_r.jpg&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;i-just-want-the-data-and-nothing-else&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;I just want the data and nothing else&lt;/h3&gt;
&lt;p&gt;If all you want is a csv or Excel output (to take to some other software/framework), then the below lines of code will address that need:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# to save the file as a csv:
write.csv(x= prem_2021_shooting, file = &amp;quot;EPL_shooting_2021_season.csv&amp;quot;, row.names = FALSE)

# or we can save an .xlsx file:
write.xlsx(x= prem_2021_shooting, file = &amp;quot;EPL_shooting_2021_season.xlsx&amp;quot;, row.names = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And this is how our output looks, and this output can be fed in to any visualisation software we choose to use:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/shooting_output_csv.jpg&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;but-r-has-more-to-offer-right&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;But R has more to offer right?&lt;/h3&gt;
&lt;p&gt;R is a whole lot more than a tool for extracting and saving data.&lt;/p&gt;
&lt;p&gt;We can create fully customisable visualisations with code to analyse our data. This flexibility means your creative juices would only be constrained by your desire to practise and learn and practise and learn R.&lt;/p&gt;
&lt;p&gt;Below, we have plotted a team’s performance against expected goals for the season. Teams that finished above the line scored more goals that xG would have had them scored, while teams below the dashed line scored less.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get our data ready for plotting
prem_2021_shooting %&amp;gt;% 
  # filter out only the team shooting data, not their opponents also
  filter(Team_or_Opponent == &amp;quot;team&amp;quot;) %&amp;gt;% 
  # create a new column that removes penalties from the team&amp;#39;s goal total
  mutate(non_P_Gls = Gls_Standard - PK_Standard) %&amp;gt;% 
  # start plotting:
  ggplot(aes(x= npxG_Expected, y= non_P_Gls)) +
  # add a line through the plot with slope =  1 and the yintercept = 0
  geom_abline(slope = 1, intercept = 0, colour = &amp;quot;red&amp;quot;, linetype=2) +
  # we want to make it a scatter plot
  geom_point(size=6, colour=&amp;quot;midnightblue&amp;quot;, fill=&amp;quot;midnightblue&amp;quot;, alpha = 0.4, shape=21) +
  # lets also add team name labels
  ggrepel::geom_text_repel(aes(label = Squad), colour = &amp;quot;midnightblue&amp;quot;, size=5) + 
  # limit the x and y-axis to start at 10 and finish at 100
  scale_x_continuous(limits = c(10,100), name = &amp;quot;Non-Pen xG&amp;quot;) +
  scale_y_continuous(limits = c(10,100), &amp;quot;Non-Pen Goals&amp;quot;) +
  # create a title and subtitle - all plots should have this
  ggtitle(&amp;quot;DID TEAMS SCORE AS EXPECTED?&amp;quot;,
          subtitle = &amp;quot;Teams above the dashed line exceeded their xG for the\nseason, while teams below didn&amp;#39;t&amp;quot;) +
  # apply a pre-programmed general theme:
  theme_minimal() +
  # but then we can customise our plot even more - first we make the background black:
  # change the title and subtitle format
  theme(plot.title = element_text(size=28, face=&amp;quot;bold&amp;quot;), plot.subtitle = element_text(size=22, colour=&amp;quot;grey30&amp;quot;),
        # and change where the plot is aligned - in this case it&amp;#39;s left-aligned
        plot.title.position = &amp;quot;plot&amp;quot;, plot.caption.position = &amp;quot;plot&amp;quot;,
        # change the size of aixs titles and text
        axis.title = element_text(size=16), axis.text = element_text(size = 14))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/starting_with_worldfootballR_files/figure-html/shooting_plot-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We could also calculate how closely correlated xG is to expected goals using the &lt;code&gt;cor()&lt;/code&gt; function in R, which we see printed out to be 0.8805275 - highly correlated indicating teams score pretty close to expected:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# first we will create a new data set of only the team&amp;#39;s performance, and not how their opponents played against them
prem_team &amp;lt;- prem_2021_shooting %&amp;gt;% 
  filter(Team_or_Opponent == &amp;quot;team&amp;quot;)

# now we calculate the Pearson correlation
cor(prem_team$Gls_Standard, prem_team$xG_Expected)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.8805275&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;more-data-please&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;More data please&lt;/h3&gt;
&lt;p&gt;FBref.com is a great site that has given analysts unprecedented access to their data, including the ability to extract to csv’s manually. This is great when there is only one extract you need, but when there are multiple extracts, then this becomes infinitely more time consuming! Functions have been created for these, and the official &lt;a href=&#34;https://jaseziv.github.io/worldfootballR/&#34;&gt;&lt;code&gt;worldfootballR&lt;/code&gt; site&lt;/a&gt; will get you going with them.&lt;/p&gt;
&lt;p&gt;Others, like Transfermarkt.com and Understat.com don’t give you the ability to export to files. &lt;code&gt;worldfootballR&lt;/code&gt; is here to help there too!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# let&amp;#39;s get the transfer balances for the 2020/21 Bundesliga season
team_balances &amp;lt;- tm_team_transfer_balances(country_name = &amp;quot;Germany&amp;quot;, start_year = 2020)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Scraping team transfer balances for the season. Please acknowledge transfermarkt.com as the data source.&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# to save the file as a csv:
write.csv(x= team_balances, file = &amp;quot;bundesliga_transfer_balances2020_2021.csv&amp;quot;, row.names = FALSE)

# or we can save an .xlsx file:
write.xlsx(x= team_balances, file = &amp;quot;bundesliga_transfer_balances2020_2021.xlsx&amp;quot;, row.names = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# let&amp;#39;s start creating our plot:
team_balances %&amp;gt;% 
  # the new two lines use &amp;#39;mutate()&amp;#39; from the dplyr package to create or change new columns
  # here, we create a net_transfer_income column that subtracts the expenditure form income
  mutate(net_transfer_income = income_euros - expenditure_euros) %&amp;gt;% 
  # and we can also come up with a flag for if the income is above or below 0
  mutate(green = net_transfer_income &amp;gt; 0) %&amp;gt;% 
  # ggplot is how we visualise our data
  ggplot(aes(x=net_transfer_income, y= squad, fill = green)) +
  geom_col() +
  # manually select colours to use:
  scale_fill_manual(values = c(&amp;quot;darkred&amp;quot;, &amp;quot;darkgreen&amp;quot;), name = &amp;quot;Made\nMoney?&amp;quot;) +
  # change the data labels on the x-axis to be formatted to currency:
  scale_x_continuous(labels = scales::dollar, name = &amp;quot;Net Transfer Income&amp;quot;) +
  # add a caption that sources the data:
  labs(caption = &amp;quot;Source: transfermarkt.com&amp;quot;) +
  # we also want a title and subtitle:
  ggtitle(&amp;quot;BUNDESLIGA SPENDING IN THE 2020/21 SEASON&amp;quot;,
          subtitle = &amp;quot;Bayern Munich and Borussia Dortmund are big net spenders this season,\nwhile Bayer 04 Leverkusen have made the most money on the transfer market&amp;quot;) +
  # apply a pre-programmed general theme:
  theme_minimal() +
  # but then we can customise our plot even more - first we make the background black:
  theme(plot.background = element_rect(fill = &amp;quot;black&amp;quot;),
        # play around with the x and y gridlines:
        panel.grid.major.x = element_line(colour = &amp;quot;grey20&amp;quot;, linetype = 2), panel.grid.minor.x = element_blank(), panel.grid.major.y = element_blank(),
        # change the title and subtitle format
        plot.title = element_text(size=28, colour = &amp;quot;white&amp;quot;, face=&amp;quot;bold&amp;quot;), plot.subtitle = element_text(size=22, colour = &amp;quot;white&amp;quot;),
        # and change where the plot is aligned - in this case it&amp;#39;s left-aligned
        plot.title.position = &amp;quot;plot&amp;quot;, plot.caption.position = &amp;quot;plot&amp;quot;,
        # change the colour and size of aixs titles and text, remove the y-axis title
        axis.title.x = element_text(colour = &amp;quot;white&amp;quot;, size=16), axis.title.y = element_blank(), axis.text = element_text(colour = &amp;quot;white&amp;quot;, size = 14),
        # remove the legend
        legend.position = &amp;quot;none&amp;quot;,
        #format the plot caption:
        plot.caption = element_text(size = 12, colour = &amp;quot;white&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/starting_with_worldfootballR_files/figure-html/plot_transfers-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Hopefully you’ve made it this far!&lt;/p&gt;
&lt;p&gt;We’ve gone through an overview of the &lt;code&gt;worldfootballR&lt;/code&gt; package, designed to help you extract football data from popular soccer data websites, we’ve installed R and RStudio, we’ve started pulling data using the worldfootballR, we’ve saved it in either .xlsx or .csv, we’ve seen some brief statistical analysis, AND we’ve also created some visualisations using a mixture of &lt;code&gt;dplyr&lt;/code&gt; (to get our data ready) and &lt;code&gt;ggplot&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Hopefully this has stoked your interests enough into the possibilities available to you using R and &lt;code&gt;worldfootballR&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;If you have any questions or feedback, feel free to comment, or get in touch on twitter &lt;a href=&#34;https://twitter.com/jaseziv&#34;&gt;jaseziv&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;resources&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jaseziv.github.io/worldfootballR/&#34;&gt;&lt;code&gt;worldfootballR&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fbref.com/en/&#34;&gt;FBref&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://understat.com/&#34;&gt;Understat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.transfermarkt.com/&#34;&gt;Transfermarkt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tidyverse.org/&#34;&gt;tidyverse&lt;/a&gt; - a collection of very valuable R packages for manipulating, analysing and visualising data&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Historically Bad Melbourne Victory</title>
      <link>/blog/historically-bad-melbourne-victory/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
      <guid>/blog/historically-bad-melbourne-victory/</guid>
      <description>


&lt;p&gt;The data for this post has been extracted from fbref.com, using the &lt;a href=&#34;jaseziv.github.io/worldfootballr/&#34;&gt;&lt;code&gt;worldfootballR&lt;/code&gt;&lt;/a&gt; R stats package. To install the package, run &lt;code&gt;devtools::install_github(&#34;JaseZiv/worldfootballR&#34;)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To extract the data for the post, the below code was run on Monday the 19th of April.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# code to get data using worldfootballR
aleague &amp;lt;- get_match_results(country = &amp;quot;AUS&amp;quot;, gender = &amp;quot;M&amp;quot;, season_end_year = c(2014:2021))

# remove any games not yet played
aleague &amp;lt;- aleague %&amp;gt;% 
  filter(!is.na(HomeGoals)) %&amp;gt;% 
  arrange(Season_End_Year, Date) %&amp;gt;% 
  distinct(Date, Home, Away, .keep_all = T)

# save data to minimise requests on fbref
saveRDS(aleague, here::here(&amp;quot;elo&amp;quot;, &amp;quot;bad-melb-victory&amp;quot;, &amp;quot;aleague_results.rds&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(worldfootballR)
library(tidyverse)
library(gt)
library(elo)


# load fonts
sysfonts::font_add_google(name = &amp;quot;Chivo&amp;quot;, family = &amp;quot;chivo&amp;quot;)
showtext::showtext_auto()

# set theme
theme_set(theme_minimal() +
            theme(plot.title = element_text(colour = &amp;quot;midnightblue&amp;quot;, size = 26, family = &amp;quot;chivo&amp;quot;, face = &amp;quot;bold&amp;quot;), 
                  plot.subtitle = element_text(colour = &amp;quot;grey20&amp;quot;, size = 19, family = &amp;quot;chivo&amp;quot;, face = &amp;quot;italic&amp;quot;),
                  axis.text.x = element_text(colour = &amp;quot;grey20&amp;quot;, size = 14, family = &amp;quot;chivo&amp;quot;),
                  axis.text.y = element_text(colour = &amp;quot;grey20&amp;quot;, size = 14, family = &amp;quot;chivo&amp;quot;),
                  axis.title.x = element_text(colour = &amp;quot;grey20&amp;quot;, size = 16, family = &amp;quot;chivo&amp;quot;),
                  axis.title.y = element_text(colour = &amp;quot;grey20&amp;quot;, size = 16, family = &amp;quot;chivo&amp;quot;),
                  plot.caption = element_text(colour = &amp;quot;grey20&amp;quot;, size = 12, family = &amp;quot;chivo&amp;quot;),
                  strip.text = element_text(colour = &amp;quot;grey30&amp;quot;, size = 12, face = &amp;quot;bold&amp;quot;, family = &amp;quot;chivo&amp;quot;)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# read in data
aleague &amp;lt;- readRDS(url(&amp;quot;https://github.com/JaseZiv/Dont-Blame-the-Data-Data-Files/blob/master/bad-melb-victory/aleague_results.rds?raw=true&amp;quot;))

# filter to keep only regular season games
aleague &amp;lt;- aleague %&amp;gt;% 
  filter(Round == &amp;quot;Regular Season&amp;quot; | is.na(Round)) %&amp;gt;% 
  filter(!is.na(HomeGoals)) %&amp;gt;% 
  arrange(Date)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To say the A-League’s Melbourne Victory in Australia are having a bad season is a gross understatement. Football Twitter, whatever publication wishes to cover football (soccer) in Australia (funnily enough more coverage when things are bad), almost anyone with an opinion, all are in agreement that this is a sh$t show this season - from the board all the way down. This culminated in the recent 7-0 drubbing at the hands of cross-town (and City Group cashed up) rival Melbourne City and subsequent sacking of coach and former player Grant Brebner. Add to this a 6-0 loss to City just a few weeks back and it didn’t take a genius to know Brebner was in trouble.&lt;/p&gt;
&lt;p&gt;Just how bad is this season? Well that’s somewhat of a subjective statement - there are many ways to define measures of success (or failure in this case), including ladder position, points earned, wins, etc, but these don’t give us the whole picture.&lt;/p&gt;
&lt;div id=&#34;hello-elo&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hello Elo&lt;/h2&gt;
&lt;p&gt;The Elo rating system should not be foreign to football fans worldwide - FIFA have used Elo as a way of ranking the Women’s national teams since their introduction in 2003 and have used it as the basis of calculating Men’s rankings since 2018.&lt;/p&gt;
&lt;p&gt;Elo was created by Arpad Elo, a Hungarian-American physics professor who wanted to design a rating system for chess players. The beauty of the method lies in its zero-sum notion, meaning that one team’s gains come at the expense of their opponent. Draws are also handled for - the lower ranked team/player would typically gain ranking points from the higher ranked opponent. Importantly for the purposes of this piece, Elo is calculated after every match played, meaning we can continue to get updated rankings. The real value in these ranking comes the ability to calculate the predicted outcome of a contest. General implementations of the model would suggest that an opponent with a rating 100 points greater than their opponent would lead to a predicted win probability of 64%.&lt;/p&gt;
&lt;div id=&#34;applying-elo&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Applying Elo&lt;/h3&gt;
&lt;p&gt;Now for the casual fan, the following may be a tad dreary, so feel free to skip along to the analysis, but for those wishing to understand the application of Elo here, read ahead.&lt;/p&gt;
&lt;p&gt;Teams typically start the season with an Elo rating of 1500 and given the zero-sum condition of the calculation, it can be said that an “average” team has an Elo of 1500. So while the team starts the season (or any period of time you want to have the “starting” point for Elo) on 1500, the ranking updates after every game. If you win, you are rewarded, and even more handsomely for big wins and/or wins against higher ranked opponents.&lt;/p&gt;
&lt;p&gt;The very popular website &lt;a href=&#34;https://fivethirtyeight.com/&#34;&gt;FiveThirtyEight&lt;/a&gt; website uses Elo ratings as the basis for a number of their sports prediction models, with a lot of these models using a running Elo ranking that began its calculation for teams a long time ago, making tweaks to handle starting ratings of teams in new seasons vs carrying forward the previous season’s ranking. &lt;em&gt;Note, this analysis calculates a team’s Elo rating for each single season analysed, not carrying over the team’s previous season rating, nor carrying them forward to the next season.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There are a number of approaches to calculating Elo, however there are two main areas where decisions need to be made.&lt;/p&gt;
&lt;p&gt;The first is deciding whether to include a “home advantage”, meaning should the home team be expected to win more often than not on average… The answer to this is yes in my opinion. What this rating should be is oft debated by analysts all over the globe, but I have settled for a 40 point advantage for the home team.&lt;/p&gt;
&lt;p&gt;The other factor for consideration is how much weight to place on the margin of victory. It has been argued that once a team has a big win, say by over a three goal margin, then the additional rating points you earn shouldn’t have a perfectly linear relationship with ranking points earned. Smoothing has been applied to the goal index with the following formula for wins of a margin of three goals or more:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;G = (11+N)/8
* Where N is the goal difference&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# calculate goal margin index:
calc_goal_index &amp;lt;- function(home_goals, away_goals) {
  if(abs(home_goals - away_goals) &amp;lt;= 1) {
    G &amp;lt;- 1
  } else if (abs(home_goals - away_goals) == 2) {
    G &amp;lt;- 1.5
  } else {
    G &amp;lt;- (11 + abs(home_goals - away_goals))/8
  }
}

# apply the goal margin calculation
aleague &amp;lt;- aleague %&amp;gt;% 
  mutate(goal_index = mapply(calc_goal_index, HomeGoals, AwayGoals))


# Start Elo ---------------------------------------------------------------
all_elo &amp;lt;- data.frame()

# loop through each season and calculate Elos
for(each_season in unique(aleague$Season_End_Year)) {
  
  df &amp;lt;- aleague %&amp;gt;% filter(Season_End_Year == each_season) %&amp;gt;% 
    elo.run(score(HomeGoals, AwayGoals) ~ adjust(Home, 40) + Away +
              k(20*goal_index), data = .) %&amp;gt;% data.frame()
  
  df &amp;lt;- bind_cols(
    aleague %&amp;gt;% filter(Season_End_Year == each_season) %&amp;gt;% select(Season_End_Year, Date, HomeGoals, AwayGoals),
    df
  )
  
  all_elo &amp;lt;- rbind(all_elo, df)
}

# create a tidy (long) dataframe
all_elo_cleaned &amp;lt;- all_elo %&amp;gt;% 
  select(Season_End_Year, Date, Team=team.A, GF=HomeGoals, Opponent=team.B, GA=AwayGoals, pWin=p.A, Elo=elo.A, Opp_Elo=elo.B, TeamUpdate=update.A) %&amp;gt;% mutate(home_away=&amp;quot;Home&amp;quot;) %&amp;gt;% 
  bind_rows(
    all_elo %&amp;gt;% 
      mutate(home_away=&amp;quot;Away&amp;quot;, pWin = (1-p.A)) %&amp;gt;% 
      select(Season_End_Year, Date, Team=team.B, GF=AwayGoals, Opponent=team.A, GA=HomeGoals, pWin, Elo=elo.B, Opp_Elo=elo.A, home_away, , TeamUpdate=update.B)
  )&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;worst-a-league-season-elo-rankings&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Worst A-League Season Elo Rankings&lt;/h2&gt;
&lt;p&gt;Ok, enough of the very high level math and theory. Let’s get in to seeing just how bad things are looking for the Victory…&lt;/p&gt;
&lt;p&gt;Data has been extracted from fbref.com using the &lt;a href=&#34;jaseziv.github.io/worldfootballr/&#34;&gt;&lt;code&gt;worldfootballR&lt;/code&gt;&lt;/a&gt; R package. Data contains all A-League regular season matches from the 2013/14 season up to and including matches up to the 18th April, 2021.&lt;/p&gt;
&lt;p&gt;It can be seen below that when it comes to bad seasons, Central Coast have a monopoly, owning the three worst Elo seasons, with the three-win 2015/16 side the worst of the bunch (they also only won three matches in the 18/19 season).&lt;/p&gt;
&lt;p&gt;The Victory’s position on this table could be seen through either a half-full, or half-empty glass. Currently, they’re on track for the eighth worst season, however with eleven games yet to play, anything could happen.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# add a match number as &amp;#39;gameweek&amp;#39; isn&amp;#39;t always accurate
all_elo_cleaned &amp;lt;- all_elo_cleaned %&amp;gt;% 
  arrange(Team, Season_End_Year, Date) %&amp;gt;% 
  group_by(Team, Season_End_Year) %&amp;gt;% 
  mutate(match_num = row_number()) %&amp;gt;% ungroup()


# get the max matches played per each team season
num_matches &amp;lt;- all_elo_cleaned %&amp;gt;% group_by(Team, Season_End_Year) %&amp;gt;% summarise(n_matches = max(match_num)) %&amp;gt;% ungroup()

# get a df of the 10 worst Elo seasons
worst_seasons &amp;lt;- num_matches %&amp;gt;% 
  left_join(all_elo_cleaned, by = c(&amp;quot;Team&amp;quot;, &amp;quot;Season_End_Year&amp;quot;, &amp;quot;n_matches&amp;quot; = &amp;quot;match_num&amp;quot;)) %&amp;gt;% 
  arrange(Elo) %&amp;gt;% head(10)

###########################################################################
# Create worst teams table ------------------------------------------------

# theme, thanks to @thomas_mock at https://themockup.blog/
gt_theme_538 &amp;lt;- function(data,...) {
  data %&amp;gt;%
    opt_all_caps()  %&amp;gt;%
    opt_table_font(
      font = list(
        google_font(&amp;quot;Chivo&amp;quot;),
        default_fonts()
      )
    ) %&amp;gt;%
    tab_style(
      style = cell_borders(
        sides = &amp;quot;bottom&amp;quot;, color = &amp;quot;transparent&amp;quot;, weight = px(2)
      ),
      locations = cells_body(
        columns = TRUE,
        # This is a relatively sneaky way of changing the bottom border
        # Regardless of data size
        rows = nrow(data$`_data`)
      )
    )  %&amp;gt;% 
    tab_options(
      column_labels.background.color = &amp;quot;white&amp;quot;,
      table.border.top.width = px(3),
      table.border.top.color = &amp;quot;transparent&amp;quot;,
      table.border.bottom.color = &amp;quot;transparent&amp;quot;,
      table.border.bottom.width = px(3),
      column_labels.border.top.width = px(3),
      column_labels.border.top.color = &amp;quot;transparent&amp;quot;,
      column_labels.border.bottom.width = px(3),
      column_labels.border.bottom.color = &amp;quot;black&amp;quot;,
      data_row.padding = px(3),
      source_notes.font.size = 12,
      table.font.size = 16,
      heading.align = &amp;quot;left&amp;quot;,
      heading.title.font.size = &amp;quot;x-large&amp;quot;,
      heading.subtitle.font.size = &amp;quot;large&amp;quot;,
      ...
    ) 
}

############################
#----- Generate Table -----#
############################

worst_seasons %&amp;gt;% 
  mutate(Season = paste0(Season_End_Year-1, &amp;quot;/&amp;quot;, substr(Season_End_Year, 3, 4))) %&amp;gt;%
  select(Team, Season, Played=n_matches, Elo) %&amp;gt;% 
  mutate(Elo = round(Elo, 1)) %&amp;gt;% 
  gt() %&amp;gt;% 
  cols_align(columns = 1,
             align = &amp;quot;left&amp;quot;) %&amp;gt;%
  cols_align(columns = c(2:4),
             align = &amp;quot;center&amp;quot;) %&amp;gt;%
  tab_style(
    style = list(
      cell_fill(color = alpha(&amp;quot;midnightblue&amp;quot;, 0.2))
    ),
    locations = cells_body(
      # columns = vars(Team, Season, n_matches, Elo), # not needed if coloring all columns
      rows = c(8))
  ) %&amp;gt;%
  tab_header(md(&amp;quot;**THE WORST A-LEAGUE SEASONS ACCORDING TO ELO**&amp;quot;),
             subtitle = &amp;quot;Central Cost have the three worst ending season Elo ratings since the 2013/14 season. This season&amp;#39;s Melbourne Victory currently hold the 8th worst Elo ranking, however there are still 11 games to be played.&amp;quot;) %&amp;gt;% 
  tab_source_note(
    source_note = md(&amp;quot;SOURCE: [fbref](fbref.com) || [worldfootballR](https://github.com/JaseZiv/worldfootballR)&amp;lt;br&amp;gt;TABLE: [@jaseziv](https://twitter.com/jaseziv)&amp;quot;)
  ) %&amp;gt;% 
  gt_theme_538()&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;@import url(&#34;https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap&#34;);
html {
  font-family: Chivo, -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#pcogkrrmzj .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 3px;
  border-top-color: transparent;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 3px;
  border-bottom-color: transparent;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#pcogkrrmzj .gt_heading {
  background-color: #FFFFFF;
  text-align: left;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pcogkrrmzj .gt_title {
  color: #333333;
  font-size: x-large;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#pcogkrrmzj .gt_subtitle {
  color: #333333;
  font-size: large;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#pcogkrrmzj .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pcogkrrmzj .gt_col_headings {
  border-top-style: solid;
  border-top-width: 3px;
  border-top-color: transparent;
  border-bottom-style: solid;
  border-bottom-width: 3px;
  border-bottom-color: black;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pcogkrrmzj .gt_col_heading {
  color: #333333;
  background-color: white;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#pcogkrrmzj .gt_column_spanner_outer {
  color: #333333;
  background-color: white;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#pcogkrrmzj .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#pcogkrrmzj .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#pcogkrrmzj .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 3px;
  border-bottom-color: black;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#pcogkrrmzj .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#pcogkrrmzj .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#pcogkrrmzj .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#pcogkrrmzj .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#pcogkrrmzj .gt_row {
  padding-top: 3px;
  padding-bottom: 3px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#pcogkrrmzj .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#pcogkrrmzj .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pcogkrrmzj .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#pcogkrrmzj .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pcogkrrmzj .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#pcogkrrmzj .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#pcogkrrmzj .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pcogkrrmzj .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pcogkrrmzj .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#pcogkrrmzj .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pcogkrrmzj .gt_sourcenote {
  font-size: 12px;
  padding: 4px;
}

#pcogkrrmzj .gt_left {
  text-align: left;
}

#pcogkrrmzj .gt_center {
  text-align: center;
}

#pcogkrrmzj .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#pcogkrrmzj .gt_font_normal {
  font-weight: normal;
}

#pcogkrrmzj .gt_font_bold {
  font-weight: bold;
}

#pcogkrrmzj .gt_font_italic {
  font-style: italic;
}

#pcogkrrmzj .gt_super {
  font-size: 65%;
}

#pcogkrrmzj .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;pcogkrrmzj&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;4&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;&lt;strong&gt;THE WORST A-LEAGUE SEASONS ACCORDING TO ELO&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;4&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;Central Cost have the three worst ending season Elo ratings since the 2013/14 season. This season&#39;s Melbourne Victory currently hold the 8th worst Elo ranking, however there are still 11 games to be played.&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Team&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Season&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Played&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Elo&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Central Coast&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2015/16&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;27&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1341.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Central Coast&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2018/19&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;27&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1350.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Central Coast&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2019/20&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;26&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1369.4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Brisbane&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2018/19&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;27&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1370.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Newcastle&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2016/17&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;27&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1378.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Newcastle&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2014/15&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;27&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1381.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Central Coast&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2017/18&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;27&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1394.7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: rgba(25,25,112,0.2);&#34;&gt;Melb Victory&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;background-color: rgba(25,25,112,0.2);&#34;&gt;2020/21&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;background-color: rgba(25,25,112,0.2);&#34;&gt;16&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;background-color: rgba(25,25,112,0.2);&#34;&gt;1398.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Wellington&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2017/18&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;27&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1404.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: transparent;&#34;&gt;Wellington&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: transparent;&#34;&gt;2015/16&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: transparent;&#34;&gt;27&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: transparent;&#34;&gt;1408.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;4&#34;&gt;SOURCE: &lt;a href=&#34;fbref.com&#34;&gt;fbref&lt;/a&gt; || &lt;a href=&#34;https://github.com/JaseZiv/worldfootballR&#34;&gt;worldfootballR&lt;/a&gt;&lt;br&gt;TABLE: &lt;a href=&#34;https://twitter.com/jaseziv&#34;&gt;@jaseziv&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;look-away-victory-fans&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Look Away Victory Fans&lt;/h2&gt;
&lt;p&gt;If we take the glass half-empty view of the current season, the Victory have the second worst record after 16 games played with only the 2018/19 Mariners worse at this stage of the season. More worryingly, that season’s Mariners were able to pull themselves together to “recover” somewhat. If we take them out of the equation, the Victory have the worst record after 16 games and are 10 points lower than the worst every 2015/16 Mariners.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;worst_aleague_seasons &amp;lt;- worst_seasons %&amp;gt;%
  select(Team, Season_End_Year) %&amp;gt;% 
  left_join(all_elo_cleaned, by = c(&amp;quot;Team&amp;quot;, &amp;quot;Season_End_Year&amp;quot;)) %&amp;gt;% 
  mutate(team_season = paste0(Team, &amp;quot;-&amp;quot;, Season_End_Year)) 

team_labels &amp;lt;- worst_aleague_seasons %&amp;gt;% 
  filter((Team == &amp;quot;Melb Victory&amp;quot; &amp;amp; Season_End_Year == 2021) | Team == &amp;quot;Central Coast&amp;quot; &amp;amp; Season_End_Year == 2016) %&amp;gt;% 
  arrange(Team, desc(match_num)) %&amp;gt;% 
  distinct(Team, .keep_all = T) %&amp;gt;% 
  mutate(shortened_season = ifelse(Team == &amp;quot;Melb Victory&amp;quot;, &amp;quot;2020/21&amp;quot;, &amp;quot;2015/16&amp;quot;))


worst_aleague_seasons %&amp;gt;% 
  mutate(Melb_Vict = str_detect(Team, &amp;quot;Melb Victory&amp;quot;)) %&amp;gt;% 
  ggplot() +
  geom_line(aes(x= match_num, y= Elo, group = team_season), colour = &amp;quot;lightgrey&amp;quot;, size=1, alpha = 0.3) +
  geom_line(data = worst_aleague_seasons %&amp;gt;% filter(Team == &amp;quot;Central Coast&amp;quot;, Season_End_Year == 2016), aes(x=match_num, y= Elo), colour = &amp;quot;#f6c644&amp;quot;, size=1.5) +
  geom_line(data = worst_aleague_seasons %&amp;gt;% filter(Team == &amp;quot;Melb Victory&amp;quot;), aes(x=match_num, y= Elo), colour = &amp;quot;midnightblue&amp;quot;, size=1.5) +
  geom_hline(yintercept = 1500, linetype=2, colour=&amp;quot;grey&amp;quot;, size=1) +
  scale_x_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30), limits = c(0,32), name = &amp;quot;Matches played&amp;quot;) +
  geom_label(x=26, y=1500, label = &amp;quot;Average&amp;quot;, colour = &amp;quot;grey&amp;quot;, label.size = NA, size=6, fontface=2) +
  geom_text(data = team_labels, aes(x=match_num, y= Elo, label = paste0(Team, &amp;quot;\n&amp;quot;, shortened_season), colour = Team), vjust=1, nudge_x = 1.9, size=5, fontface=2) +
  scale_colour_manual(values = c(&amp;quot;#f6c644&amp;quot;, &amp;quot;midnightblue&amp;quot;)) +
  scale_y_continuous(limits = c(1300, 1550), name = &amp;quot;ELO Rating&amp;quot;) +
  ggtitle(&amp;quot;MELBOURNE VICTORY HISTORICALLY BAD THIS SEASON&amp;quot;,
          subtitle = &amp;quot;Using data since the 2013/14 A-League season and calculating in-season Elo ratings, the\nVictory currently have a lower Elo rating after 16 games played than the 2015/16 Mariners,\nwho finished the A-Leage season with the worst Elo.&amp;quot;) +
  labs(caption = paste0(&amp;quot;\n*Data current to &amp;quot;, lubridate::today(), &amp;quot;\nSource: fbref.com through worldfootballR  ||  Table: @jase_ziv&amp;quot;)) +
  theme(legend.position = &amp;quot;none&amp;quot;,
        plot.title.position = &amp;quot;plot&amp;quot;,
        legend.text.align = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/historically-bad-victory-elo_files/figure-html/victory_on_track-1.png&#34; width=&#34;1344&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;fingers-crossed&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Fingers Crossed&lt;/h2&gt;
&lt;p&gt;Hopefully for the Victory fans interim Head Coach Steve Kean can turn this woefully dreadful season around and salvage some pride over the remainder of the season. If not, history beckons.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Passing in the Top Five European Domestic Leagues</title>
      <link>/blog/top-domestic-soccer-leagues-passing/</link>
      <pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate>
      <guid>/blog/top-domestic-soccer-leagues-passing/</guid>
      <description>


&lt;p&gt;Football (soccer) as often referred to as “the beautiful game”, is made all the more beautiful because of the intricacies of playing styles between different nations.&lt;/p&gt;
&lt;p&gt;This piece aims to begin exploring some of these differences in the playing style of the top five European domestic leagues. For reference, when we refer to the top five, we’re referring to the following domestic leagues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fußball-Bundesliga (Germany)&lt;/li&gt;
&lt;li&gt;La Liga (Spain)&lt;/li&gt;
&lt;li&gt;Ligue 1 (France)&lt;/li&gt;
&lt;li&gt;Premier League (England)&lt;/li&gt;
&lt;li&gt;Serie A (Italy)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Specifically, this piece will focus on passing and analyse whether there are any differences in how teams in these leagues move the ball around the pitch.&lt;/p&gt;
&lt;p&gt;Data for this piece comes from &lt;a href=&#34;fbref.com&#34;&gt;fbref&lt;/a&gt;, from the &lt;code&gt;worldfootballR&lt;/code&gt; R package. This package can currently be installed from GitHub, with the repository &lt;a href=&#34;https://github.com/JaseZiv/worldfootballR&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As usual, a quick demo of the package… to get the data you’re after, all you need to do is run the following lines of code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;devtools::install_github(&amp;quot;JaseZiv/worldfootballR&amp;quot;)
library(worldfootballR)

countries &amp;lt;- c(&amp;quot;ENG&amp;quot;, &amp;quot;ITA&amp;quot;, &amp;quot;FRA&amp;quot;, &amp;quot;GER&amp;quot;, &amp;quot;ESP&amp;quot;)
# get league table
league_table &amp;lt;- get_season_team_stats(country = countries, gender = &amp;quot;M&amp;quot;, season_end_year = c(2018:2021), stat_type = &amp;quot;league_table&amp;quot;)
# get season passing stats
passing &amp;lt;- get_season_team_stats(country = countries, gender = &amp;quot;M&amp;quot;, season_end_year = c(2018:2021), stat_type = &amp;quot;passing&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;attempting-and-completing-passes&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Attempting and Completing Passes&lt;/h1&gt;
&lt;p&gt;First, we turn our attention to the leagues that attempt the most number of passes per 90 minutes of football.&lt;/p&gt;
&lt;p&gt;Other than when Serie A had the highest passing attempts in the 2017-18 season, the German Bundesliga has reigned supreme when it comes to the number of passes attempted, with the current season the highest number of passes attempted (514).&lt;/p&gt;
&lt;p&gt;Teams in France’s League 1 have continued to increase their passing attempts, overtaking The EPL and Serie A for the first time this season. Interestingly, in the 2017-18 season, League 1 and La Liga were equally the lowest passing leagues, and in three short years, the respective leagues have diverged in their passing attempts.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/top_five_euro_league_passing_files/figure-html/att_passing-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Drilling down further and analysing individual teams within league seasons, it can be seen below that while the Bundesliga and EPL have some of the highest passing rates, they also have some of the highest variability, with the discrepancy being greatest between the highest and lowest passing teams within each league (although La Liga has the greatest variability of all).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/top_five_euro_league_passing_files/figure-html/teams_att_passing-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;completion-rates&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Completion Rates&lt;/h2&gt;
&lt;p&gt;Attempting passes is no doubt important to the game, but one could argue that completing those passes is more vital.&lt;/p&gt;
&lt;p&gt;The boxplot below shows that generally speaking, teams in each of the leagues have increased their passing completion rates over the last four years (although the Bundesliga has somewhat plateaued).&lt;/p&gt;
&lt;p&gt;Serie A teams have consistently had higher passing accuracy than teams in the other leagues, while La Liga has had the greatest completion rate variability of all the leagues - no doubt driven by the vast differences in quality between The Madrid teams and Barca, and the rest of the league.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/top_five_euro_league_passing_files/figure-html/league_completion-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;why-does-this-matter&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why does this matter?&lt;/h2&gt;
&lt;p&gt;It can be seen below that teams that attempt more passes during a season tend to accumulate more league points, with a fairly strong positive correlation between the variables. The below data does not include the current season.&lt;/p&gt;
&lt;p&gt;This holds more true for the EPL correlation of (0.829), Bundesliga (0.805) and Serie A (0.796), while the relationship is not as strong for La Liga and Ligue 1.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/top_five_euro_league_passing_files/figure-html/passing_cor-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;which-direction-are-the-passes-heading&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Which Direction are the Passes Heading?&lt;/h2&gt;
&lt;p&gt;So, we have seen that there are some differences between the leagues with regards to how often, and how successfully they move the ball to teammates. What about the direction that the ball travels in when their making passes?&lt;/p&gt;
&lt;p&gt;For this, we can look at the progressive distances (in yards) of completed passes and compare this to the total yardage of all passes completed. Progressive yards are defined by fbref as:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Total distance, in yards, that completed passes have travelled towards the opponent’s goal. Note: Passes away from opponent’s goal are counted as zero progressive yards&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The resulting figure indicates how many &lt;em&gt;progressive&lt;/em&gt; yards a ball has travelled per yard of completed passes. A higher number indicates a team moves the ball more directly, while a lower figure indicates a greater share of a teams completed passing yards are not as direct to the opponent’s goal.&lt;/p&gt;
&lt;div id=&#34;leagues-passing-less-directly&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Leagues Passing Less Directly?&lt;/h3&gt;
&lt;p&gt;Leagues have progressively been moving away from more direct passing routes, with the EPL leading the way (0.319 progressive yards per total yards completed), while La Liga are the least direct with 0.339 progressive yards per total yards completed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/top_five_euro_league_passing_files/figure-html/directness-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Like with the correlation between league points and passes attempted, there also appears to be a relationship between &lt;em&gt;directness&lt;/em&gt; and league points, however the relationship is negative, meaning that teams that are less direct with their passing also tend to earn more league points at the end of a season.&lt;/p&gt;
&lt;p&gt;Additionally, this relationship isn’t as strong for all leagues. The relationship is fairly strong for the EPL (correlation of -0.711) and Serie A (-0.706), while the weakest in La Liga (-0.402).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/top_five_euro_league_passing_files/figure-html/directness_cor-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can also look at the individual team seasons that have been the most and least direct passing seasons.&lt;/p&gt;
&lt;p&gt;The 20 least direct teams over the last four seasons are listed below, with the top of the list dominated by EPL clubs, specifically Man City, which hold four of the top six places.&lt;/p&gt;
&lt;p&gt;Interesting to note, it appears that teams on this list have also finished nearer the top of the table &lt;code&gt;RK&lt;/code&gt; that the bottom of the table, reinforcing our correlation above.&lt;/p&gt;
&lt;style&gt;@import url(&#34;https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap&#34;);
html {
  font-family: Chivo, -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#xrirlnuumg .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 3px;
  border-top-color: transparent;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 3px;
  border-bottom-color: transparent;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#xrirlnuumg .gt_heading {
  background-color: #FFFFFF;
  text-align: left;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#xrirlnuumg .gt_title {
  color: #333333;
  font-size: x-large;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#xrirlnuumg .gt_subtitle {
  color: #333333;
  font-size: large;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#xrirlnuumg .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#xrirlnuumg .gt_col_headings {
  border-top-style: solid;
  border-top-width: 3px;
  border-top-color: transparent;
  border-bottom-style: solid;
  border-bottom-width: 3px;
  border-bottom-color: black;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#xrirlnuumg .gt_col_heading {
  color: #333333;
  background-color: white;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#xrirlnuumg .gt_column_spanner_outer {
  color: #333333;
  background-color: white;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#xrirlnuumg .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#xrirlnuumg .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#xrirlnuumg .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 3px;
  border-bottom-color: black;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#xrirlnuumg .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#xrirlnuumg .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#xrirlnuumg .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#xrirlnuumg .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#xrirlnuumg .gt_row {
  padding-top: 3px;
  padding-bottom: 3px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#xrirlnuumg .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#xrirlnuumg .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#xrirlnuumg .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#xrirlnuumg .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#xrirlnuumg .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#xrirlnuumg .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#xrirlnuumg .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#xrirlnuumg .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#xrirlnuumg .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#xrirlnuumg .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#xrirlnuumg .gt_sourcenote {
  font-size: 12px;
  padding: 4px;
}

#xrirlnuumg .gt_left {
  text-align: left;
}

#xrirlnuumg .gt_center {
  text-align: center;
}

#xrirlnuumg .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#xrirlnuumg .gt_font_normal {
  font-weight: normal;
}

#xrirlnuumg .gt_font_bold {
  font-weight: bold;
}

#xrirlnuumg .gt_font_italic {
  font-style: italic;
}

#xrirlnuumg .gt_super {
  font-size: 65%;
}

#xrirlnuumg .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;xrirlnuumg&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;&lt;strong&gt;PREMIER LEAGUE DOMINATES LEAST DIRECT PASSING&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;A Man City feature in four of the top six seasons of least direct passing, with the other two sides in the top 6 also being EPL teams.&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;League&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Squad&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Season End&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Rk&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Directness (yards)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Premier League&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Manchester City&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2020&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #3FC1C9; color: #000000;&#34;&gt;0.267&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Premier League&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Manchester City&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2021&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #3FC1C9; color: #000000;&#34;&gt;0.267&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Premier League&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Arsenal&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2021&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;9&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #3FC1C9; color: #000000;&#34;&gt;0.267&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Premier League&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Chelsea&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2021&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;8&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #8BD5DA; color: #000000;&#34;&gt;0.276&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Premier League&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Manchester City&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2019&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #92D7DC; color: #000000;&#34;&gt;0.277&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Premier League&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Manchester City&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2018&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #ACE0E4; color: #000000;&#34;&gt;0.281&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Serie A&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Juventus&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2018&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #B2E3E6; color: #000000;&#34;&gt;0.282&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Premier League&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Chelsea&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2020&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;4&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #B8E5E8; color: #000000;&#34;&gt;0.283&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;La Liga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Barcelona&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2020&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #BEE7EA; color: #000000;&#34;&gt;0.284&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;La Liga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Real Madrid&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2021&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #DCF2F3; color: #000000;&#34;&gt;0.289&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Fußball-Bundesliga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Dortmund&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2020&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E2F4F5; color: #000000;&#34;&gt;0.290&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Fußball-Bundesliga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Dortmund&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2021&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;7&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E8F6F7; color: #000000;&#34;&gt;0.291&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Premier League&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Liverpool&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2021&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;4&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #EEF8F9; color: #000000;&#34;&gt;0.292&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Ligue 1&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Nice&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2021&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;12&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #F3FBFB; color: #000000;&#34;&gt;0.293&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Fußball-Bundesliga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Bayern Munich&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2019&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #F3FBFB; color: #000000;&#34;&gt;0.293&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Fußball-Bundesliga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Leverkusen&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2021&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;3&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #F9FDFD; color: #000000;&#34;&gt;0.294&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Serie A&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Inter&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2021&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #F9FDFD; color: #000000;&#34;&gt;0.294&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;La Liga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Sevilla&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2021&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;4&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #F9FDFD; color: #000000;&#34;&gt;0.294&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;La Liga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Real Madrid&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2020&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #FFFFFF; color: #000000;&#34;&gt;0.295&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: transparent;&#34;&gt;Serie A&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: transparent;&#34;&gt;Napoli&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: transparent;&#34;&gt;2020&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: transparent;&#34;&gt;7&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #FFFFFF; color: #000000; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: transparent;&#34;&gt;0.295&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;SOURCE: &lt;a href=&#34;https://github.com/JaseZiv/worldfootballR&#34;&gt;worldfootballR&lt;/a&gt;&lt;br&gt;TABLE: &lt;a href=&#34;https://twitter.com/jaseziv&#34;&gt;@jaseziv&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Similarly, we can also look at the 20 most direct passing teams of the last four seasons.&lt;/p&gt;
&lt;p&gt;The finishing positions of these clubs looks to be somewhat closer to the bottom of their league tables (Getafe in La Liga 2018-19 and RP Leipzig in Bundesliga 2018-19 the notable exceptions).&lt;/p&gt;
&lt;p&gt;Cardiff City’s lone Premier League season was the most direct passing season, with 0.464 progressive yards per passing yards completed.&lt;/p&gt;
&lt;style&gt;@import url(&#34;https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap&#34;);
html {
  font-family: Chivo, -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#rbqrlbgtld .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 3px;
  border-top-color: transparent;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 3px;
  border-bottom-color: transparent;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#rbqrlbgtld .gt_heading {
  background-color: #FFFFFF;
  text-align: left;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#rbqrlbgtld .gt_title {
  color: #333333;
  font-size: x-large;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#rbqrlbgtld .gt_subtitle {
  color: #333333;
  font-size: large;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#rbqrlbgtld .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#rbqrlbgtld .gt_col_headings {
  border-top-style: solid;
  border-top-width: 3px;
  border-top-color: transparent;
  border-bottom-style: solid;
  border-bottom-width: 3px;
  border-bottom-color: black;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#rbqrlbgtld .gt_col_heading {
  color: #333333;
  background-color: white;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#rbqrlbgtld .gt_column_spanner_outer {
  color: #333333;
  background-color: white;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#rbqrlbgtld .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#rbqrlbgtld .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#rbqrlbgtld .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 3px;
  border-bottom-color: black;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#rbqrlbgtld .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#rbqrlbgtld .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#rbqrlbgtld .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#rbqrlbgtld .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#rbqrlbgtld .gt_row {
  padding-top: 3px;
  padding-bottom: 3px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#rbqrlbgtld .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#rbqrlbgtld .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#rbqrlbgtld .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#rbqrlbgtld .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#rbqrlbgtld .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#rbqrlbgtld .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#rbqrlbgtld .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#rbqrlbgtld .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#rbqrlbgtld .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#rbqrlbgtld .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#rbqrlbgtld .gt_sourcenote {
  font-size: 12px;
  padding: 4px;
}

#rbqrlbgtld .gt_left {
  text-align: left;
}

#rbqrlbgtld .gt_center {
  text-align: center;
}

#rbqrlbgtld .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#rbqrlbgtld .gt_font_normal {
  font-weight: normal;
}

#rbqrlbgtld .gt_font_bold {
  font-weight: bold;
}

#rbqrlbgtld .gt_font_italic {
  font-style: italic;
}

#rbqrlbgtld .gt_super {
  font-size: 65%;
}

#rbqrlbgtld .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;rbqrlbgtld&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;&lt;strong&gt;MORE DIRECT PASSING TEAMS GENERALLY WEAKER TEAMS?&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;At first glance, it appears that the clubs who have the highest progressive yards per passing completed yards tend to finish lower on the table than those teams who are the least direct. Cardiff City&#39;s lone EPL season in 2019 tops the chart for most direct towards goal passing season&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;League&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Squad&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Season End&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Rk&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Directness (yards)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Premier League&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Cardiff City&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2019&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;18&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #3FC1C9; color: #000000;&#34;&gt;0.464&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;La Liga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Getafe&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2019&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;5&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #62C9D0; color: #000000;&#34;&gt;0.457&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;La Liga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Osasuna&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2021&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;17&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #8CD6DA; color: #000000;&#34;&gt;0.446&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;La Liga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Getafe&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2020&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;8&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #93D8DC; color: #000000;&#34;&gt;0.444&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Fußball-Bundesliga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Union Berlin&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2020&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;11&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #B7E4E7; color: #000000;&#34;&gt;0.433&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;La Liga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Getafe&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2018&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;8&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #BAE5E8; color: #000000;&#34;&gt;0.432&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;La Liga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Alavés&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2019&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;11&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #BDE7E9; color: #000000;&#34;&gt;0.431&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;La Liga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Cádiz&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2021&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;11&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #DFF3F4; color: #000000;&#34;&gt;0.420&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Fußball-Bundesliga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Eint Frankfurt&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2019&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;7&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E1F4F5; color: #000000;&#34;&gt;0.419&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Premier League&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Stoke City&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2018&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;19&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E1F4F5; color: #000000;&#34;&gt;0.419&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;La Liga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Alavés&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2020&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;16&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4F5F6; color: #000000;&#34;&gt;0.418&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Serie A&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Crotone&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2018&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;18&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E7F6F7; color: #000000;&#34;&gt;0.417&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Ligue 1&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Nantes&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2018&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;9&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #EAF7F8; color: #000000;&#34;&gt;0.416&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Ligue 1&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Toulouse&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2018&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;18&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #EAF7F8; color: #000000;&#34;&gt;0.416&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Premier League&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Burnley&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2019&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;15&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #F3FBFB; color: #000000;&#34;&gt;0.413&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Fußball-Bundesliga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Hannover 96&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2018&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;13&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #F6FCFC; color: #000000;&#34;&gt;0.412&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;La Liga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Alavés&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2018&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;14&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #F6FCFC; color: #000000;&#34;&gt;0.412&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Ligue 1&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Amiens&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2018&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;13&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #F9FDFD; color: #000000;&#34;&gt;0.411&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Fußball-Bundesliga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;RB Leipzig&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2019&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;3&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #F9FDFD; color: #000000;&#34;&gt;0.411&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: transparent;&#34;&gt;La Liga&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: transparent;&#34;&gt;Leganés&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: transparent;&#34;&gt;2018&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: transparent;&#34;&gt;17&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #FFFFFF; color: #000000; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: transparent;&#34;&gt;0.409&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;SOURCE: &lt;a href=&#34;https://github.com/JaseZiv/worldfootballR&#34;&gt;worldfootballR&lt;/a&gt;&lt;br&gt;TABLE: &lt;a href=&#34;https://twitter.com/jaseziv&#34;&gt;@jaseziv&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;While not a considerable difference in the passing activities between the top five European domestic leagues, there is still some differences that will be interesting to see how their leagues evolve over the coming years.&lt;/p&gt;
&lt;p&gt;As always, any feedback or opinions would be valued in the comments sections, or feel free to get in touch on Twitter &lt;span class=&#34;citation&#34;&gt;[@jaseziv]&lt;/span&gt;(&lt;a href=&#34;https://twitter.com/jaseziv&#34; class=&#34;uri&#34;&gt;https://twitter.com/jaseziv&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Expected Goals and Liverpool - An Intro to worldfootballR</title>
      <link>/blog/liverpool-expected-goals-worldfootballr/</link>
      <pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate>
      <guid>/blog/liverpool-expected-goals-worldfootballr/</guid>
      <description>


&lt;p&gt;This post continues a series of posts that aims to showcase the new &lt;a href=&#34;https://github.com/JaseZiv/worldfootballR&#34;&gt;&lt;code&gt;worldfootballR&lt;/code&gt;&lt;/a&gt; R package for extracting world football (soccer) data from popular data site fbref.com.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/worldfootballR.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This post will aim to analyse expected goals and actual goals, primarily focusing on Liverpool.&lt;/p&gt;
&lt;p&gt;This season sees Liverpool in a struggle with a few teams in the hope of going back-to-back. I want to see if there is a difference in how the Reds are scoring this season as opposed to the last few seasons.&lt;/p&gt;
&lt;hr /&gt;
&lt;div id=&#34;extract-data-using-worldfootballr&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Extract Data Using &lt;code&gt;worldfootballR&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;As always, we first start by installing the package if you haven’t already done so and loading any libraries necessary for the analysis.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;devtools::install_github(&amp;quot;JaseZiv/worldfootballR&amp;quot;)
library(tidyverse)
library(worldfootballR)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To get match results, including goals and xG data, we can use the function &lt;code&gt;get_match_results()&lt;/code&gt;. Because we want it for the Men’s Premier League, we pass the following values to the function’s arguments:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xg_data &amp;lt;- get_match_results(country = &amp;quot;ENG&amp;quot;, gender = &amp;quot;M&amp;quot;, season_end_year = c(2018:2021))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can also see what the data looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 1,520
## Columns: 19
## $ Competition_Name &amp;lt;chr&amp;gt; &amp;quot;Premier League&amp;quot;, &amp;quot;Premier League&amp;quot;, &amp;quot;Premier League&amp;quot;…
## $ Gender           &amp;lt;chr&amp;gt; &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M…
## $ Country          &amp;lt;chr&amp;gt; &amp;quot;ENG&amp;quot;, &amp;quot;ENG&amp;quot;, &amp;quot;ENG&amp;quot;, &amp;quot;ENG&amp;quot;, &amp;quot;ENG&amp;quot;, &amp;quot;ENG&amp;quot;, &amp;quot;ENG&amp;quot;, &amp;quot;EN…
## $ Season_End_Year  &amp;lt;int&amp;gt; 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018…
## $ Round            &amp;lt;lgl&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
## $ Wk               &amp;lt;int&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2…
## $ Day              &amp;lt;chr&amp;gt; &amp;quot;Fri&amp;quot;, &amp;quot;Sat&amp;quot;, &amp;quot;Sat&amp;quot;, &amp;quot;Sat&amp;quot;, &amp;quot;Sat&amp;quot;, &amp;quot;Sat&amp;quot;, &amp;quot;Sat&amp;quot;, &amp;quot;Sa…
## $ Date             &amp;lt;date&amp;gt; 2017-08-11, 2017-08-12, 2017-08-12, 2017-08-12, 201…
## $ Time             &amp;lt;chr&amp;gt; &amp;quot;19:45&amp;quot;, &amp;quot;12:30&amp;quot;, &amp;quot;15:00&amp;quot;, &amp;quot;15:00&amp;quot;, &amp;quot;15:00&amp;quot;, &amp;quot;15:00&amp;quot;…
## $ Home             &amp;lt;chr&amp;gt; &amp;quot;Arsenal&amp;quot;, &amp;quot;Watford&amp;quot;, &amp;quot;West Brom&amp;quot;, &amp;quot;Everton&amp;quot;, &amp;quot;South…
## $ HomeGoals        &amp;lt;dbl&amp;gt; 4, 3, 1, 1, 0, 2, 0, 0, 0, 4, 0, 3, 2, 0, 0, 1, 1, 1…
## $ Home_xG          &amp;lt;dbl&amp;gt; 2.1, 2.0, 1.2, 0.4, 2.1, 1.0, 1.0, 0.5, 0.5, 2.1, 0.…
## $ Away             &amp;lt;chr&amp;gt; &amp;quot;Leicester City&amp;quot;, &amp;quot;Liverpool&amp;quot;, &amp;quot;Bournemouth&amp;quot;, &amp;quot;Stoke…
## $ AwayGoals        &amp;lt;dbl&amp;gt; 3, 3, 0, 0, 0, 3, 3, 2, 2, 0, 4, 2, 0, 2, 1, 0, 0, 0…
## $ Away_xG          &amp;lt;dbl&amp;gt; 1.6, 3.0, 0.4, 0.3, 0.4, 0.8, 1.7, 1.6, 2.2, 0.6, 2.…
## $ Attendance       &amp;lt;dbl&amp;gt; 59387, 20407, 25011, 39045, 31447, 41616, 25448, 304…
## $ Venue            &amp;lt;chr&amp;gt; &amp;quot;Emirates Stadium&amp;quot;, &amp;quot;Vicarage Road Stadium&amp;quot;, &amp;quot;The Ha…
## $ Referee          &amp;lt;chr&amp;gt; &amp;quot;Mike Dean&amp;quot;, &amp;quot;Anthony Taylor&amp;quot;, &amp;quot;Robert Madley&amp;quot;, &amp;quot;Nie…
## $ Notes            &amp;lt;chr&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To get season league tables (which contains goals scored for and against, and expected goals), we can use the &lt;code&gt;get_season_team_stats()&lt;/code&gt; functions, and pass the following values to the function arguments:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;end_season_summary &amp;lt;- get_season_team_stats(country = &amp;quot;ENG&amp;quot;, gender = &amp;quot;M&amp;quot;, season_end_year = c(2018:2021), stat_type = &amp;quot;league_table&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And inspect the data:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 80
## Columns: 24
## $ Competition_Name &amp;lt;chr&amp;gt; &amp;quot;Premier League&amp;quot;, &amp;quot;Premier League&amp;quot;, &amp;quot;Premier League&amp;quot;…
## $ Gender           &amp;lt;chr&amp;gt; &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M…
## $ Country          &amp;lt;chr&amp;gt; &amp;quot;ENG&amp;quot;, &amp;quot;ENG&amp;quot;, &amp;quot;ENG&amp;quot;, &amp;quot;ENG&amp;quot;, &amp;quot;ENG&amp;quot;, &amp;quot;ENG&amp;quot;, &amp;quot;ENG&amp;quot;, &amp;quot;EN…
## $ Season_End_Year  &amp;lt;int&amp;gt; 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020…
## $ Squad            &amp;lt;chr&amp;gt; &amp;quot;Arsenal&amp;quot;, &amp;quot;Aston Villa&amp;quot;, &amp;quot;Bournemouth&amp;quot;, &amp;quot;Brighton&amp;quot;,…
## $ Team_or_Opponent &amp;lt;chr&amp;gt; &amp;quot;team&amp;quot;, &amp;quot;team&amp;quot;, &amp;quot;team&amp;quot;, &amp;quot;team&amp;quot;, &amp;quot;team&amp;quot;, &amp;quot;team&amp;quot;, &amp;quot;tea…
## $ Rk               &amp;lt;int&amp;gt; 8, 17, 18, 15, 10, 4, 14, 12, 5, 1, 2, 3, 13, 20, 9,…
## $ MP               &amp;lt;int&amp;gt; 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, …
## $ W                &amp;lt;int&amp;gt; 14, 9, 9, 9, 15, 20, 11, 13, 18, 32, 26, 18, 11, 5, …
## $ D                &amp;lt;int&amp;gt; 14, 8, 7, 14, 9, 6, 10, 10, 8, 3, 3, 12, 11, 6, 12, …
## $ L                &amp;lt;int&amp;gt; 10, 21, 22, 15, 14, 12, 17, 15, 12, 3, 9, 8, 16, 27,…
## $ GF               &amp;lt;int&amp;gt; 56, 41, 40, 39, 43, 69, 31, 44, 67, 85, 102, 66, 38,…
## $ GA               &amp;lt;int&amp;gt; 48, 67, 65, 54, 50, 54, 50, 56, 41, 33, 35, 36, 58, …
## $ GDiff            &amp;lt;int&amp;gt; 8, -26, -25, -15, -7, 15, -19, -12, 26, 52, 67, 30, …
## $ Pts              &amp;lt;int&amp;gt; 56, 35, 34, 41, 54, 66, 43, 49, 62, 99, 81, 66, 44, …
## $ xG               &amp;lt;dbl&amp;gt; 49.2, 40.1, 42.7, 41.2, 43.9, 66.6, 34.0, 49.3, 61.6…
## $ xGA              &amp;lt;dbl&amp;gt; 56.6, 65.9, 57.5, 54.5, 48.3, 37.9, 51.3, 48.4, 44.5…
## $ xGDiff           &amp;lt;dbl&amp;gt; -7.3, -25.8, -14.8, -13.3, -4.4, 28.6, -17.3, 0.9, 1…
## $ xGDiff.90        &amp;lt;dbl&amp;gt; -0.19, -0.68, -0.39, -0.35, -0.12, 0.75, -0.46, 0.02…
## $ Attendance       &amp;lt;chr&amp;gt; &amp;quot;47,589&amp;quot;, &amp;quot;28,505&amp;quot;, &amp;quot;7,745&amp;quot;, &amp;quot;22,369&amp;quot;, &amp;quot;15,995&amp;quot;, &amp;quot;32…
## $ Top.Team.Scorer  &amp;lt;chr&amp;gt; &amp;quot;Pierre-Emerick Aubameyang - 22&amp;quot;, &amp;quot;Jack Grealish - 8…
## $ Goalkeeper       &amp;lt;chr&amp;gt; &amp;quot;Bernd Leno&amp;quot;, &amp;quot;Tom Heaton&amp;quot;, &amp;quot;Aaron Ramsdale&amp;quot;, &amp;quot;Mathe…
## $ Notes            &amp;lt;chr&amp;gt; &amp;quot;→ UEFA Europa League via cup win 2&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Relegated…
## $ Last.5           &amp;lt;chr&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;the-analysis&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The Analysis&lt;/h1&gt;
&lt;p&gt;So what are expected goals? From &lt;a href=&#34;https://www.optasports.com/services/analytics/advanced-metrics/&#34;&gt;Opta Sports&lt;/a&gt;;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;EXPECTED GOALS (XG) MEASURES THE QUALITY OF A SHOT BASED ON SEVERAL VARIABLES SUCH AS ASSIST TYPE, SHOT ANGLE AND DISTANCE FROM GOAL, WHETHER IT WAS A HEADED SHOT AND WHETHER IT WAS DEFINED AS A BIG CHANCE. &lt;br&gt;&lt;br&gt;ADDING UP A PLAYER OR TEAM’S EXPECTED GOALS CAN GIVE US AN INDICATION OF HOW MANY GOALS A PLAYER OR TEAM SHOULD HAVE SCORED ON AVERAGE, GIVEN THE SHOTS THEY HAVE TAKEN.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Why are we focusing on expected goals in this post?&lt;/p&gt;
&lt;p&gt;Well it can be seen below that for the 2017/18 to 2019/20 seasons, the more teams scored above their expected goals tally, the more points they tended to finish the season on, indicating a fairly strong positive relationship.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/liverpool_xg_analysis_files/figure-html/xg_wins_cor-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;how-are-the-reds-tracking&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;How are the Reds tracking?&lt;/h2&gt;
&lt;p&gt;Which leads us to Liverpool. Below we can chart Liverpool’s cumulative progress after each match played for the last four seasons and can see that in each of the three seasons before the current season, the Reds outperformed their expected goals tally, with last season’s championship team exceeding their expected goals total for the whole season.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/liverpool_xg_analysis_files/figure-html/liv_xg-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This current season, other than the 7-0 drubbing (xG of 2.2) against Crystal Palace at Selhurst Park, Liverpool’s goals tally has closely tracked the expected goals. The Reds marksmen just aren’t able to convert those guilt edge chances this season, which might explain the struggle at the top.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;wrap-up&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Wrap Up&lt;/h1&gt;
&lt;p&gt;This was the second post in a series of analyses that will make use of various data extraction functions in the worldfootballR package.&lt;/p&gt;
&lt;p&gt;Here we saw that Liverpool appeared to have regressed to the mean somewhat and are struggling to score much higher than they’re expected, based on their shots taken. This is in contrast to the previous three seasons, where the goals scored outpaced the expected goals.&lt;/p&gt;
&lt;p&gt;As always, any questions/comments about the piece or the R package, feel free to reach out through the regular channels.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Liverpool&#39;s Earlier Subsititutions - an Introduction to worldfootballR</title>
      <link>/blog/liverpools-early-substitutions-worldfootballr/</link>
      <pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate>
      <guid>/blog/liverpools-early-substitutions-worldfootballr/</guid>
      <description>


&lt;p&gt;With the creation of the &lt;a href=&#34;https://github.com/JaseZiv/worldfootballR&#34;&gt;&lt;code&gt;worldfootballR&lt;/code&gt;&lt;/a&gt; R package (a new R package to aid in the extraction of Football (Soccer) data from &lt;a href=&#34;fbref.com&#34;&gt;fbref&lt;/a&gt;), I will be trying to highlight ways the package can be used.&lt;/p&gt;
&lt;p&gt;In this piece, I will analyse Liverpool’s use of substitutions in the English Premier League (EPL) over the last three seasons to understand whether there has been a change in behaviour in the currrent season, and whether there was a change around the COVID outbreak and subsequent pause taken during the 2019-2020 season.&lt;/p&gt;
&lt;p&gt;Data was extracted for the last two and a half seasons, up to the end of matchweek 17 in the 2020/21 EPL season.&lt;/p&gt;
&lt;div id=&#34;extract-data-using-worldfootballr&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Extract Data Using &lt;code&gt;worldfootballR&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The package has a function called &lt;code&gt;get_match_summary&lt;/code&gt; which extracts match summary (goals, subs, red/yellow cards) data for a match URLs.&lt;/p&gt;
&lt;p&gt;To get the match URLs, another function - &lt;code&gt;get_match_urls&lt;/code&gt; - can be used, which accepts a country code (“ENG” for England), gender and the year the season(s) ended, and returns a vector of match URLs.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;devtools::install_github(&amp;quot;JaseZiv/worldfootballR&amp;quot;)
library(worldfootballR)

match_urls &amp;lt;- get_match_urls(country = &amp;quot;ENG&amp;quot;, gender = &amp;quot;M&amp;quot;, season_end_year = c(2019:2021))

match_summaries &amp;lt;- get_match_summary(match_url = match_urls)&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;teams-making-their-first-sub&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Teams making their first sub&lt;/h2&gt;
&lt;p&gt;Now that the package instructions are out of the way, we turn our attention to the analysis of substitution data in the Premier League, and specifically ask the question, has there been a change in Liverpool’s substitution behaviour.&lt;/p&gt;
&lt;p&gt;The analysis was loosely inspired by a piece done by FiveThirtyEight on &lt;a href=&#34;https://fivethirtyeight.com/features/bundesliga-teams-could-be-using-more-substitutions-but-they-arent/&#34;&gt;Bundesliga team susbstitutions before and after the league restart&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;all-teams&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;All Teams&lt;/h3&gt;
&lt;p&gt;When the COVID-19 pandemic swept across the nation, some of the major leagues were forced to pause their seasons while cases became manageable.&lt;/p&gt;
&lt;p&gt;During the 2019-20 season before the virus halted play, teams were typically making their first sub at the 56th minute, which was consistent with that of the 2018-19 season, however once play resumed (and teams were allowed to make more subs), that number dropped to 46 minutes (half-time typically).&lt;/p&gt;
&lt;p&gt;This current season has seen the teams’ behaviour revert back to the pre-restarted season numbers (54 minutes).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/reds_subs_analysis_files/figure-html/leauge_times-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;what-about-liverpool-where-do-they-sit&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;What about Liverpool; where do they sit?&lt;/h3&gt;
&lt;p&gt;In all seasons analysed, Liverpool make slightly more subs in a season compared to the league average, with the average number of subs in a season peaking after the restart last season to 4.67 subs per game. The current season has seen this revert to pre-COVID levels.&lt;/p&gt;
&lt;p&gt;Interestingly, while Liverpool’s first sub typically comes slightly later than the league average (56 minutes compared to 52 minutes), the Reds have stuck close to their first sub time after the season restart, while the league average has reverted back to pre-COVID levels, reversing the league-wide trend.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;and-the-first-hour&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;And the first hour?&lt;/h3&gt;
&lt;p&gt;The Reds made 12% of their substitutions in the first hour during the combined 2019-20 season (double that of their 2018-19 season), and this season has seen this percentage again double through the first 16 games. The league however has experienced a direct reversal of this trend, spiking to 24% during the restarted part of the 19/20 season, and settling back down at the league average for the previous seasons.&lt;/p&gt;
&lt;p&gt;It will be interesting to see how this trend continues throughout the latter parts of this season.&lt;/p&gt;
&lt;style&gt;@import url(&#34;https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap&#34;);
html {
  font-family: Chivo, -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#kbcypgyzgc .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 3px;
  border-top-color: transparent;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 3px;
  border-bottom-color: transparent;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#kbcypgyzgc .gt_heading {
  background-color: #FFFFFF;
  text-align: left;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#kbcypgyzgc .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#kbcypgyzgc .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#kbcypgyzgc .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#kbcypgyzgc .gt_col_headings {
  border-top-style: solid;
  border-top-width: 3px;
  border-top-color: transparent;
  border-bottom-style: solid;
  border-bottom-width: 3px;
  border-bottom-color: black;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#kbcypgyzgc .gt_col_heading {
  color: #333333;
  background-color: white;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#kbcypgyzgc .gt_column_spanner_outer {
  color: #333333;
  background-color: white;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#kbcypgyzgc .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#kbcypgyzgc .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#kbcypgyzgc .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 3px;
  border-bottom-color: black;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#kbcypgyzgc .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#kbcypgyzgc .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#kbcypgyzgc .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#kbcypgyzgc .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#kbcypgyzgc .gt_row {
  padding-top: 3px;
  padding-bottom: 3px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#kbcypgyzgc .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#kbcypgyzgc .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#kbcypgyzgc .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#kbcypgyzgc .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#kbcypgyzgc .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#kbcypgyzgc .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#kbcypgyzgc .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#kbcypgyzgc .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#kbcypgyzgc .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#kbcypgyzgc .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#kbcypgyzgc .gt_sourcenote {
  font-size: 12px;
  padding: 4px;
}

#kbcypgyzgc .gt_left {
  text-align: left;
}

#kbcypgyzgc .gt_center {
  text-align: center;
}

#kbcypgyzgc .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#kbcypgyzgc .gt_font_normal {
  font-weight: normal;
}

#kbcypgyzgc .gt_font_bold {
  font-weight: bold;
}

#kbcypgyzgc .gt_font_italic {
  font-style: italic;
}

#kbcypgyzgc .gt_super {
  font-size: 65%;
}

#kbcypgyzgc .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;kbcypgyzgc&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;9&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style=&#34;font-family: Chivo; font-size: xx-large; text-align: center;&#34;&gt;&lt;strong&gt;LIVERPOOL SUBBING MORE IN THE FIRST 60 MINUTES&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;9&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style=&#34;font-family: Chivo; font-size: x-large; text-align: center;&#34;&gt;&lt;em&gt;The rate that Liverpool are subbing in the first 60 minutes has doubled from last season, with 1 in 4 subs coming in this time period - double last season&#39;s rate&lt;/em&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;2&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_center gt_columns_top_border gt_column_spanner_outer&#34; rowspan=&#34;1&#34; colspan=&#34;2&#34; style=&#34;text-align: center; font-weight: bold;&#34;&gt;
        &lt;span class=&#34;gt_column_spanner&#34;&gt;Number of Subs&lt;/span&gt;
      &lt;/th&gt;
      &lt;th class=&#34;gt_center gt_columns_top_border gt_column_spanner_outer&#34; rowspan=&#34;1&#34; colspan=&#34;2&#34; style=&#34;text-align: center; font-weight: bold;&#34;&gt;
        &lt;span class=&#34;gt_column_spanner&#34;&gt;Avg Time to 1st Sub&lt;/span&gt;
      &lt;/th&gt;
      &lt;th class=&#34;gt_center gt_columns_top_border gt_column_spanner_outer&#34; rowspan=&#34;1&#34; colspan=&#34;2&#34; style=&#34;text-align: center; font-weight: bold;&#34;&gt;
        &lt;span class=&#34;gt_column_spanner&#34;&gt;Subs/Game&lt;/span&gt;
      &lt;/th&gt;
      &lt;th class=&#34;gt_center gt_columns_top_border gt_column_spanner_outer&#34; rowspan=&#34;1&#34; colspan=&#34;2&#34; style=&#34;text-align: center; font-weight: bold;&#34;&gt;
        &lt;span class=&#34;gt_column_spanner&#34;&gt;Share Subs in 1st 60&lt;/span&gt;
      &lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;text-align: center; font-weight: bold;&#34;&gt;Liverpool&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;text-align: center; font-weight: bold;&#34;&gt;Rest of League&lt;sup class=&#34;gt_footnote_marks&#34;&gt;1&lt;/sup&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;text-align: center; font-weight: bold;&#34;&gt;Liverpool&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;text-align: center; font-weight: bold;&#34;&gt;Rest of League&lt;sup class=&#34;gt_footnote_marks&#34;&gt;1&lt;/sup&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;text-align: center; font-weight: bold;&#34;&gt;Liverpool&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;text-align: center; font-weight: bold;&#34;&gt;Rest of League&lt;sup class=&#34;gt_footnote_marks&#34;&gt;1&lt;/sup&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;text-align: center; font-weight: bold;&#34;&gt;Liverpool&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;text-align: center; font-weight: bold;&#34;&gt;Rest of League&lt;sup class=&#34;gt_footnote_marks&#34;&gt;1&lt;/sup&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left gt_stub&#34;&gt;2018-2019&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;112&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;108&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;64&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;51&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;2.95&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;2.85&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;6%&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;18%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left gt_stub&#34;&gt;2019-2020 - Before Restart&lt;sup class=&#34;gt_footnote_marks&#34;&gt;2&lt;/sup&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;87&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;79&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;64&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;50&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;3.00&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;2.77&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;12%&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;18%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left gt_stub&#34;&gt;2019-2020 - After Restart&lt;sup class=&#34;gt_footnote_marks&#34;&gt;2&lt;/sup&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;42&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;35&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;57&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;49&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;4.67&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;3.77&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;12%&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;24%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left gt_stub&#34;&gt;2020-2021&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;47&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;45&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;56&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;52&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;2.94&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;2.74&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;background-color: #8B0000; color: white; font-weight: bold; text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;24%&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;background-color: #8B0000; color: white; font-weight: bold; text-align: center; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: lightgrey;&#34;&gt;18%&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;9&#34;&gt;SOURCE: &lt;a href=&#34;https://github.com/JaseZiv/worldfootballR&#34;&gt;worldfootballR&lt;/a&gt;&lt;br&gt;TABLE: &lt;a href=&#34;https://twitter.com/jaseziv&#34;&gt;@jase_ziv&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tfoot&gt;
    &lt;tr class=&#34;gt_footnotes&#34;&gt;
      &lt;td colspan=&#34;9&#34;&gt;
        &lt;p class=&#34;gt_footnote&#34;&gt;
          &lt;sup class=&#34;gt_footnote_marks&#34;&gt;
            &lt;em&gt;1&lt;/em&gt;
          &lt;/sup&gt;
           
          &lt;em&gt;All clubs excluding Liverpool&lt;/em&gt;
          &lt;br /&gt;
        &lt;/p&gt;
        &lt;p class=&#34;gt_footnote&#34;&gt;
          &lt;sup class=&#34;gt_footnote_marks&#34;&gt;
            &lt;em&gt;2&lt;/em&gt;
          &lt;/sup&gt;
           
          &lt;em&gt;COVID-interrupted Season&lt;/em&gt;
          &lt;br /&gt;
        &lt;/p&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;wrap-up&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Wrap Up&lt;/h2&gt;
&lt;p&gt;This was the first in a series of analyses that will make use of various data extraction functions in the &lt;code&gt;worldfootballR&lt;/code&gt; package.&lt;/p&gt;
&lt;p&gt;Here we saw that Liverpool are making their first substitution earlier than their previous trends, and are deviating from the league averages. I will follow this analysis to see if this trend has continued.&lt;/p&gt;
&lt;p&gt;As always, any questions/comments about the piece or the R package, feel free to reach out through the regular channels.&lt;/p&gt;
&lt;p&gt;GO REDS!!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Applying Pythagorean Expectation to Pro Sports - An Intro</title>
      <link>/blog/pythagorean-expectation-pro-sports/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/blog/pythagorean-expectation-pro-sports/</guid>
      <description>


&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This piece is the first part in a series of posts I will be releasing that will look to analyse how many wins teams should’ve won given their performances over the season and compare them to their actual wins achieved. To achieve this goal, it will apply a commonly known method in the sports analytics community called &lt;em&gt;Pythagorean Expectation&lt;/em&gt;.&lt;/p&gt;
&lt;div id=&#34;sports-in-the-report&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Sports in the Report:&lt;/h2&gt;
&lt;p&gt;The series of posts will look to analyse a number of very popular sports leagues around the globe (ie the NBA), and in some sports’ cases, the analysis will span multiple leagues (ie professional soccer has a number of “major” leagues around the globe).&lt;/p&gt;
&lt;p&gt;The following professional sports/sporting leagues will be included in the series:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;College Basketball (Men’s and Women’s)&lt;/li&gt;
&lt;li&gt;NBA&lt;/li&gt;
&lt;li&gt;NFL&lt;/li&gt;
&lt;li&gt;NHL&lt;/li&gt;
&lt;li&gt;Soccer (Football)&lt;/li&gt;
&lt;li&gt;Australian Rules Football (AFL)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As they become available, you’ll be able to click the link to them.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;pythagorean-expectation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Pythagorean Expectation&lt;/h1&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/Morey%20formula_L.jpg&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;GM of the Houston Rockets Daryl Morey. Source: Northwestern.edu&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;While we are effortlessly able to count the wins and losses a team experiences, we might want to be able to assess the number of wins they had, versus how many wins they should have had, given their performances during the season. This might be able to tell us something about whether any luck or other factors played a part in a team’s success (or failure).&lt;/p&gt;
&lt;p&gt;Ok great, so how do we know how many wins our team was supposed to get?&lt;/p&gt;
&lt;p&gt;Enter, &lt;em&gt;Pythagorean Expectation&lt;/em&gt;. While many question whether he was actually the creator of the &lt;em&gt;Pythagorean Theorem&lt;/em&gt;, the famed philosopher Pythagoras (c. 570 – c. 495 BC) had nothing to do with &lt;em&gt;Pythagorean Expectation&lt;/em&gt;. Rather, another legend of our time and one of the founding fathers of sports analytics, Bill James, came up with this for the sport of baseball.&lt;/p&gt;
&lt;p&gt;Rather than explaining Pythagorean Expectation myself, why not consult Wikipedia:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pythagorean expectation is a sports analytics formula devised by Bill James to estimate the percentage of games a baseball team “should” have won based on the number of runs they scored and allowed. Comparing a team’s actual and Pythagorean winning percentage can be used to make predictions and evaluate which teams are over-performing and under-performing. The name comes from the formula’s resemblance to the Pythagorean theorem.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;James’ formula is as follows:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(win\ ratio_{baseball} = \frac{runs\ scored^{k}}{runs\ scored^{k}\ +\ runs\ allowed^{k}}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: the k-factor James came up with was 2, but has since been modified to 1.83 to better “fit”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Using James’ formula as a blueprint, the GM of the Houston Rockets Daryl Morey too the formula and modified it for basketball, and found that the best fit occurred when &lt;code&gt;k = 13.91&lt;/code&gt;, leaving the folowing formula to calculate Pythagorean Expected wins for Basketball:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(win\ ratio_{basketball} = \frac{points\ for^{13.91}}{points\ for^{13.91}\ +\ points\ against^{13.91}}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The output of this formula is then multiplied against games played to give the expected wins for the period analysed. This expected wins value is then compared to the teams actual wins, to determine how much lady luck played a part in the team’s season.&lt;/p&gt;
&lt;p&gt;You must see a pattern by now. The formula remains the same, while the &lt;code&gt;k&lt;/code&gt; factor changes based on the sport.&lt;/p&gt;
&lt;div id=&#34;different-k-factors&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Different &lt;code&gt;k&lt;/code&gt; Factors&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;k&lt;/code&gt; factor changes between sports because of the nature of the sports themselves. Some sports, like basketball, are higher scoring and less likely to be decided by chance, hence a higher &lt;code&gt;k&lt;/code&gt; factor.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Sport&lt;/th&gt;
&lt;th&gt;K*&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Basketball&lt;/td&gt;
&lt;td&gt;13.91&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;NFL&lt;/td&gt;
&lt;td&gt;2.37&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;NHL&lt;/td&gt;
&lt;td&gt;2.15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;EPL&lt;/td&gt;
&lt;td&gt;1.3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;*k may vary based on who has derived an “optimal” k&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;how-can-we-use-it&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;How can we use it?&lt;/h2&gt;
&lt;p&gt;Studies have shown that winning more games than your Pythagorean Expectation tends to mean a team will decline the following season, while falling short of expectations in the current year tends to mean a team will improve the following season.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;the-formula-in-code&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The formula in code&lt;/h1&gt;
&lt;p&gt;The below function in R code will be used extensively throughout the series to calculate our expected wins factor, to be applied to a team’s games played during the season.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# create function to apply the formula
calculate_expected_wins &amp;lt;- function(points_for, points_against, k) {
  expected_wins &amp;lt;- ((points_for^k) / ((points_for^k) + (points_against^k)))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Stay tuned for the first sport in our series, College Basketball!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>The Agony and the Ecstasy of my first open source contribution</title>
      <link>/blog/first-open-source-contribution/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/blog/first-open-source-contribution/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;For the last year or so, I’ve had this desire to contribute to an open source R package, but like a lot of people, I found the thought of tackling the task frightening.&lt;/p&gt;
&lt;p&gt;While I work in a really dynamic and close team every day, and in the world of remote repositories (Git), I’ve had really limited exposure to collaborative working in these remote repositories… We tend more to work on projects largely on our own, so the concepts of pull requests (PRs), merging, forking… well it was all a bit daunting.&lt;/p&gt;
&lt;p&gt;The following is a glimpse at the journey, and will be explained in this post:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/process.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;What this post won’t be is an exhaustive step-by-step guide of every touch point, rather a medium-high level summary.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Life is not meant to be easy, my child; but take courage: it can be delightful.&lt;/em&gt;
- George Bernard Shaw&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With George’s words in mind, I thought time to push myself to jump in.&lt;/p&gt;
&lt;p&gt;Scrolling through Twitter (as one does when nursing a newborn), I came across a tweet about a package I’ve used in a few analyses on &lt;em&gt;Don’t Blame the Data&lt;/em&gt; that said that the package was now live on CRAN (a great achievement).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/twitter.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This naturally led me to the repository on &lt;a href=&#34;https://github.com/jimmyday12/fitzRoy&#34;&gt;github&lt;/a&gt;, at which point I noticed there were open “Issues”, and one of these being for a function to create a ladder for any round.&lt;/p&gt;
&lt;div id=&#34;the-fitzroy-package&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The fitzRoy Package&lt;/h2&gt;
&lt;p&gt;The fitzRoy package, created by &lt;a href=&#34;https://github.com/jimmyday12&#34;&gt;James Day&lt;/a&gt;, is a package designed to help R users extract and analyse Australian Football League (AFL) data for both the men’s and women’s competitions:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The goal of fitzRoy is to provide a set of functions that allows for users to easily get access to AFL data from sources such as afltables.com and footywire.com. There are also tools for processing and cleaning that data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While I certainly haven’t done any extensive analysis on this point, I would guess that a large proportion of all AFL data analytics projects are completed with the help of this package.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;jumping-right-in&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Jumping right in&lt;/h2&gt;
&lt;p&gt;So rather than think about how good it would be to contribute, why not just get in touch with James and offer to address the open issue…&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/communicate.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;James was super easy to deal with, and boy was he helpful (and patient with this bumbling fool).&lt;/p&gt;
&lt;p&gt;Then came the time to write the function. Well sort of write the function. Fortunately, I had already written this function for a linear regression model I built for predicting the attendance of AFL home and away games &lt;a href=&#34;https://www.dontblamethedata.com/blog/building-a-linear-regression-model-in-r-to-predict-afl-crowds/&#34;&gt;here&lt;/a&gt;. The function was aptly named &lt;code&gt;return_ladder()&lt;/code&gt;… I’m a Data Scientist, not a poet.&lt;/p&gt;
&lt;p&gt;The function was modified somewhat though to take advantage of the &lt;code&gt;get_match_results()&lt;/code&gt; function in the package to return the starting data frame for &lt;code&gt;return_ladder&lt;/code&gt; When writing the function, I wanted to address the requirement that the ladder be returned for any round, and for it to be returned for even earlier than the 2011 season, which another API already offered.&lt;/p&gt;
&lt;p&gt;With that in mind, the function written takes in three arguments, all of which have the option of being blank, as well as specified:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;match_results_df&lt;/code&gt; - A data frame extracted using &lt;code&gt;get_match_results()&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;season_round&lt;/code&gt; - The round of the season the user wants the ladder for,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;season&lt;/code&gt; - The season the ladder is required for.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If these are all left blank, the function will return the ladder for every round of every season since the 1897 season.&lt;/p&gt;
&lt;p&gt;Having the function written was one thing, it also required roxygen notes, that are returned to the user in the help docs of the function. Hadley’s &lt;a href=&#34;http://r-pkgs.had.co.nz/man.html&#34;&gt;R Packages&lt;/a&gt; book does a good job explaining these.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;im-ready-to-be-a-contributor&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;I’m ready to be a contributor&lt;/h2&gt;
&lt;p&gt;I’ve written the function, the help docs, and have checked the package using &lt;code&gt;devtools::check()&lt;/code&gt; to make sure I haven’t made any mistakes that would cause the package to fail it’s build… Nothing looks alarming (well there are some warnings about &lt;em&gt;No visible binding for global variable&lt;/em&gt; or something but I’m sure there’s nothing to worry about), but all looked good to me.&lt;/p&gt;
&lt;p&gt;My local changes were committed and a PR was made, I’m ready to be a contributor, and then bam! &lt;strong&gt;Failed codecov&lt;/strong&gt;!! What is that?! An email to James and I’m told it’s because there were no tests written. Ok cool, I’ll write some tests… WHAT ARE TESTS?! HOW DO I WRITE THESE TESTS?! I found this &lt;a href=&#34;https://katherinemwood.github.io/post/testthat/&#34;&gt;post&lt;/a&gt; to be really helpful, as well as Hadley’s tests in the R Packages book.&lt;/p&gt;
&lt;p&gt;Once these tests were written, I commit my changes, I’m ready to be a contributor, and then bam! Changes have been made to the master that I haven’t got in my PR… ok so I need to merge the master in my PR - easy (for some maybe, I have no idea). A bit of googling, seems pretty easy, but after typing &lt;code&gt;git merge origin/master&lt;/code&gt;, I get this editor pop up in terminal:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/vim.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;My initial thoughts? What the is this?!&lt;/p&gt;
&lt;p&gt;Bit of googling, ok, it’s a VIM editor. Easy. Write a commit message and then all should be good… WAIT?! How do I get out of this screen?! Bit more googling and after typing &lt;code&gt;:WQ&lt;/code&gt;, we’re ready to rock.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;what.-am.-i.-doing&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What. Am. I. Doing?!!&lt;/h2&gt;
&lt;p&gt;Ok so things were looking good. I’d committed my changes, all checks passed, happy days.&lt;/p&gt;
&lt;p&gt;You know that line I had earlier about &lt;em&gt;well there are some warnings about ‘No visible binding for global variable’ or something but I’m sure there’s nothing to worry about&lt;/em&gt;?? Well that was nagging away at me, because as James had advised, these would cause issues when trying to include the update on CRAN. So I fixed those, and also updated the Men’s vignette. It’s at this point that I’m a bit hazy on what I did, but all I know is is that I must have spun myself into a Git web…&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Master&lt;/code&gt; of my forked repo was two commits behind my branch &lt;code&gt;Ladder&lt;/code&gt;, which was five commit’s ahead of &lt;code&gt;Origin/Master&lt;/code&gt;. What. Am. I. Doing?! Trial and error, error and trial. After much heartache (I can’t stress enough how much heartache), eventually, I got myself all sorted, created another PR and… SUCCESS!!!&lt;/p&gt;
&lt;p&gt;Finally I can say I have successfully made my first contribution to an open source project. I hope that users of this package find the function useful and as with everything, can find improvements to make it even better.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;a-quick-look-at-the-function&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;A quick look at the function&lt;/h2&gt;
&lt;p&gt;The below code gives a glimpse into how the function can be used.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#----- Install and Load Package -----#
# devtools::install_github(&amp;quot;jimmyday12/fitzRoy&amp;quot;)

library(fitzRoy)
library(tidyverse)
library(kableExtra)

# get a data frame of AFL data using get_match_results
afl_data &amp;lt;- get_match_results()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Return the ladder for all teams, for all rounds since 1897&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# apply the return_ladder function
ladder &amp;lt;- return_ladder(match_results_df = afl_data)
head(ladder, 16) %&amp;gt;% 
  kable(format = &amp;quot;html&amp;quot;, escape = F) %&amp;gt;%
  kable_styling(&amp;quot;striped&amp;quot;) %&amp;gt;% 
  scroll_box(width = &amp;quot;750px&amp;quot;, height = &amp;quot;600px&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:600px; overflow-x: scroll; width:750px; &#34;&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Season
&lt;/th&gt;
&lt;th style=&#34;text-align:left;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Team
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Round.Number
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Season.Points
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Score.For
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Score.Against
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Percentage
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Ladder.Position
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Fitzroy
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
49
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.0625000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Collingwood
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.5625000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Essendon
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
47
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.9583333
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Melbourne
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
44
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.6296296
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sydney
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
44
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6136364
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Geelong
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
47
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5106383
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
St Kilda
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.3902439
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Carlton
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
49
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.3265306
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Fitzroy
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
115
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
42
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.7380952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Melbourne
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
108
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
46
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.3478261
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Collingwood
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
91
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
46
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.9782609
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Essendon
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
77
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
74
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0405405
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sydney
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
67
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
80
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8375000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Carlton
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
52
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
89
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5842697
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
St Kilda
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
42
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
107
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.3925234
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Geelong
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
111
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.3873874
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Return the ladder for round 1 for all teams since 1897&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# what if we want the ladder for a specific round?
ladder_round_1 &amp;lt;- return_ladder(match_results_df = afl_data, season_round = 1)
tail(ladder_round_1, 18) %&amp;gt;% 
  kable(format = &amp;quot;html&amp;quot;, escape = F) %&amp;gt;%
  kable_styling(&amp;quot;striped&amp;quot;) %&amp;gt;% 
  scroll_box(width = &amp;quot;750px&amp;quot;, height = &amp;quot;600px&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:600px; overflow-x: scroll; width:750px; &#34;&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Season
&lt;/th&gt;
&lt;th style=&#34;text-align:left;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Team
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Round.Number
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Season.Points
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Score.For
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Score.Against
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Percentage
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Ladder.Position
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
GWS
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
112
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
40
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.8000000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Fremantle
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
141
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
59
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.3898305
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brisbane Lions
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
102
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
58
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.7586207
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hawthorn
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
87
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
55
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.5818182
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Richmond
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
97
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
64
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.5156250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Port Adelaide
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
87
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
61
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.4262295
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Footscray
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
82
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
65
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.2615385
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Geelong
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
65
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1076923
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
St Kilda
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
85
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
84
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0119048
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Gold Coast
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
84
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
85
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9882353
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Collingwood
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
65
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9027778
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sydney
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
65
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
82
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7926829
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Melbourne
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
61
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
87
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7011494
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Carlton
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
64
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
97
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6597938
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Adelaide
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
55
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
87
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6321839
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
15
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
West Coast
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
58
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
102
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5686275
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
North Melbourne
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
59
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
141
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.4184397
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2019
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Essendon
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
40
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
112
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.3571429
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Return the ladder for every round of the 2018 season&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# finally, for every round in just one season
ladder_2018 &amp;lt;- return_ladder(match_results_df = afl_data, season = 2018)
head(ladder_2018, 18) %&amp;gt;% 
  kable(format = &amp;quot;html&amp;quot;, escape = F) %&amp;gt;%
  kable_styling(&amp;quot;striped&amp;quot;) %&amp;gt;% 
  scroll_box(width = &amp;quot;750px&amp;quot;, height = &amp;quot;600px&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:600px; overflow-x: scroll; width:750px; &#34;&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Season
&lt;/th&gt;
&lt;th style=&#34;text-align:left;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Team
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Round.Number
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Season.Points
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Score.For
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Score.Against
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Percentage
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Ladder.Position
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
GWS
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
133
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
51
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.6078431
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Port Adelaide
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
110
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.8333333
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hawthorn
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
101
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
67
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.5074627
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Gold Coast
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
55
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.4102564
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sydney
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
115
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
86
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.3372093
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
St Kilda
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
107
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
82
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.3048780
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Richmond
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
121
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
95
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.2736842
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Essendon
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
99
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
87
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1379310
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Geelong
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
97
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
94
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0319149
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Melbourne
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
94
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
97
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9690722
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Adelaide
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
87
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
99
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8787879
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Carlton
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
95
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
121
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7851240
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brisbane Lions
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
82
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
107
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7663551
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
West Coast
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
86
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
115
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7478261
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
North Melbourne
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
55
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7090909
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
15
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Collingwood
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
67
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
101
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6633663
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Fremantle
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
110
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5454545
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2018
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Footscray
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
51
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
133
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.3834586
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;I will be writing a follow up post analysing the AFL ladder through history to really test the function out!&lt;/p&gt;
&lt;p&gt;Stay tuned.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>All roads lead to gganimate</title>
      <link>/blog/all-roads-lead-to-gganimate/</link>
      <pubDate>Fri, 30 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/blog/all-roads-lead-to-gganimate/</guid>
      <description>


&lt;p&gt;This post aims to introduce you to animating ggplot2 visualisations in r using the &lt;a href=&#34;https://github.com/thomasp85/gganimate&#34;&gt;gganimate&lt;/a&gt; package by Thomas Lin Pedersen.&lt;/p&gt;
&lt;p&gt;The post will visualise the theoretical winnings I would’ve had, had I followed the simple model to predict (or tip as it’s known in Australia) winners in the AFL that I explained in this &lt;a href=&#34;https://www.dontblamethedata.com/blog/simplifying-afl-tipping/&#34;&gt;post&lt;/a&gt;. The data used in the analysis was collected from the AFL Tables website as part of a larger series I wrote about on AFL crowds. The wider project can be found &lt;a href=&#34;https://github.com/JaseZiv/AFL-Crowd-Analytics&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(lubridate)
library(scales)
library(gganimate)

# set themes
theme_set(theme_minimal() +
          theme(axis.title.x = element_text(size = 16, hjust = 1), 
                axis.title.y = element_text(size = 16), 
                axis.text = element_text(size = 13),
                plot.title = element_text(size = 19)))

# create a colour pallette
colours &amp;lt;- c(&amp;quot;#5EB296&amp;quot;, &amp;quot;#4E9EBA&amp;quot;, &amp;quot;#F29239&amp;quot;, &amp;quot;#C2CE46&amp;quot;, &amp;quot;#FF7A7F&amp;quot;, &amp;quot;#4D4D4D&amp;quot;)


#----- Read in data -----#
afl &amp;lt;- read.csv(&amp;quot;https://raw.githubusercontent.com/JaseZiv/AFL-Crowd-Analytics/master/data/cleaned_data/afl_model_data.csv&amp;quot;, stringsAsFactors = F)

# Data pre-processing -----------------------------------------------------

# make all variables character type to make splitting and string manipulation easier
afl &amp;lt;- afl %&amp;gt;% 
  mutate_if(is.factor, as.character) %&amp;gt;% 
  mutate(team1_score = as.numeric(team1_score),
         team2_score = as.numeric(team2_score)) %&amp;gt;% 
  mutate(fav_team = ifelse(AwayLineClose &amp;lt; 0, team2, team1))  %&amp;gt;% 
  mutate(winning_team = ifelse(winner == &amp;quot;Home&amp;quot;, team1, ifelse(winner == &amp;quot;Away&amp;quot;, team2, &amp;quot;Draw&amp;quot;))) %&amp;gt;% 
  mutate(fav_win = ifelse(fav_team == winning_team, &amp;quot;Yes&amp;quot;, &amp;quot;No&amp;quot;)) %&amp;gt;% 
  filter(season &amp;gt;= 2014,
         !str_detect(round, &amp;quot;F&amp;quot;)) %&amp;gt;%
  mutate(tip = ifelse(abs(AwayLineClose)  &amp;lt; 3, team1, fav_team))


# function to calculate odds
calculate_odds_available &amp;lt;- function(tip, winning_team, team1, team2, HomeOddsClose, AwayOddsClose) {
  if(tip == winning_team) {
    odds_available &amp;lt;- ifelse(tip == team1, HomeOddsClose, AwayOddsClose)
    } else {
      odds_available &amp;lt;- 0
    }
}

# apply function and calculate returns
afl &amp;lt;- afl %&amp;gt;% 
  mutate(odds_available = mapply(calculate_odds_available, tip, winning_team, team1, team2, HomeOddsClose, AwayOddsClose),
         game_return = odds_available * 10,
         game_profit = game_return - 10)


# create a df that calculates total winnings per round
money_per_round &amp;lt;- afl %&amp;gt;% 
  group_by(season, round) %&amp;gt;% 
  summarise(total_profit = sum(game_profit)) %&amp;gt;% ungroup()

# add a round 0, where all seasons start at $0
zeros &amp;lt;- data.frame(season = (2014:2019), round = 0, total_profit = 0)

# join zeros df on to money_per_round
money_per_round &amp;lt;- money_per_round %&amp;gt;% rbind(zeros)

# create a df that sums up winnings cumulatively
total_money &amp;lt;- money_per_round %&amp;gt;% 
  arrange(season, round) %&amp;gt;% 
  group_by(season) %&amp;gt;% 
  mutate(cumulating_winnings = cumsum(total_profit)) %&amp;gt;% ungroup()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;lets-start&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Let’s start&lt;/h2&gt;
&lt;p&gt;Ok, so the first step I took when writing the original post was to create a ggplot2 visual to plot the winnings (or losses) I would’ve made using my simple strategy.&lt;/p&gt;
&lt;p&gt;This was the result:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;total_money %&amp;gt;%
  ggplot(aes(x= round, y= cumulating_winnings, 
             group = season, colour = as.character(season))) +
  geom_line(size = 1) +
  geom_point(size = 2, colour = &amp;quot;black&amp;quot;) +
  labs(x= &amp;quot;Round&amp;quot;, y= &amp;quot;Cumulative Wins/Losses&amp;quot;, colour = &amp;quot;Season&amp;quot;) +
  scale_x_continuous(limits = c(0, 27), 
                     labels = c(0, 3, 6, 9, 12, 15, 18, 21, 24), 
                     breaks = c(0, 3, 6, 9, 12, 15, 18, 21, 24)) +
  scale_colour_manual(values = colours) +
  ggtitle(&amp;quot;2017 WOULD&amp;#39;VE BEEN A BAD YEAR&amp;quot;) +
  theme(legend.position = &amp;quot;bottom&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/gganimate_animation_guide_files/figure-html/static_line1-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Not bad, but certainly could be improved. To my mind, with six seasons being plotted, the legend is hard to map to the line itself. Also, other than the 2017 season, which was particularly bad, the other seasons’ variation between rounds was hard to see.&lt;/p&gt;
&lt;p&gt;Additionally, plotting the data this way made it hard to realise without expending far too much energy focusing on where I would’ve made money, and where I would’ve lost it.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;labels-and-annotations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Labels and Annotations&lt;/h2&gt;
&lt;p&gt;Yuck - you can’t just simply add the season as a label - you can’t read anything!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;total_money %&amp;gt;%
  ggplot(aes(x= round, y= cumulating_winnings, 
             group = season, colour = as.character(season))) +
  geom_line(size = 1) +
  geom_point(size = 2, colour = &amp;quot;black&amp;quot;) +
  geom_hline(yintercept = 0, linetype = 2, size = 2) + # added in horizontal line at $0
  geom_text(aes(label = season), hjust = -1, size = 6) + # season labels added
  scale_colour_manual(values = colours) +
  labs(x= &amp;quot;Round&amp;quot;, y= &amp;quot;Cumulative Wins/Losses&amp;quot;) +
  scale_x_continuous(limits = c(0, 27), 
                     labels = c(1, 3, 6, 9, 12, 15, 18, 21, 24), 
                     breaks = c(1, 3, 6, 9, 12, 15, 18, 21, 24)) +
  scale_y_continuous(labels = dollar) + # y-axis formatted to dollar format using scales
  annotate(&amp;quot;text&amp;quot;, x= 26, y= 6, label = &amp;quot;Break Even $&amp;quot;, size = 6) + # added text to break even line
  ggtitle(&amp;quot;2017 WOULD&amp;#39;VE BEEN A BAD YEAR&amp;quot;) +
  theme(legend.position = &amp;quot;none&amp;quot;) # turned legend off&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/gganimate_animation_guide_files/figure-html/static_line2-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Instead, only one season label was applied, and applied at the end of each line’s run. This looks much better.&lt;/p&gt;
&lt;p&gt;As we can see, further elements were added to our static chart, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adding the break-even line;&lt;/li&gt;
&lt;li&gt;Formatting the y-axis to a dollar format; and&lt;/li&gt;
&lt;li&gt;Adding labels and removing the legend&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This has greatly improved the readability of the plot.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;total_money %&amp;gt;%
  ggplot(aes(x= round, y= cumulating_winnings, 
             group = season, colour = as.character(season))) +
  geom_line(size = 1) +
  geom_point(size = 2, colour = &amp;quot;black&amp;quot;) +
  geom_hline(yintercept = 0, linetype = 2, size = 2) + # added in horizontal line at $0
  geom_text(data = total_money %&amp;gt;% filter(round == max(round)), aes(label = season), 
            hjust = -0.3, size = 6) + # season labels added, but only one label per season
  scale_colour_manual(values = colours) +
  labs(x= &amp;quot;Round&amp;quot;, y= &amp;quot;Cumulative Wins/Losses&amp;quot;) +
  scale_x_continuous(limits = c(0, 27), 
                     labels = c(1, 3, 6, 9, 12, 15, 18, 21, 24), 
                     breaks = c(1, 3, 6, 9, 12, 15, 18, 21, 24)) +
  scale_y_continuous(labels = dollar) + # y-axis formatted to dollar format using scales
  annotate(&amp;quot;text&amp;quot;, x= 26, y= 6, label = &amp;quot;Break Even $&amp;quot;, size = 6) + # added text to break even line
  ggtitle(&amp;quot;2017 WOULD&amp;#39;VE BEEN A BAD YEAR&amp;quot;) +
  theme(legend.position = &amp;quot;none&amp;quot;) # turned legend off&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/gganimate_animation_guide_files/figure-html/static_line3-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;hello-animations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hello Animations!&lt;/h2&gt;
&lt;p&gt;While the above chart looks a lot better, there are no theatrics!&lt;/p&gt;
&lt;p&gt;Enter animations from gganimate!&lt;/p&gt;
&lt;p&gt;Using an animated plot allows us to remove even more elements. With the right mix of labelling and animation, the y-axis no longer is necessary - with each round, we can follow the winnings or losses as we go, while the break-even line gives us a reference point.&lt;/p&gt;
&lt;p&gt;The other things that were done here include the slowing down of frames using &lt;code&gt;fps&lt;/code&gt; (frames per second) and adjusting the &lt;code&gt;range&lt;/code&gt; in &lt;code&gt;transition_reveal()&lt;/code&gt; to be longer than the rounds it’s transitioning over (ie adjusting the range to &lt;code&gt;c(0,25)&lt;/code&gt;). This allows the animation to pause after it has finished its cycle.&lt;/p&gt;
&lt;p&gt;Finally, to increase the size of the output, adjust the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; arguments to your liking.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;total_money_anim &amp;lt;-  total_money %&amp;gt;%
  ggplot(aes(x= round, y= cumulating_winnings, 
             group = season, colour = as.character(season))) +
  geom_line(size = 2) +
  geom_point(size = 3, colour = &amp;quot;black&amp;quot;) +
  geom_hline(yintercept = 0, linetype = 2, size = 2) +
  geom_text(aes(label = paste0(season, &amp;quot;: &amp;quot;, dollar(cumulating_winnings))), 
            hjust = -0.3, size = 6) +
  scale_colour_manual(values = colours) +
  labs(x= &amp;quot;Round&amp;quot;, y= &amp;quot;Cumulative Wins/Losses&amp;quot;) +
  scale_x_continuous(limits = c(0, 27), 
                     labels = c(1, 3, 6, 9, 12, 15, 18, 21, 24), 
                     breaks = c(1, 3, 6, 9, 12, 15, 18, 21, 24)) +
  scale_y_continuous(labels = dollar) +
  annotate(&amp;quot;text&amp;quot;, x= 26, y= 6, label = &amp;quot;Break Even $&amp;quot;, size = 6) +
  ggtitle(&amp;quot;2017 WOULD&amp;#39;VE BEEN A BAD YEAR&amp;quot;) +
  theme(legend.position = &amp;quot;none&amp;quot;, 
        axis.text.y = element_blank(), 
        axis.title.y = element_blank(), 
        panel.grid.major.y = element_blank(), 
        panel.grid.minor.y = element_blank()) +
  transition_reveal(round, range = c(0, 25))


animate(total_money_anim, width = 900, height = 900, fps = 5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/gganimate_animation_guide_files/figure-html/animation_plot-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;Hope this has given you some inspiration to go out and start producing some animated visualisations of your own.&lt;/p&gt;
&lt;p&gt;Let me know in the comments if you have any questions or suggestions.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Effectively Simplifying AFL Tipping</title>
      <link>/blog/simplifying-afl-tipping/</link>
      <pubDate>Fri, 30 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/blog/simplifying-afl-tipping/</guid>
      <description>


&lt;p&gt;I feel like I always overthink footy tipping. During each round, I make myself believe I have some sort of secret sauce and conjure up visions in my head of nailing a solid roughy… and then fall flat half way through the season and give up…&lt;/p&gt;
&lt;p&gt;So then I thought, surely there’s an easier way. Only problem was, I thought this up last weekend (during the last season of the round)…I wonder how many tips I would’ve gotten this year had I just picked the home team every game…&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/afl_tipping_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ok, so 113 winners wouldn’t have been good enough…&lt;/p&gt;
&lt;hr /&gt;
&lt;div id=&#34;using-the-market&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Using the Market&lt;/h1&gt;
&lt;p&gt;Then I thought, what if I just picked the favourites in the betting market for each game, but with a twist? If the line was less than half a goal (3 points - virtually a coin flip), then I’d just go safe and pick the home team.&lt;/p&gt;
&lt;p&gt;The betting odds data comes from the Australian Sports Betting website which uses Bet365 odds.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/afl_tipping_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Wow!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ok, so I would’ve been able to (theoretically) get my tips up to 135 for the 2019 season - a really handy result, and beating some popular machine learning models that are out there! This 135 correct tips also doesn’t count draws being awarded as a point, as some tipping competitions do (although there were no draws in 2019).&lt;/p&gt;
&lt;p&gt;Other than 2017, this model - I’ll refer to it as &lt;em&gt;“Simple Model”&lt;/em&gt; - would’ve been fairly competitive in each season since 2014.&lt;/p&gt;
&lt;p&gt;Maybe next year, I’ll know what I’ll employ… my &lt;em&gt;Simple Model&lt;/em&gt;!&lt;/p&gt;
&lt;hr /&gt;
&lt;div id=&#34;but-can-we-make-some-money&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;But can we make some money&lt;/h2&gt;
&lt;p&gt;Ok, so now that I know that the &lt;em&gt;Simple Model&lt;/em&gt;’* performs fairly competitively in tipping comps, I want to know if I can make some money using this method?&lt;/p&gt;
&lt;p&gt;To answer this question, I’m placing a theoretic $10 on each game and seeing how many bags of cash are left at the end.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/afl_tipping_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Hmmm… so using this method, I would’ve lost almost $40, even though it was good enough to win some tipping comps.&lt;/p&gt;
&lt;p&gt;Only in 2018 would this method have worked, with a net profit of $26.82…&lt;/p&gt;
&lt;p&gt;The 2017 season would’ve been the most brutal, losing just over $245 for the season.&lt;/p&gt;
&lt;p&gt;To find out where everything went so wrong, we can use an animated line plot that tracks the overall profit throughout each round of the season. To get a rundown on how the animated plot was generated, see this post &lt;a href=&#34;https://www.dontblamethedata.com/blog/all-roads-lead-to-gganimate/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/afl_tipping_files/figure-html/animation_plot-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;During the 2019 season, we can see that things would’ve started off really bleak - after round five, I would’ve been down over $120! Things started to pick up from there though, even being in the black at round 14. At no point during the 2015 and 2017 seasons would this model have been profitable.&lt;/p&gt;
&lt;p&gt;While keeping me competitive in footy tipping comps, this model certainly isn’t going to allow me to retire anytime soon.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How the narrative changed after the Boomers&#39; win</title>
      <link>/blog/how-the-narrative-changed-after-the-boomers-win/</link>
      <pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/blog/how-the-narrative-changed-after-the-boomers-win/</guid>
      <description>


&lt;p&gt;On the 24th of August, 2019, the Australian Men’s Basketball team, the Boomers, created history when they were able to enact their own David and Golliath moment, taking down Team USA for the first time ever. More impressively was the fact that the US hadn’t lost a game in 13 years. It was a marvelous moment in Australian basketball history, and while the US fielded what is widely considered one of their weaker teams, it was a moment for us to all savour. The fact that we were able to bring the best country in the world to play some exhibition games should have been celebrated, regardless of the result.&lt;/p&gt;
&lt;p&gt;That was not to be the case…&lt;/p&gt;
&lt;p&gt;After the historic first men’s basketball game at Marvel Stadium, the narrative from the media appeared to be full of negativity, predominantly focusing on the expensive seating with poor views for fans.&lt;/p&gt;
&lt;p&gt;I suspect that this happens everywhere, but we Aussies seem to let our opinions swing more than most - we’re more than happy to rag on individuals or teams when things aren’t tracking so well, but flip pretty quickly when the are (Nick Kyrgios says hi).&lt;/p&gt;
&lt;p&gt;This analysis will look at the Twitter activity around the time of both games in an attempt to prove or disprove the narrative change.&lt;/p&gt;
&lt;p&gt;To collect tweet data, the &lt;code&gt;rtweet&lt;/code&gt; and &lt;code&gt;ROAuth&lt;/code&gt; packages were used. Tweets between the 22nd August and 2pm on the 25th of August were collected and analysed in the blow analysis. Tweets using the official hashtag - &lt;code&gt;#BoomersUSA&lt;/code&gt; are referencing &lt;code&gt;@BasketballAus&lt;/code&gt; were scraped.&lt;/p&gt;
&lt;p&gt;The full code base and data for this project can be found &lt;a href=&#34;https://github.com/JaseZiv/Boomers-vs-USA-Tweets&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;If the tweet was recorded after &lt;code&gt;2019-08-24 04:00:00 UTC&lt;/code&gt; (tip-off time for game 2), it was classed as a tweet in &lt;code&gt;Game2 Starts&lt;/code&gt;. This allows us to compare tweets leading in to the historic second game with those that occurred during and after the magical night.&lt;/p&gt;
&lt;hr /&gt;
&lt;div id=&#34;tweet-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tweet Analysis&lt;/h2&gt;
&lt;p&gt;Looking at all tweets since game 1, we can see that game 2 had more tweets per hour. No doubt the shock result played a massive part in this.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/blog/boomers_vs_usa_tweets_files/figure-html/tweets_time-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;With 4019 ‘favourites’, the following tweet from NBATV was the most favoured tweet:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It feels awesome. … I hope we can all build on this.”
&lt;span class=&#34;citation&#34;&gt;@Patty_Mills&lt;/span&gt; describes his emotions after leading &lt;span class=&#34;citation&#34;&gt;@BasketballAus&lt;/span&gt; to its first ever win over the U.S.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The most retweeted tweet from the period analysed came from NBL and had 833 retweets. The tweet was:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Patty Mills in the 4th quarter is a piece of art 🔥#BoomersUSA &lt;span class=&#34;citation&#34;&gt;@SBSVICELAND&lt;/span&gt; &lt;span class=&#34;citation&#34;&gt;@SBSOnDemand&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;tweet-words-used&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tweet Words Used&lt;/h2&gt;
&lt;p&gt;Before we can measure the sentiments of tweets, the tweet strings need to be split into ‘tokens’ (or individual words).&lt;/p&gt;
&lt;p&gt;Once these tokens have been unnested (split out), we can plot the most frequently used words. Importantly, stop-words and other words we don’t want in our analysis have been omitted. Stop-words include “and”, “the”, “a”, etc - words that don’t add a lot to a sentiment analysis. Additionally, “BoomersUSA” was removed, as this was the hashtag for the game and was mentioned in almost all tweets.&lt;/p&gt;
&lt;p&gt;The 20 most frequently used words for tweets that occured before and after game 2 are plotted below.&lt;/p&gt;
&lt;p&gt;As expected, “seats”, “plastic”, “seating” were words that frequently appeared in tweets before Game 2, where only “seats” appeared in tweets after Game 2 started. For tweets after game 2 started, “history”, “Patty Mills”, “awesome” and “love” all appeared in tweets frequently - very soft and mushy hey?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/blog/boomers_vs_usa_tweets_files/figure-html/top_tokens-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The plot below allows us to get an even better look at the differences between the words used before and after Game 2. Words to the bottom right of the diagonal line running through the plot indicate words more frequently used in tweets before game two, while words above the line were more frequently used during and after Game 2.&lt;/p&gt;
&lt;p&gt;Looks like we were a happy bunch finally…&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/blog/boomers_vs_usa_tweets_files/figure-html/above_below_words-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tweet-sentiment-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tweet Sentiment Analysis&lt;/h2&gt;
&lt;p&gt;Once the tokens have been separated, a sentiment score can be calculated.&lt;/p&gt;
&lt;p&gt;The method that will be used is the common lexicon for sentiment analysis created by Finn Årup Nielsen (&lt;a href=&#34;http://www2.imm.dtu.dk/pubdb/views/publication_details.php?id=6010&#34; class=&#34;uri&#34;&gt;http://www2.imm.dtu.dk/pubdb/views/publication_details.php?id=6010&lt;/a&gt;), called the &lt;em&gt;AFINN&lt;/em&gt; lexicon. Words that are more positive (say, “awesome” for example) are given positive score further from zero than more negative words (like “devastated”), which are given socres further below zero.&lt;/p&gt;
&lt;p&gt;To get a feel for the power of sentiment analysis, the following tweet was the most positive tweet, with a positivity index of 17:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Totally thrilled with the Boomers win today, and Patty Mills was just brilliant when it counted. Really wonderful team effort. Bring on the World Cup! #BoomersUSA&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At the (complete) opposite end of the spectrum, the following tweet was the most negative, with a score of -18 (sorry for the profanities, I’ve done my best to clean them out):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Who the f!&amp;amp;% hired these people to organise this event, what a f!&amp;amp;%ing bs stich up. $ chairs from Bunnings does that come with a forking snag c!&amp;amp;%. Like WTF surely the company who funding to set up the stadium is not that broke.#BoomersUSA&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;No surprises, the most positive tweet was after we won, the most negative after Game 1.&lt;/p&gt;
&lt;p&gt;Plotting the distribution of sentiment scores for each tweet, we can clearly see that the tweets after game 2 started became considerably more positive - the median positivity score (the ratio of positive to negative words) for these tweets was 0.95, over doube the 0.43 median for tweets prior to game 2.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/blog/boomers_vs_usa_tweets_files/figure-html/sentiment_plot-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As I suspected, we became much happier after our historic win… almost to the point where we’d forgotten about the seating “debacle”, even though the second game was played at the exact venue, with the exact seating arrangement… very strange.&lt;/p&gt;
&lt;p&gt;I might put this theory of us Aussies to the ultimate test one day and see how we respond to Kyrgios’ success… if he ever tastes the ultimate success!&lt;/p&gt;
&lt;p&gt;Feel free to leave some feedback if you like in the comments below.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>An In Depth Analysis of FIFA 19</title>
      <link>/blog/an-in-depth-analysis-of-fifa19/</link>
      <pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/blog/an-in-depth-analysis-of-fifa19/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;&lt;em&gt;This post was originally released on the Kaggle &lt;a href=&#34;https://www.kaggle.com/karangadiya/fifa19&#34;&gt;FIFA 19 Complete Player&lt;/a&gt; dataset that was kindly collected by Karan Gadiya. Many thanks Karan. The link to my original kernel is &lt;a href=&#34;https://www.kaggle.com/jaseziv83/clustering-to-help-club-managers&#34;&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The full code base can be found &lt;a href=&#34;https://github.com/JaseZiv/FIFA19-Analysis&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;From Wikipedia:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FIFA 19 is a football simulation video game developed by EA Vancouver as part of Electronic Arts’ FIFA series. Announced on 6 June 2018 for its E3 2018 press conference, it was released on 28 September 2018 for PlayStation 3, PlayStation 4, Xbox 360, Xbox One, Nintendo Switch, and Microsoft Windows. It is the 26th installment in the FIFA series. As with FIFA 18, Cristiano Ronaldo appears as the cover athlete of the regular edition.
&lt;a href=&#34;https://en.wikipedia.org/wiki/FIFA_19&#34; class=&#34;uri&#34;&gt;https://en.wikipedia.org/wiki/FIFA_19&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The game features a number of different playing modes, however Career mode as a manager holds the most appeal for me.&lt;/p&gt;
&lt;p&gt;The following analysis will be tailored toward having the best chance at success in that mode for anyone interested.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Some things I want to analyse in this paper:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;High level Exploratory Data Analysis&lt;/li&gt;
&lt;li&gt;Which features are highly correlated with a player’s overall rating by player position&lt;/li&gt;
&lt;li&gt;Analyse the differences between a player’s current rating and their potential rating&lt;/li&gt;
&lt;li&gt;Find out which teams have the highest potential&lt;/li&gt;
&lt;li&gt;Find out the youngest teams / oldest teams&lt;/li&gt;
&lt;li&gt;Use k-means clustering to try to find “bargains”; ie if there is someone with the same skills/potential, can they be found for a bargain?&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;feature-engineering&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Feature engineering&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Load libraries
library(tidyverse)
library(scales)
library(ggthemes)
library(kableExtra)
library(plotly)

options(scipen = 999)

fifa_data &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/JaseZiv/FIFA19-Analysis/master/data/data.csv&amp;quot;) %&amp;gt;% select(-X1)

fifa_data &amp;lt;- fifa_data %&amp;gt;%
  mutate(ValueMultiplier = ifelse(str_detect(Value, &amp;quot;K&amp;quot;), 1000, ifelse(str_detect(Value, &amp;quot;M&amp;quot;), 1000000, 1))) %&amp;gt;%
  mutate(ValueNumeric_pounds = as.numeric(str_extract(Value, &amp;quot;[[:digit:]]+\\.*[[:digit:]]*&amp;quot;)) * ValueMultiplier) %&amp;gt;%
  mutate(Position = ifelse(is.na(Position), &amp;quot;Unknown&amp;quot;, Position))


fifa_data &amp;lt;- fifa_data %&amp;gt;%
  mutate(WageMultiplier = ifelse(str_detect(Wage, &amp;quot;K&amp;quot;), 1000, ifelse(str_detect(Wage, &amp;quot;M&amp;quot;), 1000000, 1))) %&amp;gt;%
  mutate(WageNumeric_pounds = as.numeric(str_extract(Wage, &amp;quot;[[:digit:]]+\\.*[[:digit:]]*&amp;quot;)) * WageMultiplier)


positions &amp;lt;- unique(fifa_data$Position)

gk &amp;lt;- &amp;quot;GK&amp;quot;
defs &amp;lt;- positions[str_detect(positions, &amp;quot;B$&amp;quot;)]
mids &amp;lt;- positions[str_detect(positions, &amp;quot;M$&amp;quot;)]
f1 &amp;lt;- positions[str_detect(positions, &amp;quot;F$&amp;quot;)]
f2 &amp;lt;- positions[str_detect(positions, &amp;quot;S$&amp;quot;)]
f3 &amp;lt;- positions[str_detect(positions, &amp;quot;T$&amp;quot;)]
f4 &amp;lt;- positions[str_detect(positions, &amp;quot;W$&amp;quot;)]
fwds &amp;lt;- c(f1, f2, f3, f4)

fifa_data &amp;lt;- fifa_data %&amp;gt;% 
  mutate(PositionGroup = ifelse(Position %in% gk, &amp;quot;GK&amp;quot;, ifelse(Position %in% defs, &amp;quot;DEF&amp;quot;, ifelse(Position %in% mids, &amp;quot;MID&amp;quot;, ifelse(Position %in% fwds, &amp;quot;FWD&amp;quot;, &amp;quot;Unknown&amp;quot;)))))

fifa_data &amp;lt;- fifa_data %&amp;gt;%
  mutate(AgeGroup = ifelse(Age &amp;lt;= 20, &amp;quot;20 and under&amp;quot;, ifelse(Age &amp;gt; 20 &amp;amp; Age &amp;lt;=25, &amp;quot;21 to 25&amp;quot;, ifelse(Age &amp;gt; 25 &amp;amp; Age &amp;lt;= 30, &amp;quot;25 to 30&amp;quot;, ifelse(Age &amp;gt; 30 &amp;amp; Age &amp;lt;= 35, &amp;quot;31 to 35&amp;quot;, &amp;quot;Over 35&amp;quot;)))))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;1. Player Valuation&lt;/strong&gt;
The raw data has player valuations as a character string, with a designation at the end specifying whether the value is thousands or millions. Regex is used to create a numeric variable called &lt;code&gt;ValueNumeric_pounds&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Player Wage&lt;/strong&gt;
See Point 1 above. Same transformation has occurred for player Wage&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Player Positions&lt;/strong&gt;
There are 28 different positions in FIFA2019. To make analysis less granular, I have decided to create four groupings; &lt;em&gt;GK&lt;/em&gt;, &lt;em&gt;DEF&lt;/em&gt;, &lt;em&gt;MID&lt;/em&gt; and &lt;em&gt;FWD&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Player Age&lt;/strong&gt;
I have decided to group players into age buckets, in 5 year increments other than for players 20 years and younger, and players 35 years and over.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;overall-ratings&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Overall Ratings&lt;/h1&gt;
&lt;p&gt;Player ratings are normally distributed in FIFA19, with a mean of 66.2387 and standard deviation of 6.9089&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/ratings-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;age-vs-overall-rating&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Age vs Overall Rating&lt;/h2&gt;
&lt;p&gt;Athletes in all domains have no doubt been looking for the elixir of life since the dawn of time, but to no avail unfortunately. When it comes to a player’s overall rating, it appears as though player ratings are growing on average until around 30 years of age, whereby they level off for a couple of years, and then start the inevitable decline at around 34 years.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/age_v_ratings-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;p&gt;When this relationship is explored by the major position groups, we can see that defender ratings tend to beging their decline earliest at around 33 years of age, while the decline starts somewher closer to 35 for both attackers and midfielders.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/position_v_ratings-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;player-valuations&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Player Valuations&lt;/h1&gt;
&lt;p&gt;Player valuations show a heavily positive skew, being skewed by the superstars of the game - Messi, Neymar, De Bryune, etc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/valuations-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;age-vs-valuations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Age vs Valuations&lt;/h2&gt;
&lt;p&gt;It is intuitive to think that players get better with age and experience and that their valuations would refelect this relationship.&lt;/p&gt;
&lt;p&gt;Plotting the relationship below, it can be seen that as players age, their valuations tend to increase up to their early 30s, and then begin declining in the years of age between 31-35, and then rapidly decline for players older than 35. This is in line with the findings when the overall rating was plotted as a function of the player’s age.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/rating_over_ages-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;position-vs-valuations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Position vs Valuations&lt;/h2&gt;
&lt;p&gt;As expected, Forwards and Midfielders are going to cost you more than Defenders and Goalkeepers.&lt;/p&gt;
&lt;p&gt;Specifically, it’s left and right forwards and left and right attacking-midfielders that are the most expensive positions.
&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/rating_over_positions-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;player-rating-and-valuations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Player Rating and Valuations&lt;/h2&gt;
&lt;p&gt;There a strong positive relationship between the players rating and valuation with a Spearman correlation of 0.9081. The Spearman method was used to calculate the correlation because of presence of large outliers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/ratings_valuations-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;correlations-with-a-players-overall-rating&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Correlations with a players Overall rating&lt;/h2&gt;
&lt;p&gt;The below correlation matrix data displays the correlations between the Overall rating and other key attribute variables for all players except goalkeepers. Both the &lt;em&gt;Pearson&lt;/em&gt; and &lt;em&gt;Spearman&lt;/em&gt; correlation methods were used to display the differences.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Spearman&lt;/em&gt; correlation method is more robust with dealing with extreme outliers, hence the player &lt;code&gt;Value&lt;/code&gt; having the highest spearman correlation (0.92). &lt;code&gt;Reactions&lt;/code&gt;, &lt;code&gt;Composure&lt;/code&gt;, &lt;code&gt;Special&lt;/code&gt; and (surprisingly) &lt;code&gt;Wage&lt;/code&gt; rounding out the top 5 correlated variables with Overall rating using the Spearman method. I say surprisingly because Soccernomics (Kuper.S, Szymanski.S, 2014) stated the best predictor of team success was the teams wage bill.&lt;/p&gt;
&lt;p&gt;Using the &lt;em&gt;Pearson&lt;/em&gt; method, we get different results. the top 5 correlated variables with the Overall rating is &lt;code&gt;Reactions&lt;/code&gt;, &lt;code&gt;Composure&lt;/code&gt;, &lt;code&gt;Special&lt;/code&gt;, &lt;code&gt;ShortPassing&lt;/code&gt; and &lt;code&gt;BallControl&lt;/code&gt;. Both value and wage don’t appear ni this list because they are prone to large outliers.&lt;/p&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Feature
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Spearman
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Pearson
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
ValueNumeric_pounds
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9160253
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6346473
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Reactions
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8430347
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8477221
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Composure
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7928322
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8017716
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Special
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7808008
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7959002
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
WageNumeric_pounds
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7786888
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5755838
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
BallControl
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7327561
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7178017
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
ShortPassing
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7209597
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7226152
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Potential
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6148446
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6506847
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
ShotPower
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5928283
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5629406
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
LongPassing
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5878514
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5853744
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;which-positions-are-skilled-in-which-attributes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Which positions are skilled in which attributes&lt;/h2&gt;
&lt;p&gt;The heat map below displays the median attributes for each position available. The analysis was done on players other than goalkeepers, and also only on players with an overall rating of 75 or higher.&lt;/p&gt;
&lt;p&gt;It shows that centre backs are high on strength and are typically strong in agression. Right and Left Wingers and Left Forwards are very agile, while Left and Right Midfielders have great acceleration.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/correlations-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;helping-me-manage-a-team&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Helping me manage a team&lt;/h1&gt;
&lt;p&gt;The next section will be devoted to analysis that will assist those wanting to magae a team. I will analyse which players to target if you want to manage a team in rebuilding mode, players to target with a low budget if managing lower division teams or lower-budget teams, which teams to manage if tyou want an attacking team, or a defensive team.&lt;/p&gt;
&lt;div id=&#34;young-player-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Young Player Analysis&lt;/h2&gt;
&lt;p&gt;If you are wanting to be a manager that gives youngsters a chance and watch them blossom, then the list of below players might be ones to target.&lt;/p&gt;
&lt;p&gt;The violet bars indicate the difference between the player’s potential and their current overally rating. &lt;em&gt;J. von Moos&lt;/em&gt;, a striker (17 years old and costs €280K) and &lt;em&gt;D. Campbell&lt;/em&gt;, a central midfielder (also 17 years old and only costs €60K) are the two players with the highest room to grow, with both players having a differential of 26. &lt;em&gt;R. Griffiths&lt;/em&gt;, also a striker, but 18 years old, has a potential of 84, however will cost you €575K. I know who I’d be choosing between Griffiths and the previously mentioned J. von Moos who also has an overall rating of 84.&lt;/p&gt;
&lt;p&gt;If it’s a real bargain you’re looking for, the 16 year old central midfielder &lt;em&gt;B. Mumba&lt;/em&gt; will only cost you €190K, but has a potential rating of 80… Juicy!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/young_players-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;when-does-potential-end&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;When does potential end?&lt;/h2&gt;
&lt;p&gt;This now raises an interesting topic… is there an age that players finally realise all of their potential, or is there room to grow throughout their careers?&lt;/p&gt;
&lt;p&gt;It appears as though a player’s potential and their overall rating converge at approximately 30 years of age.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/potential_age-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;free-valuation-players&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Free Valuation Players&lt;/h1&gt;
&lt;p&gt;Are there some real bargains to be had? It would appear that there is! Below plots all players that have a free valuation, and displays a player’s age against their current overall rating.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;L. Paredes!!!!!&lt;/strong&gt;
Depending on what you’re looking for, either of the top-left or top-right quadrants are where the players to target are. The best player to target is &lt;em&gt;L. Paredes&lt;/em&gt;, a fairly young CM at 24 with an overall rating of 80 (and even better still a potential of 85).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;P. Mahlambi&lt;/em&gt;, a South African CAM 20 year old with a potential of 84 is another big target, as is the 18 year old RCB &lt;em&gt;B. Méndez&lt;/em&gt; and 19 year old CAM &lt;em&gt;I. Hagi&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/freebies-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;which-team-do-i-want-to-manage&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Which Team do I want to manage&lt;/h1&gt;
&lt;p&gt;This section is designed to help future managers decide what team to manage, based on various factors.&lt;/p&gt;
&lt;p&gt;I will include an analysis on the youngest and oldest teams, the most talented teams, the great attacking teams, most expensive teams and teams with the highest player valuations.&lt;/p&gt;
&lt;div id=&#34;team-age&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Team Age&lt;/h2&gt;
&lt;p&gt;If you’re the type of manager who likes to take charge of younger teams, then teams in some of the European teams might be for you. FC Nordsjælland (Danish) is the youngest team on average in FIFA19, with an average age of 20.3 years old, followed by FC Groningen (Dutch) at 21.4 years old and Bohemian FC (Ireland) at 21.5 years old. Interestingly, Dutch powerhouses PSV and Ajax both make the list of the 20 youngest teams. They’re certainly the type of teams I’d be looking towards.&lt;/p&gt;
&lt;p&gt;At the other end of the spectrum, if managing older teams is your thing, then South America is the place for you.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/oldest_youngest-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;team-overall-talent&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Team Overall Talent&lt;/h2&gt;
&lt;p&gt;If you’re trying to pick the most talented team, how you choose to interpret “talent” can have an impact on which team you finally settle for.&lt;/p&gt;
&lt;p&gt;When looking at the average overall ratings for each team, four of the five highest average rated teams come from Serie A (Juventus, Napoli, Inter and Milan), with Real Madrid the only non-Italian side in the top 5. FC Barcelona, PSG, Roma, Man Utd and surprisingly SL Benfica rounding out the top 10.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/team_talent-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now if you wish to define “talent” as the most number of superstars, then your selection will be slightly different.&lt;/p&gt;
&lt;p&gt;I have chosen to define superstars as those players whose rating is 85 or above. There are 110 110 players in the game with this designation.&lt;/p&gt;
&lt;p&gt;Looking at the top three from the previous plot, we can see that it’s a much different story. Juventus - the highest average overall rated team only have the third most amount of superstars, replaced at the top by Real Madrid and Manchester City. The story is even more pronounced for Napoli, who went from second in the previous measurement to 11th here, with Inter also dropping form 3rd to 8th.&lt;/p&gt;
&lt;p&gt;The Galacticos of Real Madrid proudly sit atop this perch with 12 players on the list having an overall rating of 85 or over.&lt;/p&gt;
&lt;p&gt;Interestingly, only the the top leagues are represented in the list of clubs with more than one superstar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/elite_talent-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;deadly-teams-up-front&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Deadly Teams Up Front&lt;/h2&gt;
&lt;p&gt;How does one determine the most attacking teams? The method used in this analysis takes an average rating of the four main attributes related to goals - &lt;code&gt;Finishing&lt;/code&gt;, &lt;code&gt;LongShots&lt;/code&gt;, &lt;code&gt;Penalties&lt;/code&gt;, &lt;code&gt;ShotPower&lt;/code&gt; and &lt;code&gt;Positioning&lt;/code&gt;. The attributes are added together and an average rating is calculated. To determine the teams with the highest attacking rating, only midfielders and attackers are considered.&lt;/p&gt;
&lt;p&gt;The average rating of the most dangerous teams in front of goals are displayed below. Inter (12 midfielders and attackers) and Juventus (13 midfielders and attackers) are the most dangerous teams in front of goal, clearly ahead of the third most dangerous club, Napoli (13 midfielders and attackers). Interestingly, there are a few leagues are represented in the 20 most dangerous teams up front - Portugese, Turkish, Greek, in addition to the usual suspects in England, Italy, Germany, Spain, France.&lt;/p&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Club
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
NumberOfAttackers
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
TeamAttackingRating
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Inter
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
74.43333
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Juventus
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
74.03077
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Napoli
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
71.72308
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Manchester United
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
71.50526
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sporting CP
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
71.15294
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FC Porto
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
71.05000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FC Barcelona
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
71.03333
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Real Madrid
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
71.01176
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SL Benfica
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
70.87500
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FC Bayern München
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
70.82353
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SC Braga
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
70.78667
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Roma
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
70.60000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Manchester City
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
70.37500
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Milan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
70.27143
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Olympique de Marseille
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
70.13333
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FC Schalke 04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
69.12500
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Valencia CF
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
69.01176
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Beşiktaş JK
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
68.75714
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Paris Saint-Germain
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
68.51765
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SV Werder Bremen
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
68.45882
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;team-wage-bills-and-value-for-money&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Team Wage Bills and Value for Money&lt;/h2&gt;
&lt;p&gt;Real Madrid and Barcelona blow the other teams away when it comes to wage bills, with weekly wage bills sitting at just over €5M and €4.83M respectively. Man City is a distant third with a weekly wage bill of €3.7M.&lt;/p&gt;
&lt;p&gt;Surprisingly, Inter Milan, one of the most highly rated teams in terms of overall talent (see above) comes in at number 16 on the list - talk about value for money! Even more strangely, Premier League sides Everton and West Ham have higher wage bills than Inter! What’s worse for those two EPL clubs, Milan, Napoli and Inter were three of the top five overall rated clubs in the game. As a result, these three clubs have had great value for money, with each overall rating point only costing Inter €20K, as opposed to Everton’s €27K per overall rating. Of course this is dwarfed by the two Spaniards, who both spend over €60K per point.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/spenders-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;p&gt;At the other end of the spectrum, there are some clubs that are exceptionally efficient with their wage bills. Highlighted clubs are those that have an average overall rating over 70. Spartak Moscow are the leaders, with each rating point only costing €369 - what a difference from Real Madrid!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/shrewd-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;k-means-clustering&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;K-Means Clustering&lt;/h1&gt;
&lt;p&gt;Trying to find players who are similar can be a very difficult task. There are close to 100 variables that you might need to analyse to determine “similarity” between players. Couple that with comparing multiple players and it’s almost imposible.&lt;/p&gt;
&lt;p&gt;Enter K-Means!&lt;/p&gt;
&lt;p&gt;K-means clustering aims to partition n observations into k clusters in which each observation belongs to the cluster with the nearest mean, serving as a prototype of the cluster. This results in a partitioning of the data space into Voronoi cells &lt;a href=&#34;https://en.wikipedia.org/wiki/K-means_clustering&#34; class=&#34;uri&#34;&gt;https://en.wikipedia.org/wiki/K-means_clustering&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The steps used are outlined below:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Filter out Goalkeepers and any players without a position listed&lt;/li&gt;
&lt;li&gt;Select only numeric variables, mainly the attribute variables. Player value, wages and overall rating have been omitted from the data so that these variables don’t sway our groupings, allowing for the clusters to contain like-for-like players based off their skillsets.&lt;/li&gt;
&lt;li&gt;Scale the data - without scaling, some variables, especially &lt;code&gt;Special&lt;/code&gt; will skew the clusters to than variable.&lt;/li&gt;
&lt;li&gt;Run K-Means using, looping through a number of cluster centres to find the optimal number (k). This can be done visually, where the elbow of the plot “bends”.&lt;/li&gt;
&lt;li&gt;Set the number of centres (8 in this example)&lt;/li&gt;
&lt;li&gt;Re-run the model with K = 8&lt;/li&gt;
&lt;li&gt;Assign the cluster group back to the main data&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Get data ready
data_cluster &amp;lt;- fifa_data %&amp;gt;%
  filter(PositionGroup != &amp;quot;Unknown&amp;quot;) %&amp;gt;%
  filter(PositionGroup != &amp;quot;GK&amp;quot;) %&amp;gt;%
  mutate(RoomToGrow = Potential - Overall) %&amp;gt;%
  select_if(is.numeric) %&amp;gt;%
  select(-ID, -`Jersey Number`, -AttackingRating, -starts_with(&amp;quot;Value&amp;quot;), - starts_with(&amp;quot;Wage&amp;quot;), -starts_with(&amp;quot;GK&amp;quot;), -Overall)


scaled_data &amp;lt;- scale(data_cluster)

set.seed(109)
# Initialize total within sum of squares error: wss
wss &amp;lt;- 0
# For 1 to 30 cluster centers
for (j in 1:30) {
  km.out &amp;lt;- kmeans(scaled_data, centers = j, nstart = 20)
  # Save total within sum of squares to wss variable
  wss[j] &amp;lt;- km.out$tot.withinss
}


# create a DF to use in a ggplot visualisation
wss_df &amp;lt;- data.frame(num_cluster = 1:30, wgss = wss)

# plot to determine optimal k
ggplot(data = wss_df, aes(x=num_cluster, y= wgss)) + 
  geom_line(color = &amp;quot;lightgrey&amp;quot;, size = 2) + 
  geom_point(color = &amp;quot;green&amp;quot;, size = 4) +
  theme_fivethirtyeight() +
  geom_curve(x=14, xend=8, y=300000, yend= 290500, arrow = arrow(length = unit(0.2,&amp;quot;cm&amp;quot;)), size =1, colour = &amp;quot;purple&amp;quot;) +
  geom_text(label = &amp;quot;k = 8\noptimal level&amp;quot;, x=14, y= 290000, colour = &amp;quot;purple&amp;quot;) +
  labs(title = &amp;quot;Using Eight Clusters To Group Players&amp;quot;, subtitle = &amp;quot;Selecting the point where the elbow &amp;#39;bends&amp;#39;, or where the slope of \nthe Within groups sum of squares levels out&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/cluster_elbow-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Set k equal to the number of clusters corresponding to the elbow location
k &amp;lt;- 8

# Create a k-means model on wisc.data: wisc.km
wisc.km &amp;lt;- kmeans(scale(data_cluster), centers = k, nstart = 20)

# add the cluster group back to the original DF for all players other than GK and Unknown
cluster_data &amp;lt;- fifa_data %&amp;gt;%
  filter(PositionGroup != &amp;quot;Unknown&amp;quot;) %&amp;gt;%
  filter(PositionGroup != &amp;quot;GK&amp;quot;) %&amp;gt;%
  mutate(Cluster = wisc.km$cluster)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;K-means has split the data into the following 8 clusters as outlined below.&lt;/p&gt;
&lt;p&gt;It appears that clusters 4 and 8 are representing the more defensive-midfielder types (made up mainly of DEFs and MIDs). Cluster 7 looks to be grouping very attacking minded midfielders midfielders (mande up mainly of MIDs and FWDs).&lt;/p&gt;
&lt;p&gt;Cluster 2 is grouping Midfielders, Cluster 5 is for Forwards, while clusters 1 and 3 are for the Defenders.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##    
##      DEF  FWD  MID
##   1 1137   43 1802
##   2 1498   39 1282
##   3 1443    7  136
##   4   16  742 1668
##   5   20  989 1001
##   6  143  269  614
##   7 1608    3  185
##   8    1 1326  150&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Plotting the 20 highest rated players in each cluster shows us which players are similar in terms of their skill sets.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/fifa19_analysis_files/figure-html/cluster_plot-1.png&#34; width=&#34;1440&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I am going to build a shiny app based off this clustering analysis to enable users to input a player they wish to find a similar replacement for, and the resulting output displaying a list of players and their attributes who are most similar.&lt;/p&gt;
&lt;p&gt;For example, selecting I. Perišić from Inter as someone to replicate, the below results will appear.&lt;/p&gt;
&lt;p&gt;The function will take three inputs, the player name how many players you want returned, and what how close to the player’s value do you want to see results for (ie if you want all players within 10% of the player’s value, use 0.1).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;return_similar_players &amp;lt;- function(player, num_results, return_within_fraction) {
  
  cluster_filter &amp;lt;- cluster_analysis$Cluster[cluster_analysis$Name == player]
  player_value &amp;lt;- cluster_analysis$ValueNumeric_pounds[cluster_analysis$Name == player]
  
  cluster_analysis %&amp;gt;%
    filter(Cluster == cluster_filter,
           ValueNumeric_pounds &amp;gt;= (player_value * (1- return_within_fraction)) &amp;amp; ValueNumeric_pounds &amp;lt;= (player_value * (1 + return_within_fraction))) %&amp;gt;%
    head(num_results)

}


return_similar_players(&amp;quot;I. Perišić&amp;quot;, 100, .05) %&amp;gt;% 
  kable(format = &amp;quot;html&amp;quot;, escape = F) %&amp;gt;%
  kable_styling(&amp;quot;striped&amp;quot;, full_width = F)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
ID
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Name
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Club
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Age
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
PositionGroup
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Overall
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Cluster
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
ValueNumeric_pounds
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
189332
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Jordi Alba
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FC Barcelona
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
DEF
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
87
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
38000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
191043
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Alex Sandro
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Juventus
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
27
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
DEF
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
86
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
36500000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
184087
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
T. Alderweireld
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tottenham Hotspur
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
DEF
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
86
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
197445
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
D. Alaba
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FC Bayern München
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
DEF
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
85
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
38000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
189513
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Parejo
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Valencia CF
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MID
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
85
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
37000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
187961
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Paulinho
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Guangzhou Evergrande Taobao FC
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MID
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
85
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
37000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
184941
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
A. Sánchez
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Manchester United
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FWD
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
85
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
37500000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
184267
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Y. Brahimi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FC Porto
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
28
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MID
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
85
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
181458
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
I. Perišić
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Inter
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MID
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
85
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
37500000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
179844
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Diego Costa
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Atlético Madrid
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FWD
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
85
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
38500000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
165153
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
K. Benzema
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Real Madrid
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FWD
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
85
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
37000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
205498
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Jorginho
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Chelsea
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MID
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
84
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
38000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
204970
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
F. Thauvin
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Olympique de Marseille
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
25
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MID
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
84
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
200104
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
H. Son
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tottenham Hotspur
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
25
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MID
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
84
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
37000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
212523
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Anderson Talisca
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Guangzhou Evergrande Taobao FC
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
24
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MID
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
83
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
36500000
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This code will be able to be re-used on FIFA 20 data when it comes out - feel free to use this as a basis for any further analysis!&lt;/p&gt;
&lt;p&gt;Would love your thoughts on the analysis.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A tribute to Jarryd Roughead with some obscure data</title>
      <link>/blog/a-tribute-to-jarryd-roughead-using-data-analysis/</link>
      <pubDate>Wed, 14 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/blog/a-tribute-to-jarryd-roughead-using-data-analysis/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Jarryd Roughead - four-time Hawthorn premiership player and all round great man - formally announced his retirement this week, with his last game coming over the weekend against the Gold Coast Suns.&lt;/p&gt;
&lt;p&gt;Not only was he a pivotal four-time premiership star for the Hawthorn Hawks, he survived a hell of a lot of adversity with some very serious cancer scares and handled himself with nothing but grace and dignity. He came back to captain his club in 2017 and while the on-field element was tough to come back to, he was lumped with the burden of captaining the club after they parted ways with stalwarts Sam Mitchell and Jordan Lewis after the 2016 season.&lt;/p&gt;
&lt;p&gt;He filled key posts down back during the early part of his career, then moved up forward where he played a very, very good second option, then also carved out a valuable ruck/midfielder role for the club a bit later on. He could play everywhere.&lt;/p&gt;
&lt;p&gt;I loved him as a footballer, but the man he seems to be makes me envious I don’t know him personally. I wanted to take an in depth (but different) look at the career he had with the mighty Hawks using some frequently used data visualisations.&lt;/p&gt;
&lt;p&gt;A lot of the articles written about this great man will focus on the more well known numbers of his career… the 282 (to be 283 after his last game), the 572 goals, the four flags, Coleman Medal in 2013 and All Australian selections in 2013-14. Rightfully so too.&lt;/p&gt;
&lt;p&gt;This post however is going to look at some of the more obscure aspects of Roughy’s playing time so we have a full view of his time in the game.&lt;/p&gt;
&lt;p&gt;The data for this post originally comes from AFL Tables, but through Jimmy Day’s amazing &lt;a href=&#34;https://github.com/jimmyday12/fitzRoy&#34;&gt;fitzRoy&lt;/a&gt; R package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(fitzRoy)
library(stringr)
library(tidyverse)
library(lubridate)

theme_set(theme_minimal())

stats_players &amp;lt;- get_afltables_stats(start_date = &amp;quot;2000-01-01&amp;quot;, end_date = &amp;quot;2019-10-01&amp;quot;)

rough &amp;lt;- stats_players %&amp;gt;% 
  filter(str_detect(First.name, &amp;quot;Jarryd&amp;quot;),
         str_detect(Surname, &amp;quot;Roughead&amp;quot;))


rough &amp;lt;- rough %&amp;gt;% 
  mutate(final = ifelse(str_detect(Round, &amp;quot;F&amp;quot;), &amp;quot;Y&amp;quot;, &amp;quot;N&amp;quot;),
         Opponent = ifelse(Home.team == Playing.for, Away.team, Home.team))


rough &amp;lt;- rough %&amp;gt;% 
  mutate(Date = ymd(Date),
         Weekday = wday(Date, label = T),
         StartingHour = substr(Local.start.time, 1,2 ),
         TimePeriod = ifelse(as.numeric(StartingHour) &amp;lt; 17, &amp;quot;Afternoon&amp;quot;, &amp;quot;Evening&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;when-were-roughys-games-played&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;When were Roughy’s games played?&lt;/h1&gt;
&lt;p&gt;Of Roughy’s 282 games, not one of them was played on a Wednesday - understandable given the Hawks don’t have any ANZAC Day games and no other holiday falls on a Wednesday. Every other day of the week he played. Saturdays are where he played most of his games, with 47% of his games played then.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/tribute_to_roughy_files/figure-html/weekdays-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The most frequent starting time of games Roughy played was in the 20th hour of the day (start time between 7pm and 8pm), followed by games starting between 2pm to 3pm.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/tribute_to_roughy_files/figure-html/startTime-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;where-were-roughs-games-played&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Where were Rough’s games played?&lt;/h1&gt;
&lt;p&gt;No surprises to see that Roughy played most of his games at either the ’G or in Tasmania.&lt;/p&gt;
&lt;p&gt;Interestingly, the only interstate finals Rough ever played in were at Subiaco (in Western Australia), where he played three (two of those came in the same finals series - the 2015 season, where the Hawks won their third premiership in a row).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/tribute_to_roughy_files/figure-html/venues-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;what-conditions-did-the-great-man-play-in&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;What conditions did the great man play in?&lt;/h1&gt;
&lt;p&gt;For this section, I will use the weather data from my series on AFL crowds and the data and code for collecting the data can be found &lt;a href=&#34;https://github.com/JaseZiv/AFL-Crowd-Analytics&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# read in data
rain_data &amp;lt;- read.csv(&amp;quot;https://raw.githubusercontent.com/JaseZiv/AFL-Crowd-Analytics/master/data/cleaned_data/afl_preprocessed.csv&amp;quot;, stringsAsFactors = F)

# select just the required variables, first creating a key to join back to the &amp;#39;rough&amp;#39; df
rain_data &amp;lt;- rain_data %&amp;gt;% 
  select(team1, team2, date, rainfall_clean, min_temp, max_temp) %&amp;gt;% 
  mutate(gameId = paste(team1, team2, date, sep = &amp;quot;-&amp;quot;)) %&amp;gt;% 
  select(-team1, -team2, -date)

# join data back
rough &amp;lt;- rough %&amp;gt;% 
  mutate(gameId = paste(Home.team, Away.team, Date, sep = &amp;quot;-&amp;quot;)) %&amp;gt;% 
  left_join(rain_data, by = &amp;quot;gameId&amp;quot;) %&amp;gt;% 
  select(-gameId)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The wettest game Roughy played in was a 2012 loss against Richmond at the MCG, where 28ml fell in 24 hours. In a dirty day for the Hawks, Roughy had an ok game, kicking 2 goals 1 behind and took 6 marks.&lt;/p&gt;
&lt;p&gt;The coldest game he played in (the snow game last week in Canberra would’ve won had he played) was in Tasmania - no surprises - against the Lions in that horrible premiership hangover year in 2009. The maximum temperature was a crisp 10.8 degrees and there was even 5.2ml of rain. Roughy had a game to forget, with 7 kicks and only 1 goal. A stinker for the whole club.&lt;/p&gt;
&lt;p&gt;On the flip side, the round three matchup in Rough’s first season against Essendon was the hottest game he played in… again the Hawks lost this one in a tight two-point loss. Rough managed to kick two goals.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;what-about-chas-brownlow&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;What about Chas Brownlow?&lt;/h1&gt;
&lt;p&gt;Not known for his prolific Brownlow vote getting, the big Rough received 59 votes in total, at an average of 0.225 votes per game.&lt;/p&gt;
&lt;p&gt;Roughy’s All Australian years in 2013 and 2014 saw his average votes per games peak; he received 0.59 and 0.55 votes per game respectively. Five of his 14 seasons saw zero votes awarded.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/tribute_to_roughy_files/figure-html/votes-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;who-umpired-the-big-man&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Who umpired the big man?&lt;/h1&gt;
&lt;p&gt;Roughy has seen 99 umpires during his time in the game.&lt;/p&gt;
&lt;p&gt;Brett Rosebury officiated 41 of Roughy’s games, with Matt Nicholls and Matt Stevic following closely behind with 37 times each. Twelve umpires officiated Roughy’s games on at least 20 occasions&lt;/p&gt;
&lt;p&gt;Of the 41 games Rosebury officiated, 13 were in finals - by far the most finals games with Roughy than any umpire. Of the umpires with at least 20 games, only Stephen McBurney hasn’t umpired Rough in a final, while Troy Pannell has umpired him once.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/tribute_to_roughy_files/figure-html/umpires-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;were-some-kinder-to-rough&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Were some kinder to Rough?&lt;/h2&gt;
&lt;p&gt;We can answer this question looking at Brownlow votes and Free Kick counts… The analysis will limit itself to those 12 umpires who have officiated his games at least 20 times.&lt;/p&gt;
&lt;p&gt;I always knew I disliked Razor Ray… now I know why. He and Michael Vozzo were the only umpires on this list to fail to award a Brownlow vote to the big man. Shaun Ryan awarded them at a rate of just over half a vote for the 23 games he officiated Roughy’s games.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/tribute_to_roughy_files/figure-html/umpVotes-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Not only did Shaun Ryan award Brownlow votes at a higher rate than any of his brethren on this list, he also didn’t discriminate between how many frees were awarded for and against the big man, though he did award 1.05 frees against, the fifth highest amount on average.&lt;/p&gt;
&lt;p&gt;Michael Vozzo had the largest discrepancy between the number of frees, awarding less than 0.5 frees for Roughy (0.478), while penalising the big Rough at a rate of 1.09 per game.&lt;/p&gt;
&lt;p&gt;At 1.1 frees against per game, the pest Razor and Shane McInerney penalised Rough the most, while Simon Meredith (0.75) penalised him the least (0.84).&lt;/p&gt;
&lt;p&gt;Troy Pannell awarded Roughy the most frees on average (1.29).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/tribute_to_roughy_files/figure-html/frees-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;finally-bouncing&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Finally, Bouncing&lt;/h1&gt;
&lt;p&gt;Not only was Roughy a superstar footballer, he was a gun junior basketballer.&lt;/p&gt;
&lt;p&gt;Bouncing is an important piece of the basketball puzzle… I wonder if Rough bounced the ball much?&lt;/p&gt;
&lt;p&gt;The average number of bounces per player per game is 0.529. Throughout Roughy’s career, he bounced the ball at a rate of 0.12 per game… a fair bit off the average…&lt;/p&gt;
&lt;p&gt;His rookie season was his best bouncing season at a rate of 0.562 bounces per game.. Clarko must have ironed that out of his game and must have been thrilled in 2009 (other than the premiership hangover) when Roughy didn’t bounce the ball once.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/tribute_to_roughy_files/figure-html/bouncing-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Well that’s all for this tribute to the great Jarryd Roughead.&lt;/p&gt;
&lt;p&gt;Looking forward to watching his last game, and then seeing him around the media hopefully.&lt;/p&gt;
&lt;p&gt;We love ya Rough!&lt;/p&gt;
&lt;p&gt;As always, feel free to get in touch if there’s any feedback &lt;a href=&#34;https://www.linkedin.com/in/jason-zivkovic-4a0a1926/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Building a Linear Regression Model in R to Predict AFL Crowds</title>
      <link>/blog/building-a-linear-regression-model-in-r-to-predict-afl-crowds/</link>
      <pubDate>Sat, 27 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/blog/building-a-linear-regression-model-in-r-to-predict-afl-crowds/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;There is a lot of talk about crowd behaviour and crowd issues with the modern day AFL. I personally feel the crowd issues are a case of &lt;em&gt;business-as-usual&lt;/em&gt;; I’ve been going to AFL games on-and-off for close to three decades and the crowd behaviour is no different today as it was 20 years ago… just now everyone with a phone and Twitter account is a journo.&lt;/p&gt;
&lt;p&gt;Anyway, that’s my two cents worth. This analysis is not on crowd behaviour. This post is primarily concerned with building a model to predict AFL crowds during the season proper. While data was collected since the beginning of the 2000 season, the model will be bult on training data from the beginning of the 2013 season to the end of the 2018 season (Finals series excluded), with the trained model then used to predict the attendance figures of AFL games during the 2019 season up until round 18 which concluded on Sunday 21st July, 2019. The linear model will be built using R (version 3.5.3) in &lt;a href=&#34;http://www.rstudio.com/&#34;&gt;RStudio&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This post is a follow up to my introductory analysis done on bandwagon fans. It can be found &lt;a href=&#34;https://medium.com/@jaseziv83/using-data-to-determine-which-afl-fans-jump-on-the-bandwagon-8adbcc4160b0?sk=b4c0788b1f54aca1cfd50e2766eadd5c&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The article was inspired by the amazing work Tony Corke does, specifically his post on &lt;a href=&#34;http://www.matterofstats.com/mafl-stats-journal/2016/3/16/the-predic&#34;&gt;The Predictability of AFL Crowds&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All code for this project can be found on GitHub &lt;a href=&#34;https://github.com/JaseZiv/AFL-Crowd-Analytics&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Data&lt;/h2&gt;
&lt;p&gt;Three sources of data were used in the project:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://afltables.com&#34;&gt;AFL Tables&lt;/a&gt; was used as the primary source of information. This is no doubt the go to for anyone looking at doing AFL analysis&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aussportsbetting.com&#34;&gt;Australian Sports Betting&lt;/a&gt; was used to get betting data for matches from the 2013 season&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.bom.gov.au/climate/data/&#34;&gt;Australian Bureau of Meteorology&lt;/a&gt; was used for climat data (rain and temperature). Part of the scraper for BOM data was taken from James Day’s &lt;a href=&#34;https://github.com/jimmyday12/fitzRoy&#34;&gt;fitzRoy&lt;/a&gt; R package. Big thanks to him. The rain and temperature data had some missing observations. Missing rain data was filled by averaging out the next taken reading over the missed data points before it. Missing temperature was filled taking the average temperature for that month.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;feature-engineering&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Feature Engineering&lt;/h1&gt;
&lt;p&gt;The data contained at AFL Tables is a rich source of information, but some steps were needed to glean some additional information from the data.&lt;/p&gt;
&lt;p&gt;The original three data sources combined contained approximately 35 variables for potential use. Feature engineering (the process of creating additional explanatory variables to use in a predictive model) was then conducted and resulted in ~95 features in total to see if they would ultimately be added to the final model to be used.&lt;/p&gt;
&lt;div id=&#34;features-created&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Features Created&lt;/h2&gt;
&lt;p&gt;Based on some feedback from the Banwagon article and other things that I wanted to explore, some new features were created to see if they had any predictive power.&lt;/p&gt;
&lt;p&gt;Take the game start time as an example - having the time is great, but a regression model may find it better to categorise the time to a period of the day to reduce some of the noise. So, with that in mind, a feature (&lt;code&gt;time_period&lt;/code&gt;) was created - if the game started by 5pm, I have classified it as an afternoon game. Games started between 5pm-7pm were classified as evening games, while games later than this were night games.&lt;/p&gt;
&lt;p&gt;Additionally, the day of the week and the &lt;code&gt;time_period&lt;/code&gt; were joined into one variable &lt;code&gt;game_time&lt;/code&gt; to use in the model. For example, if it was a Saturday game starting at 5:30pm, it was classified as “Sat-Evening”.&lt;/p&gt;
&lt;p&gt;Venues that were used infrequently, or more accurately, weren’t the teams primary “home” stadium were labelled as “Other”. There were 94 games played at these venues, and this includes at stadiums like &lt;em&gt;Eureka Stadium&lt;/em&gt;, &lt;em&gt;Cazaly’s Stadium&lt;/em&gt;, &lt;em&gt;Traeger Park&lt;/em&gt;, and international venues &lt;em&gt;Wellington&lt;/em&gt; in NZ and &lt;em&gt;Jiangwan Stadium&lt;/em&gt; in China.&lt;/p&gt;
&lt;p&gt;Another feature was created to determine rivalry games - the thinking being that when two fierce rivals face off against each other, the crowds will come. To be a rivalry game, a few different options existed. The first contains the four oldest traditional rivals, all from Melbourne - Collingwood, Richmond, Essendon and Carlton (hold your Carlton opinions, I know they’ve been horrible but their fans still turn up to these rivalry games). The Derby in SA (&lt;em&gt;The Showdown&lt;/em&gt; between Adelaide and Port Adelaide) and in WA (&lt;em&gt;Western Derby&lt;/em&gt; between West Coast and Fremantle) are also classed as rivalry games.&lt;/p&gt;
&lt;p&gt;After hearing a key AFL staffer talk a few years back talk about betting markets being a strong predictor of attendances, I collected betting data to test this assumption. A number of features were created in addition to the raw odds and line data scraped. These included calculating the differences between the odds of the home and away team and also calculating the change in betting throughout the week.&lt;/p&gt;
&lt;p&gt;Features were also created of the average experience of both the home and away teams, as were milestone games (where players of either team are playing in their 100, 200, 250 or 300th games).&lt;/p&gt;
&lt;p&gt;Each team’s last game result was calculated, as was the number of wins each team had in their previous three games. Additionally, whether the team played finals the previous season was identified.&lt;/p&gt;
&lt;p&gt;A ladder at each round was created and ladder position, percentage and score for and against was explored as possible features for the end model.&lt;/p&gt;
&lt;p&gt;A feature was also created to identify games played by teams from the same state or not.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exploratory-data-analysis&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Exploratory Data Analysis&lt;/h1&gt;
&lt;p&gt;Before we start building the model, we need to understand both the response and predictor variables. The most effective way to do this is through visualisations, and what package is better to use than &lt;code&gt;ggplot2&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;This section will contain some Exploratory Data Analysis (more commonly known as ‘EDA’), which is a natural first step in any data analysis project. It is an extrememly important step and allows the analyst to inspect the data - what shape does the target and predictor variables have, are there any correlations between the variables that may be included in a predictive model, are there any outliers in the data, or any missing data… you get the point, EDA is very important!&lt;/p&gt;
&lt;p&gt;Well there is no missing data in the dataset being used… that has all been cleaned in the pre-processing stage that can be found in &lt;a href=&#34;https://github.com/JaseZiv/AFL-Crowd-Analytics/blob/master/src/preprocessing.R&#34;&gt;this&lt;/a&gt; R code.&lt;/p&gt;
&lt;div id=&#34;the-response-variable---attendance&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Response Variable - &lt;code&gt;Attendance&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Let’s look at our response variable - or the thing we’re trying to predict - &lt;code&gt;attendance&lt;/code&gt; at AFL premiership season games.&lt;/p&gt;
&lt;p&gt;We can see that the attendance figures are somewhat positively skewed. We’ll see if the few higher attendance games cause any issues later on. This variable may need to undergo some form of transformation, but more on that later.&lt;/p&gt;
&lt;p&gt;The median attendance to AFL games during the regular season is just under 32,500 for the 1,340 games played since 2013.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/predicting_crowds_files/figure-html/attendance-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;some-key-predictors&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Some Key Predictors&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_for_model &amp;lt;- afl_premiership_season %&amp;gt;%
  select(season, attendance, team1, team2, round, venue, game_time, home_median_experience, home_mean_experience, away_median_experience, away_mean_experience, home_300, home_milestone, away_300, away_milestone, count_milestones, rainfall_clean, min_temp, max_temp, last_five_days_rain, temperature_diff, HomeOddsOpen, AwayOddsOpen, HomeLineOpen, AwayLineOpen, odds_diff, rivalry_game, HomeTeamFav, team1_last_result, team2_last_result, split_round, home_team_finals_last_season, away_team_finals_last_season, season_stage, temperature, IsHomeMilestone, IsAwayMilestone, count_milestones, last_results, home_team_state, away_team_state, is_same_state, temperature_diff, home_odds_change, away_odds_change, home_line_change, away_line_change, second_home_game, home_season_points, home_score_for, home_percentage, home_ladder_pos, away_wins_last_three, away_season_points, away_score_for, away_percentage, away_ladder_pos, teams_in_eight, finals_last_season, home_wins_last_three, away_wins_last_three) %&amp;gt;% na.omit()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As was evident in the first post of this series, there was noticeable variation in attendances between the teams, and also whether teams won or lost their previous game. Finally, the first post showed that the home team’s favouritism status also seemed to have a relationship with attendance.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Categorical Features:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some of the key categorical variables created that we would expect to have an impact on crowd figures are displayed below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/predicting_crowds_files/figure-html/multi_plots-1.png&#34; width=&#34;1344&#34; /&gt;&lt;img src=&#34;/post/predicting_crowds_files/figure-html/multi_plots-2.png&#34; width=&#34;1344&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Some observations:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;There appears to be a relationship between the venue the game is played at and the attendance. Stadiums classified as &lt;code&gt;Other&lt;/code&gt; include secondary home grounds and some of the ovals not used in 2019. There were 238 of the 1,340 games at these stadiums&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Whether either the home or away team played finals last year seems to have a weak relationship with attendance. It may be useful to include in our model&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When the game is played and attendance appear to be related. &lt;code&gt;Weekday Afternoon&lt;/code&gt; and &lt;code&gt;Friday Afternoon&lt;/code&gt; are high because of ANZAC day clashes between Essendon and Collingwood no doubt. Friday and Sunday night games seem to draw better crowds. Could be a useful predictor&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There appears to be some variance in attendance figures between the different rounds during a season. Could be a useful predictor&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Games classed as “Rivalry Games” clearly draw larger attendances than non-rivalry games. Could be a useful predictor&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Whether the round was a split round (where some teams have a bye, or week off) or not doesn’t appear to be related to attendances. Might not be a useful predictor&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There appears to be slightly higher crowds when the home team has a player playing a milestone (either a 100, 200, 250 or 300th game), but the relationship certainly doesn’t appear strong. Might not be a useful predictor&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When the two competing teams are from the same state, crowds appear to be higher. Could be a useful predictor&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To be expected, games where the home team is playing the game at their second home ground (Hawthorn and North in Tasmania, Melbourne, Western Bulldogs in Darwin, etc) draw lower crowds. This is probably more to do with lower statium capacities, but may still be a useful feature&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Numerical Features:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To explore the relationship between the numerical features and &lt;code&gt;attendance&lt;/code&gt;, Pearson’s correlation will be employed.&lt;/p&gt;
&lt;p&gt;Using dplyr to select just the numerical features and then calculate the correlations on the converted matrix yields the below correlations with &lt;code&gt;attendance&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;numeric_features &amp;lt;- data_for_model %&amp;gt;% select_if(is.numeric)

numeric_features %&amp;gt;% 
  as.matrix() %&amp;gt;% 
  cor() %&amp;gt;% .[,&amp;quot;attendance&amp;quot;] %&amp;gt;% sort(decreasing = T)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##             attendance   home_mean_experience        home_percentage 
##             1.00000000             0.26242775             0.23603629 
## home_median_experience   home_wins_last_three   away_mean_experience 
##             0.23224717             0.17740024             0.16024146 
## away_median_experience     home_season_points        away_percentage 
##             0.12698259             0.10829187             0.10549367 
##   away_wins_last_three                 season           AwayLineOpen 
##             0.08874187             0.06906937             0.06717077 
##       temperature_diff       count_milestones       home_line_change 
##             0.04693253             0.04502199             0.03176978 
##         away_milestone               home_300         home_milestone 
##             0.02947022             0.02805048             0.02612771 
##     away_season_points               away_300       home_odds_change 
##             0.01964212             0.01305329             0.01234577 
##       away_odds_change         home_score_for       away_line_change 
##            -0.01732249            -0.02851372            -0.03176978 
##           AwayOddsOpen         rainfall_clean         away_score_for 
##            -0.05413613            -0.06190488            -0.06313146 
##           HomeLineOpen    last_five_days_rain                  round 
##            -0.06717077            -0.08122135            -0.08681637 
##               max_temp               min_temp        away_ladder_pos 
##            -0.09200801            -0.13811543            -0.15435393 
##           HomeOddsOpen              odds_diff            temperature 
##            -0.15999933            -0.16722767            -0.20128979 
##        home_ladder_pos 
##            -0.27541679&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While all correlations appear to be fairly weak, the following observations can be made:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The average experience (&lt;code&gt;home_mean_experience&lt;/code&gt;) for the home team, calculated as the average games played by each player at each game they play in, yields the highest Pearson correlation with attendance of 0.264&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Home team’s percentage (scores for / scores against) also have a correlation above 0.2 at 0.236&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The number of wins the home team had in their last three games had a Pearson correlation of 0.175, while the correlation of away team’s average playing experience was 0.159&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Strangely, the home team’s ladder position had a negative correlation, with a Pearson correlation of -0.273. The away team’s ladder position also had a negative correlation of -0.150&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Betting data shows some relationships; as the &lt;code&gt;HomeOddsOpen&lt;/code&gt; increase, the &lt;code&gt;attendance&lt;/code&gt; tends to decrease, which is somewhat expected. The &lt;code&gt;odds_diff&lt;/code&gt; variable (the difference between the home teams opening odds and the away teams) also has a weak negative relationship (correlation -0.168)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Weather data shows some relationships. As expected, the maximum temperation and rainfall, both on the day and the accumulation of last five day’s rainfall has a negative relationship with attendance (-0.091, -0.081 and -0.65 respectively)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;building-the-model&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Building the model&lt;/h1&gt;
&lt;p&gt;In any project that aims to build a machine learning model to predict the outcome of some response variable, it’s important to hold out a subset of your data when training the model. These two sets are generally referred to as training and test sets. The training set is what you pass to the model to build, and then the resulting predictions are made on the data the model hasn’t “seen”, to best mimic real life examples.&lt;/p&gt;
&lt;p&gt;In this case, the model will be trained on data from the 2013 to 2018 seasons inclusive (&lt;code&gt;afl_pre_2019&lt;/code&gt;), with the predictions then made on 2019 data that the model hasn’t seen, &lt;code&gt;afl_2019&lt;/code&gt;. This is done to ensure the model doesn’t “overfit” the data. Models that overfit the data generally perform worse on unseen accurrences.&lt;/p&gt;
&lt;div id=&#34;things-that-were-attempted-but-not-included-in-the-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Things that were attempted but not included in the model&lt;/h2&gt;
&lt;p&gt;The following features were thought to have some validity but when run through the model were found to have no predictive power:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The number of wins the teams had in their last three games didn’t contribute&lt;/li&gt;
&lt;li&gt;The rainfall on the day had no predictive power (however the total rainfall for the five days leading up to game day did)&lt;/li&gt;
&lt;li&gt;Milestone games made the model perform worse&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;whats-missing-would-be-good-to-have&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What’s missing / would be good to have&lt;/h2&gt;
&lt;p&gt;There is some information that wasn’t available publicly (or I didn’t try to get) which may prove handy in any future modelling work. These include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ticket pricing for games during each season to explore the effect ticket pricing has on attendance&lt;/li&gt;
&lt;li&gt;Whether tickets were given away to fans for games and whether that had an impact on attendances&lt;/li&gt;
&lt;li&gt;Any social media posts / newspaper text analysis regarding teams / topical matters involving players playing in games, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;afl_pre_2019 &amp;lt;- data_for_model %&amp;gt;% filter(season &amp;lt; 2019, season &amp;gt;= 2013)

afl_2019 &amp;lt;- data_for_model %&amp;gt;% filter(season == 2019)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;baseline-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Baseline Model&lt;/h2&gt;
&lt;p&gt;Before building a model to predict games, we want a baseline model to be able to compare to. The temptation would be there to use the average crowd for each game as a baseline, but the different venue capacities make this less than relevant. As a result, to calculate the baseline model, I will use the median attendance for each vanue (taking the average of the venues labelled “Other” as a whole), for each home-away team combo. For example, Collingwood(H) vs Essendon(A) is different to Essendon(H) vs Collingwood(A). The median is used because of the slightly skewed nature of AFL crowds.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;median_attendances &amp;lt;- afl_pre_2019 %&amp;gt;% 
  group_by(team1, team2, venue) %&amp;gt;% 
  summarise(baseline_attendance = median(attendance)) %&amp;gt;% ungroup()

baseline &amp;lt;- afl_2019 %&amp;gt;% select(team1, team2, venue, attendance) %&amp;gt;% 
  left_join(median_attendances, by = c(&amp;quot;team1&amp;quot;, &amp;quot;team2&amp;quot;, &amp;quot;venue&amp;quot;)) %&amp;gt;% 
  filter(!is.na(baseline_attendance))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using the average attendances per ground as our baseline, an RMSE of 6,816 and a mean absolute error of 4,958 is achieved. Any model that is built from here needs to be better than this.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;transforming-response-variable&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Transforming Response Variable&lt;/h2&gt;
&lt;p&gt;Because of the somewhat skewed nature of our response variable, it might be wise to undergo some sort of transformation to normalise it more. A log transformation is routinely used to “unskew” data. Below is the result of log transforming the attendance variable.&lt;/p&gt;
&lt;p&gt;It looks less skewed than the non-transformed variable, however (&lt;em&gt;spoiler alert&lt;/em&gt;), the models performed worse with attendance being log transformed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/predicting_crowds_files/figure-html/attendance_transformed-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;feature-selection-using-stepwise-method&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Feature Selection Using Stepwise Method&lt;/h1&gt;
&lt;p&gt;A popular method to select which features go into a model is using stepwise regression. This can either be performed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;forward&lt;/em&gt;, where variables are added one by one, with only those that improve the model’s explainability (R-squared) retained,&lt;/li&gt;
&lt;li&gt;&lt;em&gt;backward&lt;/em&gt;, which starts with all variables, then removes them if they don’t add value to the model’s explainability, or&lt;/li&gt;
&lt;li&gt;&lt;em&gt;both&lt;/em&gt;, which is an ensemble of both &lt;em&gt;forward&lt;/em&gt; and &lt;em&gt;backward&lt;/em&gt; feature selection.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using stepwise in &lt;em&gt;both&lt;/em&gt; directions maximised the model’s Adjusted R-squared measure at 0.87.&lt;/p&gt;
&lt;p&gt;When performing linear regression, we want to ensure there is no collinearity between the variables. One way to asses this is to calculate the Variable Inflation Factor (VIF). This is made easy with the &lt;code&gt;vif&lt;/code&gt; function in the &lt;code&gt;car&lt;/code&gt; package. A VIF above 5 is considered to be too high.&lt;/p&gt;
&lt;p&gt;While the round the game is played is just over 5 (5.7), we will keep this in, however &lt;code&gt;odds_diff&lt;/code&gt; and &lt;code&gt;home_score_for&lt;/code&gt; will be removed from the full model selected using stepwise and re-run.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;full_model &amp;lt;- lm(attendance ~ ., data = afl_pre_2019)


# Set seed for reproducibility
set.seed(123)

step.model &amp;lt;- MASS::stepAIC(full_model, direction = &amp;quot;both&amp;quot;, 
                      trace = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;car::vif(step.model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                                      GVIF Df GVIF^(1/(2*Df))
## team1                        3.760325e+07 17        1.670324
## team2                        8.911787e+00 17        1.066449
## round                        3.249472e+01  1        5.700414
## venue                        1.490291e+07  9        2.503312
## game_time                    3.502667e+00 11        1.058633
## home_milestone               1.077704e+00  1        1.038125
## rainfall_clean               1.600109e+00  1        1.264954
## min_temp                     2.442144e+00  1        1.562736
## max_temp                     2.943632e+00  1        1.715702
## last_five_days_rain          1.624607e+00  1        1.274601
## HomeOddsOpen                 7.850335e+01  1        8.860212
## AwayOddsOpen                 1.469414e+02  1       12.121938
## HomeLineOpen                 1.017707e+01  1        3.190152
## odds_diff                    1.645084e+02  1       12.826085
## rivalry_game                 1.682047e+00  1        1.296937
## split_round                  1.097575e+00  1        1.047652
## last_results                 1.901405e+00  3        1.113044
## is_same_state                2.561134e+00  1        1.600354
## home_season_points           1.171072e+01  1        3.422093
## home_score_for               4.401100e+01  1        6.634079
## away_season_points           1.013471e+01  1        3.183506
## away_ladder_pos              8.299211e+00  1        2.880835
## teams_in_eight               1.384744e+01  3        1.549631
## home_team_finals_last_season 1.855485e+00  1        1.362162&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# the backward selection model include a variable with hi collinearity (VIF = 12). Will recreate model without odds_diff
full_model_clean &amp;lt;- lm(attendance ~ team1 + team2 + round + venue + game_time + 
    home_milestone + rainfall_clean + min_temp + max_temp + last_five_days_rain + 
    HomeOddsOpen + AwayOddsOpen + HomeLineOpen + 
    rivalry_game + split_round + last_results + is_same_state + 
    home_season_points + away_season_points + 
    away_ladder_pos + teams_in_eight + home_team_finals_last_season, 
    data = afl_pre_2019)

# summary(full_model_clean)

car::vif(full_model_clean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                                      GVIF Df GVIF^(1/(2*Df))
## team1                        3.221921e+07 17        1.662750
## team2                        8.429548e+00 17        1.064706
## round                        1.151616e+01  1        3.393547
## venue                        1.470969e+07  9        2.501498
## game_time                    3.423992e+00 11        1.057540
## home_milestone               1.074063e+00  1        1.036370
## rainfall_clean               1.588738e+00  1        1.260451
## min_temp                     2.440252e+00  1        1.562131
## max_temp                     2.939080e+00  1        1.714374
## last_five_days_rain          1.623319e+00  1        1.274095
## HomeOddsOpen                 2.900135e+00  1        1.702978
## AwayOddsOpen                 3.400223e+00  1        1.843969
## HomeLineOpen                 9.825720e+00  1        3.134600
## rivalry_game                 1.680106e+00  1        1.296189
## split_round                  1.096713e+00  1        1.047241
## last_results                 1.885393e+00  3        1.111477
## is_same_state                2.559836e+00  1        1.599949
## home_season_points           7.899789e+00  1        2.810656
## away_season_points           9.963380e+00  1        3.156482
## away_ladder_pos              8.290049e+00  1        2.879245
## teams_in_eight               1.339704e+01  3        1.541114
## home_team_finals_last_season 1.848796e+00  1        1.359704&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The cleaned model’s Adjusted R-squared is 0.8652, while the RMSE was 6,474 and MAE 4,855. These results better the baseline model, but only just.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;best-model&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Best model:&lt;/h1&gt;
&lt;p&gt;Determining the “best” model is an interesting exercise. If the explainability powers of the model is what we’re after, then we want to maximise the Adjusted R-squared metric. This analysis is aimed at maximising the success of predicting crowds, and as such, the Root Mean Squared Error (RMSE) or Mean Absolute Error (MAE) are the metrics we’re going to focus on. Both measures can be related back to the response variable - attendance - the difference being that MAE is the average absolute error of the model (difference between prediction and actual), while the RMSE penalises the model the larger the error.&lt;/p&gt;
&lt;p&gt;For both RMSE and MAE, the below model results in the lowest RMSE and MAE when applied to the 2019 season games.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(123)

fit_lm &amp;lt;- lm(attendance ~ team1 + team2 + round + venue + game_time + I(HomeLineOpen * home_ladder_pos) + rivalry_game + last_results + last_five_days_rain + max_temp + min_temp + home_mean_experience + away_mean_experience + is_same_state + home_score_for + I(home_percentage * home_ladder_pos) + I(home_wins_last_three * round) + round * finals_last_season, data = afl_pre_2019)

summary(fit_lm)$adj.r.squared&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.8582593&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Adjusted R-Squared of the model is 0.858, indicating that almost 86% of the variablility in AFL attendances in the training set (2013-2018) is explained by the model.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Interaction Terms&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Features were not only used on their own in this model. Interaction terms wera also employed. The following features were combined to form a feature and gave the model a boost in predictive power:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;I(HomeLineOpen * home_ladder_pos)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;I(home_percentage * home_ladder_pos)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;I(home_wins_last_three * round)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;round * finals_last_season&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;analysing-the-best-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Analysing the best model&lt;/h2&gt;
&lt;p&gt;The first thing we want to do is ensure the residuals are normally distributed to satisfy the condition of normality for linear models.&lt;/p&gt;
&lt;p&gt;The below histogram suggests that the errors are fairly normally distributed and centred around zero. A good sign.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = data.frame(fit_lm$residuals), aes(x= fit_lm.residuals)) + 
  geom_histogram() +
  ggtitle(&amp;quot;ERRORS ARE CENTRED AROUND ZERO&amp;quot;) +
  scale_x_continuous(labels = comma, name = &amp;quot;Model Residuals&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/predicting_crowds_files/figure-html/residuals_plot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# ggsave(&amp;quot;plots/prediction_plots/errors_hist.png&amp;quot;, width = 30, height = 22, units = &amp;quot;cm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we can look at the coefficients of each of the predictor variables.&lt;/p&gt;
&lt;p&gt;To make inspecting these easier, the &lt;code&gt;broom&lt;/code&gt; package was used. Using the &lt;code&gt;tidy()&lt;/code&gt; function, the results of the summary lm output are nicely displayed in a DF.&lt;/p&gt;
&lt;p&gt;The coefficients for each of the predictor variables (other than home and away teams) are displayed below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a &amp;lt;- broom::tidy(fit_lm) %&amp;gt;% mutate(p.value = round(p.value, 5))

a %&amp;gt;% filter(!str_detect(term, &amp;quot;team1&amp;quot;), !str_detect(term, &amp;quot;team2&amp;quot;)) %&amp;gt;%  
  kableExtra::kable(format = &amp;quot;html&amp;quot;, escape = F) %&amp;gt;%
  kableExtra::kable_styling(&amp;quot;striped&amp;quot;, full_width = F) &lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
term
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
estimate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
std.error
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
statistic
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
p.value
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
(Intercept)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
61007.772536
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7066.622895
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8.6332288
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
round
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-628.797448
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
147.199874
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-4.2717255
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00002
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
venueCarrara
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-9384.433835
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4893.988254
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-1.9175432
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.05543
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
venueDocklands
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2025.790428
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1843.347042
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0989740
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.27202
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
venueGabba
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-12078.813180
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7915.867406
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-1.5258989
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.12732
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
venueKardinia Park
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-790.290125
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2477.093571
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.3190393
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.74976
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
venueM.C.G.
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14604.069479
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1859.992224
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7.8516831
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
venueOther
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-11316.633901
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1521.161777
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-7.4394677
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
venuePerth Stadium
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2344.181828
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2119.734512
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1058846
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.26902
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
venueS.C.G.
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-6985.844583
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2854.176355
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-2.4475869
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.01454
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
venueSydney Showground
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-13915.330942
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2344.860834
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-5.9343952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
game_timeFri Evening
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-14669.992661
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7858.171556
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-1.8668456
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.06219
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
game_timeFri Night
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-26232.422896
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6419.398624
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-4.0864300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00005
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
game_timeSat Afternoon
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-27517.789656
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6413.609760
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-4.2905307
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00002
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
game_timeSat Evening
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-28587.419367
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6425.144735
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-4.4493036
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00001
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
game_timeSat Night
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-27304.481145
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6416.346545
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-4.2554561
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00002
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
game_timeSun Afternoon
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-28302.693645
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6410.217064
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-4.4152473
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00001
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
game_timeSun Evening
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-30499.992506
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6441.388865
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-4.7350025
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
game_timeSun Night
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-29709.469650
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6969.788830
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-4.2626069
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00002
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
game_timeWeekday Afternoon
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-6264.436854
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6587.953778
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.9508927
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.34187
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
game_timeWeekday Evening
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-32666.780662
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8987.962304
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-3.6345035
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00029
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
game_timeWeekday Night
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-24296.860101
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6490.825702
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-3.7432618
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00019
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
I(HomeLineOpen * home_ladder_pos)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-3.929212
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.897336
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-4.3787523
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00001
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
rivalry_gameRivalry
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4243.471176
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1103.664170
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.8448935
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00013
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
last_resultsboth_won
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3278.290173
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
599.102681
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5.4720005
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
last_resultsonly_away_team_won
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1354.077316
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
536.942587
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.5218289
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.01181
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
last_resultsonly_home_team_won
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1381.030990
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
594.706552
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.3222058
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.02040
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
last_five_days_rain
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-44.287937
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12.297250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-3.6014505
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00033
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
max_temp
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
310.452321
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
61.108889
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5.0803137
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
min_temp
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-125.802409
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
59.279520
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-2.1221901
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.03404
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
home_mean_experience
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
25.443372
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14.678437
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.7333843
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.08331
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
away_mean_experience
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
45.390519
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14.339468
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.1654256
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00159
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
is_same_stateyes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8151.587887
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
601.638591
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13.5489778
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
home_score_for
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7.394136
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.692602
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4.3685025
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00001
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
I(home_percentage * home_ladder_pos)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-294.795766
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
66.179029
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-4.4545193
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00001
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
I(home_wins_last_three * round)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.645874
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19.738164
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1847119
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.85349
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
finals_last_seasonboth_played
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1691.406848
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1188.541482
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.4230945
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.15499
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
finals_last_seasonhome_only_played
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
953.657176
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1235.936253
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7716071
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.44051
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
finals_last_seasonneither_played
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
482.072356
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1101.460684
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.4376664
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.66171
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
round:finals_last_seasonboth_played
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17.403974
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
83.889701
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.2074626
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.83569
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
round:finals_last_seasonhome_only_played
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-13.710531
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
82.253765
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.1666858
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.86765
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
round:finals_last_seasonneither_played
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
21.455146
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
76.032301
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.2821846
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.77785
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;actual_2019crowds &amp;lt;- afl_2019$attendance

# fit linear model 
afl_2019$predicted_attendance &amp;lt;- predict(fit_lm, afl_2019)

# put a floor on AFL attendances - surely the AFL doesn&amp;#39;t let the crowd fall below 6,000
afl_2019$predicted_attendance &amp;lt;- ifelse(afl_2019$predicted_attendance &amp;lt; 6000, 6000, afl_2019$predicted_attendance)

# calculate the errors
error &amp;lt;- afl_2019$predicted_attendance - afl_2019$attendance&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we want to annalyse how well the model fit the relationship. This can be achieved by plotting the actual vs predicted values on a scatterplot.&lt;/p&gt;
&lt;p&gt;I can be seen that the linear model does a fairly good job on average. There model did under-predict some of the larger drawing games, while also predicting an attendance of over 30,000 to the Hawthorn vs GWS game at the MCG in round 8, which only drew 14,636 fans.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;afl_2019 %&amp;gt;% 
  ggplot(aes(x=attendance, y= predicted_attendance)) +
  geom_point() +
  geom_abline(slope = 1, intercept=0) +
  ggtitle(&amp;quot;MODEL UNDER-PREDICTED SOME\nLARGE DRAWING GAMES&amp;quot;) +
  scale_x_continuous(labels = comma, name = &amp;quot;Actual Attendance&amp;quot;) +
  scale_y_continuous(labels = comma, name = &amp;quot;Predicted Attendance&amp;quot;) +
  annotate(geom = &amp;quot;text&amp;quot;, x=83000, y= 55000, label = &amp;quot;Model under-predicted\non these games&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/predicting_crowds_files/figure-html/pred_v_actual-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# ggsave(&amp;quot;plots/prediction_plots/actual_v_pred.png&amp;quot;, width = 30, height = 22, units = &amp;quot;cm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can also look at how the model performed predicting crowds at each of the venues.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;afl_2019 %&amp;gt;% 
  mutate(error = predicted_attendance - attendance) %&amp;gt;% 
  ggplot(aes(x= error)) +
  geom_density() +
  geom_vline(xintercept = 0, linetype = 2) +
  facet_wrap(~ venue, scales = &amp;quot;free_y&amp;quot;, ncol = 2) +
  scale_x_continuous(labels = comma, name = &amp;quot;Error&amp;quot;) +
  ggtitle(&amp;quot;Exploring Errors by Venue&amp;quot;) +
  theme(axis.text.y = element_blank(), axis.title.y = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/predicting_crowds_files/figure-html/venue_errors-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# ggsave(&amp;quot;plots/prediction_plots/venue_errors.png&amp;quot;, width = 30, height = 22, units = &amp;quot;cm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The model tended to over-predict attendances at the Gabba, Perth Stadium, Sydney Showgrounds and even the MCG, while it under-predicted at Carrara and “Other”.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(paste0(&amp;quot;RMSE: &amp;quot;, sqrt(mean(error^2, na.rm = T))))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;RMSE: 6601.69023180541&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(paste0(&amp;quot;MAE: &amp;quot;, mean(abs(error), na.rm = T)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;MAE: 4881.5087837533&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;overall-performance-of-the-model&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Overall Performance of the Model&lt;/h1&gt;
&lt;p&gt;The final model selected achieved an RMSE of 5,953 and MAE of 4,466, meaning that on average, the model is off by just under 4,500 fans when predicting attendances. When compared to the baseline model (RMSE of 6,816 and a MAE of 4,958), this model betters the baseline by over 500 people on average, but also doesn’t have as many extreme errors.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Hopefully you’ve made it to here!&lt;/p&gt;
&lt;p&gt;I’d love to hear from you with any feedback / corrections / etc in the comments or get in &lt;a href=&#34;https://www.linkedin.com/in/jason-zivkovic-4a0a1926/&#34;&gt;touch&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Using Data To Determine Which AFL Fans Jump On The Bandwagon</title>
      <link>/blog/using-data-to-determine-which-afl-fans-jump-onthe-bandwagon/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/blog/using-data-to-determine-which-afl-fans-jump-onthe-bandwagon/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This post is the first in a two-part series on AFL crowds. This analysis will be a thorough look at AFL crowd numbers over the last 20 years, and will aim to discover which team’s fans are the biggest bandwagon jumpers. &lt;em&gt;Bandwagon Jumpers&lt;/em&gt; are those fans that are the loudest in the office or in your friendship group when things are going well, and the quietest when their team is losing. The analysis will use two questions to answer this:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Which team’s home attendance is affected more because of the previous week’s performance
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;Here I will introduce three new metrics to measure this effect&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Does a team’s betting odds affect home attendance&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;People all have their theories on which team’s fans are the worst offending bandwagoners; this analysis will try to answer it once and for all! Also, sefishly, I’m sick of people telling me that fans of my team - the Hawthorn Hawks (a team that has experienced tremendous success over the last 10 years) are the worst offenders.&lt;/p&gt;
&lt;div id=&#34;the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Data&lt;/h2&gt;
&lt;p&gt;Data was collected from a few different online sources. The game and attendance data was sourced using the &lt;a href=&#34;https://github.com/tidyverse/rvest&#34;&gt;rvest&lt;/a&gt; package from the amazing &lt;a href=&#34;https://afltables.com&#34;&gt;AFL Tables&lt;/a&gt;, while the betting data was sourced from the &lt;a href=&#34;http://www.aussportsbetting.com&#34;&gt;Australian Sports Betting&lt;/a&gt; website.&lt;/p&gt;
&lt;p&gt;All the code and data for this project is available on &lt;a href=&#34;https://github.com/JaseZiv/AFL-Crowd-Analytics&#34;&gt;GitHub&lt;/a&gt;. The &lt;a href=&#34;https://www.tidyverse.org/&#34;&gt;Tidyverse&lt;/a&gt; suite of packages features heavily throughout.&lt;/p&gt;
&lt;p&gt;The data is current to round 16 of the 2019 season.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Over the last 20 years, the median (the 50% mark and a better measure than the average on skewed data) crowd to AFL games was 33,600. The data is positively skewed with a tail that extends out to 100,000.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/afl_bandwagon_analysis_files/figure-html/attendance-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As expected for the AFL, the finals series at the end of the season draws larger crowds than the premiership (regular season for non-AFL fans) season. The median attendance for the premiership season is just over 33,000, while for finals it is over 58,000. The finals series are the flagship games for the AFL - they would hope these games would draw larger crowds.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/afl_bandwagon_analysis_files/figure-html/finals_vreg-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can’t glean a lot from finals since they’re well patronised irrespective of who’s playing, so the rest of the analysis will focus on the premiership season.&lt;/p&gt;
&lt;p&gt;The last 20 seasons have seen some peaks and throughs though, with median attendances ranging from just under 29,000 in 2012 to just over 36,800 in 2008. The low attendances in 2012-13 were no doubt fuelled by the introduction of the newest expansion teams - Gold Coast and Greater Western Sydney (GWS) - in regions that are traditionally not AFL strongholds. The last five years however have seen a rebound of sorts, as these clubs slowly build up fanbases (and in the case of GWS start to have some success).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/afl_bandwagon_analysis_files/figure-html/attendance_seasons-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;which-teams-draw-larger-attendances&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Which teams draw larger attendances&lt;/h1&gt;
&lt;p&gt;So what about the age old question asked around the water cooler… who has more fans?&lt;/p&gt;
&lt;p&gt;Well this post won’t be able to answer that question. What it can answer is which teams’s fans attend games in greater numbers?&lt;/p&gt;
&lt;p&gt;There are seven teams that have had above average crowds since the 2000 season:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Collingwood&lt;/li&gt;
&lt;li&gt;Essendon&lt;/li&gt;
&lt;li&gt;Richmond&lt;/li&gt;
&lt;li&gt;Adelaide&lt;/li&gt;
&lt;li&gt;Carlton&lt;/li&gt;
&lt;li&gt;West Coast&lt;/li&gt;
&lt;li&gt;Hawthorn&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Four of those clubs are Victorian clubs, with the other two from South Australia and Western Australia. This is important to note that even though the AFL is a national competition, these three states are traditionally stronghold states. Brisbane - despite their extreme success in the early part of this century and the fact that a Victorian club merged with then (Fitzroy Lions) - have the third lowest attendances. Only recent expansion teams GWS and Gold Coast have lower attendances. The north-east states are clearly a problem for the league.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/afl_bandwagon_analysis_files/figure-html/team_attendance-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;which-teams-home-attendance-is-affected-more-because-of-the-previous-weeks-performance&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Which team’s home attendance is affected more because of the previous week’s performance&lt;/h1&gt;
&lt;p&gt;To answer this question, we can look at the difference in attendance for each team the next game after a win or a loss. Three metrics have been created to help answer this question:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Losing Impact on Attendance (LIoA)&lt;/li&gt;
&lt;li&gt;Winning Impact on Attendance (WIoA)&lt;/li&gt;
&lt;li&gt;Overall Performance Impact (OPI)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To create the LIoA and WIoA metrics, the median home attendance (regadless if the previous game was a a win or loss) was calculated for each team. To calculate the LIoA, the median home attendance after a loss was claculated and the percentage difference between this and the overall median home attendance became the measure. The WIoA was calculated in almost the same way, but the median home attandance after a win was used instead.&lt;/p&gt;
&lt;p&gt;Finally, OPI is calculated as the difference between WIoA and LIoA.&lt;/p&gt;
&lt;p&gt;A few things to note using this method:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Round one games have been excluded as the previous game was the last season and there’s too much noise using that&lt;/li&gt;
&lt;li&gt;Only home games for each team have been used to calculate the metrics&lt;/li&gt;
&lt;li&gt;With a p-value &amp;lt; 0.05, the team’s last result is a significant predictor&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;First thing we can do is visualise the data. Using boxplots to show the team’s distribution of home attendances for games both after a win and loss, we can see that there are what appear to be considerable differences for some teams. Where the line in the middle of the box (the median) differs noticably between a win or loss the previous week is an indication that that team’s supporters may be less inclined to attend their team’s games after a loss (or more inclined after a win).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/afl_bandwagon_analysis_files/figure-html/after_win-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;losing-impact-on-attendance-lioa&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Losing Impact on Attendance (LIoA)&lt;/h2&gt;
&lt;p&gt;Hmmmm… well that certainly doesn’t help my case. Hawthorn’s Losing Impact on Attendance (LIoA) rating is -11.9% - a league worst, meaning that Hawthorn fan attendance at games after a loss is 13% lower than their season median home attendance. Another Victorian club, St Kilda, aren’t far behind, with a LIoA of -10.7%. GWS and Collingwood follow closely, with an LIoA of -7.9 and -7.6% respectively.&lt;/p&gt;
&lt;p&gt;At the other end of the spectrum, Geelong supporters appear to be unaffected by their team losing their prior game, with a 0.6% difference between their median home attendance. The Gold Coast Suns and South Australian club Adelaide are also fairly unaffected, with LIoA of -1.8% and -1.9% respectively.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;winning-impact-on-attendance-wioa&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Winning Impact on Attendance (WIoA)&lt;/h2&gt;
&lt;p&gt;Conversely, we can apply the same methodology to calculate a team’s Winning Impact on Attendance (WIoA) to determine which fans respond more positively after a win. The Melbourne Football Club’s fans appear to respond the most positively after their team win, with a WIoA of 13.6%. St Kilda are second on this list too, with a WIoA of 11.3% and North Melbourn are at 11.2%. Thankfully, my Hawks don’t top this measure, however with a WIoA of 10.3%, they’re not far behind.&lt;/p&gt;
&lt;p&gt;Again, Geelong fans have the best WIoA at less than half a percent, while Gold Coast and Essendon are also both under 2%.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;overall-performance-impact&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Overall Performance Impact&lt;/h2&gt;
&lt;p&gt;Calculating the difference between the two measures give an overall indicator of fan senstitvity to their team’s last performance. I hate to say it, but Hawthorn fans top this list with an OPI of 22.2%, just edging out St Kilda on 22.0%. Melbourne and GWS are at around the 18% mark, while North, Richmond, Collingwood and Carlton in the 16-17% range.&lt;/p&gt;
&lt;p&gt;This pains me to say, but Geelong fans are the most consistent set of fans with an OPI of 1.1% Gold Coast, Adelaide and Essendon supporters are also fairly consistent in their attendance.&lt;/p&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Team
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Median Home Attendance
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Attendance After Loss
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Attendance After Win
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
LIoA
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
WIoA
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
OPI
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Adelaide
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41897.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41095.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
42415.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0192&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: lightblue !important;&#34;&gt;0.0124&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0316&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brisbane Lions
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
25403.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
23943.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26872.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0575&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0578&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.1153&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Carlton
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
35147.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
33115.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
38743.5
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0578&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: orange !important;&#34;&gt;0.1023&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: orange !important;&#34;&gt;0.1601&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Collingwood
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
48261.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
44607.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
52592.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0757&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0897&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: orange !important;&#34;&gt;0.1654&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Essendon
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43947.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
42617.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
44736.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0303&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.018&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0483&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Fremantle
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34553.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
33539.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
36026.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0293&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0426&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0719&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Geelong
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
24857.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
24659.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
25078.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.008&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: lightblue !important;&#34;&gt;0.0089&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0169&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Gold Coast
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13247.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13080.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13528.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0126&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0212&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0338&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Greater Western Sydney
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10069.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9395.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11071.5
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0669&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0995&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: orange !important;&#34;&gt;0.1664&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hawthorn
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31925.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
28152.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
35202.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: red !important;&#34;&gt;-0.1182&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: orange !important;&#34;&gt;0.1026&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: red !important;&#34;&gt;0.2208&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Melbourne
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
28707.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
27266.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
32621.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0502&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: red !important;&#34;&gt;0.1363&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: orange !important;&#34;&gt;0.1865&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
North Melbourne
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
24062.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
22754.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26763.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0544&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: red !important;&#34;&gt;0.1123&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: orange !important;&#34;&gt;0.1667&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Port Adelaide
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
28206.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26652.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30197.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0551&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0706&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.1257&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Richmond
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39713.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
36821.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43240.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0728&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0888&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: orange !important;&#34;&gt;0.1616&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
St Kilda
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30497.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26974.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
33944.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: red !important;&#34;&gt;-0.1155&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: red !important;&#34;&gt;0.113&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: red !important;&#34;&gt;0.2285&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sydney
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29264.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
27715.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30863.5
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0529&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0547&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.1076&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
West Coast
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
38029.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
36710.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39436.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0347&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.037&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0717&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Western Bulldogs
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
27818.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26301.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
28769.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;-0.0546&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0342&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: grey !important;&#34;&gt;0.0888&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;does-a-teams-betting-odds-affect-home-attendance&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Does a team’s betting odds affect home attendance?&lt;/h1&gt;
&lt;p&gt;To answer this question, betting data was collected from the &lt;a href=&#34;http://www.aussportsbetting.com&#34;&gt;Australian Sports Betting&lt;/a&gt; website.&lt;/p&gt;
&lt;p&gt;Line data was available from 2013 onwards, so the crowd data for this question has been limited down to the last six seasons.&lt;/p&gt;
&lt;p&gt;The opening game lines were used for the Home Team. Where the line was within +/- 6 points (1 goal), the game was deemed to be &lt;code&gt;Neutral&lt;/code&gt;, meaning no one was the favourite. If the line was set above 6 points, then the Home Team was the &lt;code&gt;Favourite&lt;/code&gt;. Lastly, if the line was -6 points, the Home Team was the &lt;code&gt;Underdog&lt;/code&gt;. This has also been found to be a significant predictor, also with a p-value close to zero.&lt;/p&gt;
&lt;div id=&#34;underdog-impact&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Underdog Impact&lt;/h2&gt;
&lt;p&gt;When the home team is the underdog, what is the impact to their home attendance?&lt;/p&gt;
&lt;p&gt;Carlton fans appear to be the most affected by their team’s chance of victory - when they’re the underdog, Carlton’s home attendance is 8.5% lower than their overall median home attendance. Strangely, Melbourne’s home attendance actually increases when they’re the underdog, with the attendance 13.7% higher.&lt;/p&gt;
&lt;p&gt;Hawthorn feature near the top of this list too… not a good sign.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/afl_bandwagon_analysis_files/figure-html/underdog_impact-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;favourite-impact&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Favourite Impact&lt;/h2&gt;
&lt;p&gt;Wow… Ok this doesn’t look great. Hawthorn’s median attendance when favourite is over 45% higher than their overall home attendance since 2013. Geelong’s, just over 40%, is also abnormally high.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/afl_bandwagon_analysis_files/figure-html/fav_impact-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Well, that didn’t work out how I expected. Rather than busting the myth that Hawthorn fans are the biggest bandwagon jumpers in the league, I’ve actually added to the argument.&lt;/p&gt;
&lt;p&gt;Stay tuned for part two of this series, where I will attempt to build a predictive model that predicts AFL attendances.&lt;/p&gt;
&lt;p&gt;Feel free to leave any feedback / corrections / etc in the comments or get in &lt;a href=&#34;https://www.linkedin.com/in/jason-zivkovic-4a0a1926/&#34;&gt;touch&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
